<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Markdown的基础语法*超详细*（3）</title>
    <url>/2022/05/06/Markdown%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95(3)/</url>
    <content><![CDATA[<h1 id="markdown的基础语法超详细3"><a class="markdownIt-Anchor" href="#markdown的基础语法超详细3">#</a> Markdown 的基础语法<em>超详细</em> (3)</h1>
<p><strong><mark>part11. 代码块</mark></strong></p>
<p><em>所需格式: &lt;输入 ``` 然后输入可选的文字标识，加’return 键‘&gt;</em></p>
<p><em>示例:</em><br>
①</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">代码块</span><br><span class="line">代码块</span><br></pre></td></tr></table></figure>
<p>②（代语法高亮）‘带上 ruby’</p>
<figure class="highlight ruby"><table><tr><td class="code"><pre><span class="line"><span class="keyword">require</span><span class="string">&#x27;redcarpet&#x27;</span></span><br><span class="line">markdown=<span class="title class_">Redcarpet</span>.new(<span class="string">&quot;hello world&quot;</span>)</span><br><span class="line">puts markdown.to_html</span><br></pre></td></tr></table></figure>
<p><strong><mark>part12. 数学公式块</mark></strong></p>
<p><em>所需格式: &lt;输入 $$ 再按‘rerurn 键’触发效果，提供一个 LaTex 源代码输入区域&gt;</em></p>
<p><em>示例:</em></p>
<p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi mathvariant="bold">V</mi><mn>1</mn></msub><mo>×</mo><msub><mi mathvariant="bold">V</mi><mn>2</mn></msub><mo>=</mo><mrow><mo fence="true">∣</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="bold">i</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="bold">j</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi mathvariant="bold">k</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>X</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>u</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>u</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>X</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>v</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mfrac><mrow><mi mathvariant="normal">∂</mi><mi>Y</mi></mrow><mrow><mi mathvariant="normal">∂</mi><mi>v</mi></mrow></mfrac></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\mathbf{V}_1\times\mathbf{V}_2 =
\begin{vmatrix}
\mathbf{i} &amp; \mathbf{j} &amp;
\mathbf{k} \\
\frac{\partial X}{\partial u} &amp;
\frac{\partial Y}{\partial u} &amp; 0
\\
\frac{\partial X}{\partial v} &amp;
\frac{\partial Y}{\partial v} &amp; 0
\\
\end{vmatrix}
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83611em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord mathbf" style="margin-right:0.01597em;">V</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.682068em;vertical-align:-1.590108em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0919600000000003em;"><span style="top:-1.05597em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-1.65697em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.2579700000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.8589700000000002em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.45997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.4909600000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-4.09196em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500299999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.090108em;"><span style="top:-4.250108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">i</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">u</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.769892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.07847em;">X</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.590108em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.090108em;"><span style="top:-4.250108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">j</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight">u</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-1.769892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8801079999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">v</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal mtight" style="margin-right:0.22222em;">Y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.590108em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.090108em;"><span style="top:-4.250108em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathbf">k</span></span></span></span><span style="top:-3.0099999999999993em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-1.769892em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.590108em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.0919600000000003em;"><span style="top:-1.05597em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-1.65697em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.2579700000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.8589700000000002em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.45997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.4909600000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-4.09196em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.5500299999999998em;"><span></span></span></span></span></span></span></span></span></span></span></span></p>
<p><em>tips : 这部分语法较多，日后在进阶补充</em></p>
<p><strong><mark>part13. 脚注</mark></strong></p>
<p><em>所需格式：&lt;<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>: 加内容&gt; 然后可以在文章中加入脚注所指内容了</em></p>
<p><em>示例:</em></p>
<p><strong><mark>part14. 目录（TOC）</mark></strong></p>
<p><em>所需格式: &lt;输入 [ toc] 然后按‘return 键’&gt; 没有空格</em></p>
<p><em>示例:</em><br>
[toc]</p>
<p><strong><mark>part15.URL 网址</mark></strong><br>
<em>所需格式: <URL>, 这里带 &lt;&gt;, 不带也可以</em></p>
<p><em>示例:</em></p>
<p><a href="mailto:i@typora.io">i@typora.io</a></p>
<p>&lt;<a href="http://www.baidu.com">www.baidu.com</a>&gt;</p>
<p><mark>to be continued</mark></p>
<hr class="footnotes-sep">
<section class="footnotes">
<ol class="footnotes-list">
<li id="fn1" class="footnote-item"><p>Here is the <em>test</em> of the <strong>footnote</strong>. <a href="#fnref1" class="footnote-backref">↩︎</a></p>
</li>
</ol>
</section>
]]></content>
      <categories>
        <category>Markdown语法学习</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Linux学习讲义</title>
    <url>/2023/06/26/Linux%20%E5%AD%A6%E4%B9%A0%E8%AE%B2%E4%B9%89/</url>
    <content><![CDATA[<h1 id="linux-学习讲义"><a class="markdownIt-Anchor" href="#linux-学习讲义">#</a> Linux 学习讲义</h1>
<h4 id="1-常用命令的介绍"><a class="markdownIt-Anchor" href="#1-常用命令的介绍">#</a> 1 常用命令的介绍</h4>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">(1) ctrl c: 取消命令，并且换行</span><br><span class="line">(2) ctrl u: 清空本行命令</span><br><span class="line">(3) tab键：可以补全命令和文件名，如果补全不了快速按两下tab键，可以显示备选选项</span><br><span class="line">(4) <span class="built_in">ls</span>: 列出当前目录下所有文件，蓝色的是文件夹，白色的是普通文件，绿色的是可执行文件</span><br><span class="line">(5) <span class="built_in">pwd</span>: 显示当前路径</span><br><span class="line">(6) <span class="built_in">cd</span> XXX: 进入XXX目录下, <span class="built_in">cd</span> .. 返回上层目录</span><br><span class="line">(7) <span class="built_in">cp</span> XXX YYY: 将XXX文件复制成YYY，XXX和YYY可以是一个路径，比如../dir_c/a.txt，表示上层目录下的dir_c文件夹下的文件a.txt</span><br><span class="line">(8) <span class="built_in">mkdir</span> XXX: 创建目录XXX</span><br><span class="line">(9) <span class="built_in">rm</span> XXX: 删除普通文件;  <span class="built_in">rm</span> XXX -r: 删除文件夹</span><br><span class="line">(10) <span class="built_in">mv</span> XXX YYY: 将XXX文件移动到YYY，和<span class="built_in">cp</span>命令一样，XXX和YYY可以是一个路径；重命名也是用这个命令</span><br><span class="line">(11) <span class="built_in">touch</span> XXX: 创建一个文件</span><br><span class="line">(12) <span class="built_in">cat</span> XXX: 展示文件XXX中的内容</span><br><span class="line">(13) 复制文本</span><br><span class="line">    windows/Linux下：Ctrl + insert，Mac下：<span class="built_in">command</span> + c</span><br><span class="line">(14) 粘贴文本</span><br><span class="line">    windows/Linux下：Shift + insert，Mac下：<span class="built_in">command</span> + v</span><br></pre></td></tr></table></figure>
<h4 id="21-tmux的介绍"><a class="markdownIt-Anchor" href="#21-tmux的介绍">#</a> 2.1 tmux 的介绍</h4>
<p>tips: 在终端中复制是 ctrl+insert，粘贴时 shift+insert。同时由于我使用的 tmux 有过特殊的设置文件所以很多默认的都是 ctrl+b 的操作，在此处都替换为了 ctrl+a 的操作。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">功能：</span><br><span class="line">    (<span class="number">1</span>) 分屏。</span><br><span class="line">    (<span class="number">2</span>) 允许断开Terminal连接后，继续运行进程。</span><br><span class="line">结构：</span><br><span class="line">    一个tmux可以包含多个session，一个session可以包含多个window，一个window可以包含多个pane。</span><br><span class="line">    实例：</span><br><span class="line">        tmux:</span><br><span class="line">            session <span class="number">0</span>:</span><br><span class="line">                window <span class="number">0</span>:</span><br><span class="line">                    pane <span class="number">0</span></span><br><span class="line">                    pane <span class="number">1</span></span><br><span class="line">                    pane <span class="number">2</span></span><br><span class="line">                    ...</span><br><span class="line">                window <span class="number">1</span></span><br><span class="line">                window <span class="number">2</span></span><br><span class="line">                ...</span><br><span class="line">            session <span class="number">1</span></span><br><span class="line">            session <span class="number">2</span></span><br><span class="line">            ...</span><br><span class="line">操作：</span><br><span class="line">    (<span class="number">1</span>) tmux：新建一个session，其中包含一个window，window中包含一个pane，pane里打开了一个shell对话框。</span><br><span class="line">    (<span class="number">2</span>) 按下Ctrl + a后手指松开，然后按%：将当前pane左右平分成两个pane。</span><br><span class="line">    (<span class="number">3</span>) 按下Ctrl + a后手指松开，然后按<span class="string">&quot;（注意是双引号&quot;</span>）：将当前pane上下平分成两个pane。</span><br><span class="line">    (<span class="number">4</span>) Ctrl + d：关闭当前pane；如果当前window的所有pane均已关闭，则自动关闭window；如果当前session的所有window均已关闭，则自动关闭session。</span><br><span class="line">    (<span class="number">5</span>) 鼠标点击可以选pane。</span><br><span class="line">    (<span class="number">6</span>) 按下ctrl + a后手指松开，然后按方向键：选择相邻的pane。</span><br><span class="line">    (<span class="number">7</span>) 鼠标拖动pane之间的分割线，可以调整分割线的位置。</span><br><span class="line">    (<span class="number">8</span>) 按住ctrl + a的同时按方向键，可以调整pane之间分割线的位置。</span><br><span class="line">    (<span class="number">9</span>) 按下ctrl + a后手指松开，然后按z：将当前pane全屏/取消全屏。</span><br><span class="line">    (<span class="number">10</span>) 按下ctrl + a后手指松开，然后按d：挂起当前session。</span><br><span class="line">    (<span class="number">11</span>) tmux a：打开之前挂起的session。</span><br><span class="line">    (<span class="number">12</span>) 按下ctrl + a后手指松开，然后按s：选择其它session。</span><br><span class="line">        方向键 —— 上：选择上一项 session/window/pane</span><br><span class="line">        方向键 —— 下：选择下一项 session/window/pane</span><br><span class="line">        方向键 —— 右：展开当前项 session/window</span><br><span class="line">        方向键 —— 左：闭合当前项 session/<span class="built_in">window</span></span><br><span class="line">    (<span class="number">13</span>) 按下Ctrl + a后手指松开，然后按c：在当前session中创建一个新的window。</span><br><span class="line">    (<span class="number">14</span>) 按下Ctrl + a后手指松开，然后按w：选择其他window，操作方法与(<span class="number">12</span>)完全相同。</span><br><span class="line">    (<span class="number">15</span>) 按下Ctrl + a后手指松开，然后按PageUp：翻阅当前pane内的内容。</span><br><span class="line">    (<span class="number">16</span>) 鼠标滚轮：翻阅当前pane内的内容。</span><br><span class="line">    (<span class="number">17</span>) 在tmux中选中文本时，需要按住shift键。（仅支持Windows和Linux，不支持Mac，不过该操作并不是必须的，因此影响不大）</span><br><span class="line">    (<span class="number">18</span>) tmux中复制/粘贴文本的通用方式：</span><br><span class="line">        (<span class="number">1</span>) 按下Ctrl + a后松开手指，然后按[</span><br><span class="line">        (<span class="number">2</span>) 用鼠标选中文本，被选中的文本会被自动复制到tmux的剪贴板</span><br><span class="line">        (<span class="number">3</span>) 按下Ctrl + a后松开手指，然后按]，会将剪贴板中的内容粘贴到光标处</span><br></pre></td></tr></table></figure>
<h4 id="22-vim教程"><a class="markdownIt-Anchor" href="#22-vim教程">#</a> 2.2 vim 教程</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">功能：</span><br><span class="line">    (<span class="number">1</span>) 命令行模式下的文本编辑器。</span><br><span class="line">    (<span class="number">2</span>) 根据文件扩展名自动判别编程语言。支持代码缩进、代码高亮等功能。</span><br><span class="line">    (<span class="number">3</span>) 使用方式：vim filename</span><br><span class="line">        如果已有该文件，则打开它。</span><br><span class="line">        如果没有该文件，则打开个一个新的文件，并命名为filename</span><br><span class="line">模式：</span><br><span class="line">    (<span class="number">1</span>) 一般命令模式</span><br><span class="line">        默认模式。命令输入方式：类似于打游戏放技能，按不同字符，即可进行不同操作。可以复制、粘贴、删除文本等。</span><br><span class="line">    (<span class="number">2</span>) 编辑模式</span><br><span class="line">        在一般命令模式里按下i，会进入编辑模式。</span><br><span class="line">        按下ESC会退出编辑模式，返回到一般命令模式。</span><br><span class="line">    (<span class="number">3</span>) 命令行模式</span><br><span class="line">        在一般命令模式里按下:/?三个字母中的任意一个，会进入命令行模式。命令行在最下面。</span><br><span class="line">        可以查找、替换、保存、退出、配置编辑器等。</span><br><span class="line">操作：</span><br><span class="line">    (<span class="number">1</span>) i：进入编辑模式</span><br><span class="line">    (<span class="number">2</span>) ESC：进入一般命令模式</span><br><span class="line">    (<span class="number">3</span>) h 或 左箭头键：光标向左移动一个字符</span><br><span class="line">    (<span class="number">4</span>) j 或 向下箭头：光标向下移动一个字符</span><br><span class="line">    (<span class="number">5</span>) k 或 向上箭头：光标向上移动一个字符</span><br><span class="line">    (<span class="number">6</span>) l 或 向右箭头：光标向右移动一个字符</span><br><span class="line">    (<span class="number">7</span>) n&lt;Space&gt;：n表示数字，按下数字后再按空格，光标会向右移动这一行的n个字符</span><br><span class="line">    (<span class="number">8</span>) <span class="number">0</span> 或 功能键[Home]：光标移动到本行开头</span><br><span class="line">    (<span class="number">9</span>) $ 或 功能键[End]：光标移动到本行末尾</span><br><span class="line">    (<span class="number">10</span>) G：光标移动到最后一行</span><br><span class="line">    (<span class="number">11</span>) :n 或 nG：n为数字，光标移动到第n行</span><br><span class="line">    (<span class="number">12</span>) gg：光标移动到第一行，相当于<span class="number">1</span>G</span><br><span class="line">    (<span class="number">13</span>) n&lt;Enter&gt;：n为数字，光标向下移动n行</span><br><span class="line">    (<span class="number">14</span>) /word：向光标之下寻找第一个值为word的字符串。</span><br><span class="line">    (<span class="number">15</span>) ?word：向光标之上寻找第一个值为word的字符串。</span><br><span class="line">    (<span class="number">16</span>) n：重复前一个查找操作</span><br><span class="line">    (<span class="number">17</span>) N：反向重复前一个查找操作</span><br><span class="line">    (<span class="number">18</span>) :n1,n2s/word1/word2/g：n1与n2为数字，在第n1行与n2行之间寻找word1这个字符串，并将该字符串替换为<span class="built_in">word2</span></span><br><span class="line">    (<span class="number">19</span>) :<span class="number">1</span>,$s/word1/word2/g：将全文的word1替换为<span class="built_in">word2</span></span><br><span class="line">    (<span class="number">20</span>) :<span class="number">1</span>,$s/word1/word2/gc：将全文的word1替换为word2，且在替换前要求用户确认。</span><br><span class="line">    (<span class="number">21</span>) v：选中文本</span><br><span class="line">    (<span class="number">22</span>) d：删除选中的文本</span><br><span class="line">    (<span class="number">23</span>) dd: 删除当前行</span><br><span class="line">    (<span class="number">24</span>) y：复制选中的文本</span><br><span class="line">    (<span class="number">25</span>) yy: 复制当前行</span><br><span class="line">    (<span class="number">26</span>) p: 将复制的数据在光标的下一行/下一个位置粘贴</span><br><span class="line">    (<span class="number">27</span>) u：撤销</span><br><span class="line">    (<span class="number">28</span>) Ctrl + r：取消撤销</span><br><span class="line">    (<span class="number">29</span>) 大于号 &gt;：将选中的文本整体向右缩进一次</span><br><span class="line">    (<span class="number">30</span>) 小于号 &lt;：将选中的文本整体向左缩进一次</span><br><span class="line">    (<span class="number">31</span>) :w 保存</span><br><span class="line">    (<span class="number">32</span>) :w! 强制保存</span><br><span class="line">    (<span class="number">33</span>) :q 退出</span><br><span class="line">    (<span class="number">34</span>) :q! 强制退出</span><br><span class="line">    (<span class="number">35</span>) :wq 保存并退出</span><br><span class="line">    (<span class="number">36</span>) :set paste 设置成粘贴模式，取消代码自动缩进</span><br><span class="line">    (<span class="number">37</span>) :set nopaste 取消粘贴模式，开启代码自动缩进</span><br><span class="line">    (<span class="number">38</span>) :set nu 显示行号</span><br><span class="line">    (<span class="number">39</span>) :set nonu 隐藏行号</span><br><span class="line">    (<span class="number">40</span>) gg=G：将全文代码格式化</span><br><span class="line">    (<span class="number">41</span>) :noh 关闭查找关键词高亮</span><br><span class="line">    (<span class="number">42</span>) Ctrl + q：当vim卡死时，可以取消当前正在执行的命令</span><br><span class="line">异常处理：</span><br><span class="line">    每次用vim编辑文件时，会自动创建一个.filename.swp的临时文件。</span><br><span class="line">    如果打开某个文件时，该文件的swp文件已存在，则会报错。此时解决办法有两种：</span><br><span class="line">        (<span class="number">1</span>) 找到正在打开该文件的程序，并退出</span><br><span class="line">        (<span class="number">2</span>) 直接删掉该swp文件即可</span><br></pre></td></tr></table></figure>
<h4 id="3-shell语法"><a class="markdownIt-Anchor" href="#3-shell语法">#</a> 3 shell 语法</h4>
<h5 id="31-概论"><a class="markdownIt-Anchor" href="#31-概论">#</a> 3.1 概论</h5>
<hr>
<p>shell 是我们通过命令行与操作系统沟通的语言。</p>
<p>shell 脚本可以直接在命令行中执行，也可以将一套逻辑组织成一个文件，方便复用。<br>
终端中的命令行可以看成是一个 “<strong>shell 脚本在逐行执行</strong>”。</p>
<p>Linux 中常见的 shell 脚本有很多种，常见的有：</p>
<ul>
<li>Bourne Shell( <code>/usr/bin/sh</code>  或 <code>/bin/sh</code> )</li>
<li>Bourne Again Shell( <code>/bin/bash</code> )</li>
<li>C Shell( <code>/usr/bin/csh</code> )</li>
<li>K Shell( <code>/usr/bin/ksh</code> )</li>
<li>zsh</li>
<li>…</li>
</ul>
<p>Linux 系统中一般默认使用 bash，所以接下来讲解 bash 中的语法。<br>
文件开头需要写 <code>#! /bin/bash</code> ，指明 bash 为脚本解释器。</p>
<p><strong>脚本示例</strong><br>
新建一个 <code>test.sh</code>  文件，内容如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello World!&quot;</span></span><br></pre></td></tr></table></figure>
<p><strong>运行方式</strong><br>
作为可执行文件</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">chmod</span> +x test.sh  <span class="comment"># 使脚本具有可执行权限</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh  <span class="comment"># 当前路径下执行</span></span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ /home/acs/test.sh  <span class="comment"># 绝对路径下执行</span></span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ ~/test.sh  <span class="comment"># 家目录路径下执行</span></span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br></pre></td></tr></table></figure>
<p>用解释器执行</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ bash test.sh</span><br><span class="line">Hello World!  <span class="comment"># 脚本输出</span></span><br></pre></td></tr></table></figure>
<hr>
<h5 id="32-注释"><a class="markdownIt-Anchor" href="#32-注释">#</a> 3.2 注释</h5>
<hr>
<p><strong>单行注释</strong><br>
每行中 <code>#</code> 之后的内容均是注释。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 这是一行注释</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;Hello World&#x27;</span>  <span class="comment">#  这也是注释</span></span><br></pre></td></tr></table></figure>
<p><strong>多行注释</strong><br>
格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">:&lt;&lt;<span class="string">EOF</span></span><br><span class="line"><span class="string">第一行注释</span></span><br><span class="line"><span class="string">第二行注释</span></span><br><span class="line"><span class="string">第三行注释</span></span><br><span class="line"><span class="string">EOF</span></span><br></pre></td></tr></table></figure>
<p>其中 <code>EOF</code>  可以换成其它任意字符串。例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">:&lt;&lt;<span class="string">abc</span></span><br><span class="line"><span class="string">第一行注释</span></span><br><span class="line"><span class="string">第二行注释</span></span><br><span class="line"><span class="string">第三行注释</span></span><br><span class="line"><span class="string">abc</span></span><br><span class="line"></span><br><span class="line">:&lt;&lt;!</span><br><span class="line">第一行注释</span><br><span class="line">第二行注释</span><br><span class="line">第三行注释</span><br><span class="line">!</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="33-变量"><a class="markdownIt-Anchor" href="#33-变量">#</a> 3.3 变量</h5>
<hr>
<p><strong>定义变量</strong><br>
定义变量，不需要加 <code>$</code>  符号，例如：</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">name1=&#x27;yxc&#x27;  # 单引号定义字符串</span><br><span class="line">name2=&quot;yxc&quot;  # 双引号定义字符串</span><br><span class="line">name3=yxc    # 也可以不加引号，同样表示字符串</span><br></pre></td></tr></table></figure>
<p><strong>使用变量</strong><br>
使用变量，需要加上 <code>$</code>  符号，或者 <code>$&#123;&#125;</code>  符号。花括号是可选的，主要为了帮助解释器识别变量边界。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">name=yxc</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出yxc</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name&#125;</span>  <span class="comment"># 输出yxc</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name&#125;</span>acwing  <span class="comment"># 输出yxcacwing</span></span><br></pre></td></tr></table></figure>
<p><strong>只读变量</strong><br>
使用 <code>readonly</code>  或者 <code>declare</code>  可以将变量变为只读。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">name=yxc</span><br><span class="line"><span class="built_in">readonly</span> name</span><br><span class="line"><span class="built_in">declare</span> -r name  <span class="comment"># 两种写法均可</span></span><br><span class="line"></span><br><span class="line">name=abc  <span class="comment"># 会报错，因为此时name只读</span></span><br></pre></td></tr></table></figure>
<p><strong>删除变量</strong><br>
 <code>unset</code>  可以删除变量。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">name=yxc</span><br><span class="line"><span class="built_in">unset</span> name</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出空行</span></span><br></pre></td></tr></table></figure>
<p><strong>变量类型</strong></p>
<ol>
<li>
<p>自定义变量（局部变量）</p>
<p>子进程不能访问的变量</p>
</li>
<li>
<p>环境变量（全局变量）</p>
<p>子进程可以访问的变量</p>
</li>
</ol>
<p>自定义变量改成环境变量：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ name=yxc  <span class="comment"># 定义变量</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">export</span> name  <span class="comment"># 第一种方法</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">declare</span> -x name  <span class="comment"># 第二种方法</span></span><br></pre></td></tr></table></figure>
<p>环境变量改为自定义变量：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">export</span> name=yxc  <span class="comment"># 定义环境变量</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">declare</span> +x name  <span class="comment"># 改为自定义变量</span></span><br></pre></td></tr></table></figure>
<p><strong>字符串</strong><br>
字符串可以用单引号，也可以用双引号，也可以不用引号。</p>
<p>单引号与双引号的区别：</p>
<ul>
<li>
<p>单引号中的内容会原样输出，不会执行、不会取变量；</p>
</li>
<li>
<p>双引号中的内容可以执行、可以取变量；</p>
</li>
</ul>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">name=yxc  <span class="comment"># 不用引号</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;hello, $name \&quot;hh\&quot;&#x27;</span>  <span class="comment"># 单引号字符串，输出 hello, $name \&quot;hh\&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;hello, <span class="variable">$name</span> \&quot;hh\&quot;&quot;</span>  <span class="comment"># 双引号字符串，输出 hello, yxc &quot;hh&quot;</span></span><br></pre></td></tr></table></figure>
<p>获取字符串长度</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&quot;yxc&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#name&#125;</span>  <span class="comment"># 输出3</span></span><br></pre></td></tr></table></figure>
<p>提取子串</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&quot;hello, yxc&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;name:0:5&#125;</span>  <span class="comment"># 提取从0开始的5个字符</span></span><br></pre></td></tr></table></figure>
<hr>
<h5 id="34-默认变量"><a class="markdownIt-Anchor" href="#34-默认变量">#</a> 3.4 默认变量</h5>
<p>文件参数变量<br>
在执行 shell 脚本时，可以向脚本传递参数。 <code>$1</code>  是第一个参数， <code>$2</code>  是第二个参数，以此类推。特殊的， <code>$0</code>  是文件名（包含路径）。例如：</p>
<p>创建文件 <code>test.sh</code> ：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;文件名：&quot;</span><span class="variable">$0</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第一个参数：&quot;</span><span class="variable">$1</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第二个参数：&quot;</span><span class="variable">$2</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第三个参数：&quot;</span><span class="variable">$3</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;第四个参数：&quot;</span><span class="variable">$4</span></span><br></pre></td></tr></table></figure>
<p>然后执行该脚本：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">chmod</span> +x test.sh </span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh 1 2 3 4</span><br><span class="line">文件名：./test.sh</span><br><span class="line">第一个参数：1</span><br><span class="line">第二个参数：2</span><br><span class="line">第三个参数：3</span><br><span class="line">第四个参数：4</span><br></pre></td></tr></table></figure>
<p><strong>其它参数相关变量</strong></p>
<table>
<thead>
<tr>
<th>参数</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>$#</code></td>
<td>代表文件传入的参数个数，如上例中值为 4</td>
</tr>
<tr>
<td><code>$*</code></td>
<td>由所有参数构成的用空格隔开的字符串，如上例中值为 <code>&quot;$1 $2 $3 $4&quot;</code></td>
</tr>
<tr>
<td><code>$@</code></td>
<td>每个参数分别用双引号括起来的字符串，如上例中值为 <code>&quot;$1&quot; &quot;$2&quot; &quot;$3&quot; &quot;$4&quot;</code></td>
</tr>
<tr>
<td><code>$$</code></td>
<td>脚本当前运行的进程 ID</td>
</tr>
<tr>
<td><code>$?</code></td>
<td>上一条命令的退出状态（注意不是 stdout，而是 exit code）。0 表示正常退出，其他值表示错误</td>
</tr>
<tr>
<td><code>$(command)</code></td>
<td>返回 <code>command</code>  这条命令的 stdout（可嵌套）</td>
</tr>
<tr>
<td>`command`</td>
<td>返回 <code>command</code>  这条命令的 stdout（不可嵌套）</td>
</tr>
</tbody>
</table>
<hr>
<h5 id="35-数组"><a class="markdownIt-Anchor" href="#35-数组">#</a> 3.5 数组</h5>
<p>数组中可以存放多个不同类型的值，只支持一维数组，初始化时不需要指明数组大小。<br>
数组<strong>下标从 0 开始</strong>。</p>
<p><strong>定义</strong><br>
数组用小括号表示，元素之间用空格隔开。例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> yxc)</span><br></pre></td></tr></table></figure>
<p>也可以直接定义数组中某个元素的值：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">array[0]=1</span><br><span class="line">array[1]=abc</span><br><span class="line">array[2]=<span class="string">&quot;def&quot;</span></span><br><span class="line">array[3]=yxc</span><br></pre></td></tr></table></figure>
<p><strong>读取数组中某个元素的值</strong><br>
格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="variable">$&#123;array[index]&#125;</span></span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> yxc)</span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[0]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[1]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[2]&#125;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[3]&#125;</span></span><br></pre></td></tr></table></figure>
<p><strong>读取整个数组</strong><br>
格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="variable">$&#123;array[@]&#125;</span>  <span class="comment"># 第一种写法</span></span><br><span class="line"><span class="variable">$&#123;array[*]&#125;</span>  <span class="comment"># 第二种写法</span></span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> yxc)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[@]&#125;</span>  <span class="comment"># 第一种写法</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;array[*]&#125;</span>  <span class="comment"># 第二种写法</span></span><br></pre></td></tr></table></figure>
<p><strong>数组长度</strong><br>
类似于字符串</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="variable">$&#123;#array[@]&#125;</span>  <span class="comment"># 第一种写法</span></span><br><span class="line"><span class="variable">$&#123;#array[*]&#125;</span>  <span class="comment"># 第二种写法</span></span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">array=(1 abc <span class="string">&quot;def&quot;</span> yxc)</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array[@]&#125;</span>  <span class="comment"># 第一种写法</span></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$&#123;#array[*]&#125;</span>  <span class="comment"># 第二种写法</span></span><br></pre></td></tr></table></figure>
<hr>
<h5 id="36-expr命令"><a class="markdownIt-Anchor" href="#36-expr命令">#</a> 3.6 expr 命令</h5>
<p><code>expr</code>  命令用于求表达式的值，格式为：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">expr</span> 表达式</span><br></pre></td></tr></table></figure>
<p>表达式说明：</p>
<ul>
<li>
<p>用空格隔开每一项</p>
</li>
<li>
<p>用反斜杠放在 shell 特定的字符前面（发现表达式运行错误时，可以试试转义）</p>
</li>
<li>
<p>对包含空格和其他特殊字符的字符串要用引号括起来</p>
</li>
<li>
<p>expr 会在 <code>stdout</code>  中输出结果。如果为逻辑关系表达式，则结果为真时， <code>stdout</code>  输出 1，否则输出 0。</p>
</li>
<li>
<p>expr 的 <code>exit code</code> ：如果为逻辑关系表达式，则结果为真时， <code>exit code</code>  为 0，否则为 1。</p>
</li>
</ul>
<p><strong>字符串表达式</strong></p>
<ul>
<li>
<p><code>length STRING</code></p>
<p>返回 <code>STRING</code>  的长度</p>
</li>
<li>
<p><code>index STRING CHARSET</code></p>
<p><code>CHARSET中</code> 任意单个字符在 <code>STRING</code>  中最前面的字符位置，<strong>下标从 1 开始</strong>。如果在 <code>STRING</code>  中完全不存在 <code>CHARSET中</code> 的字符，则返回 0。</p>
</li>
<li>
<p><code>substr STRING POSITION LENGTH</code></p>
<p>返回 <code>STRING</code>  字符串中从 <code>POSITION</code>  开始，长度最大为 <code>LENGTH</code>  的子串。如果 <code>POSITION</code>  或 <code>LENGTH</code>  为负数，0 或非数值，则返回空字符串。</p>
</li>
</ul>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">str=<span class="string">&quot;Hello World!&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> length <span class="string">&quot;<span class="variable">$str</span>&quot;</span>`  <span class="comment"># ``不是单引号，表示执行该命令，输出12</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> index <span class="string">&quot;<span class="variable">$str</span>&quot;</span> aWd`  <span class="comment"># 输出7，下标从1开始</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> substr <span class="string">&quot;<span class="variable">$str</span>&quot;</span> 2 3`  <span class="comment"># 输出 ell</span></span><br></pre></td></tr></table></figure>
<p><strong>整数表达式</strong><br>
 <code>expr</code>  支持普通的算术操作，算术表达式优先级低于字符串表达式，高于逻辑关系表达式。</p>
<ul>
<li><code>+ -</code> <br>
 加减运算。两端参数会转换为整数，如果转换失败则报错。</li>
</ul>
<ul>
<li><code>* / %</code> <br>
 乘，除，取模运算。两端参数会转换为整数，如果转换失败则报错。</li>
</ul>
<ul>
<li><code>() </code> 可以改变优先级，但需要用反斜杠转义</li>
</ul>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> + <span class="variable">$b</span>`  <span class="comment"># 输出7</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> - <span class="variable">$b</span>`  <span class="comment"># 输出-1</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \* <span class="variable">$b</span>`  <span class="comment"># 输出12，*需要转义</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> / <span class="variable">$b</span>`  <span class="comment"># 输出0，整除</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> % <span class="variable">$b</span>` <span class="comment"># 输出3</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> \( <span class="variable">$a</span> + 1 \) \* \( <span class="variable">$b</span> + 1 \)`  <span class="comment"># 输出20，值为(a + 1) * (b + 1)</span></span><br></pre></td></tr></table></figure>
<p><strong>逻辑关系表达式</strong></p>
<ul>
<li>
<p><code>|</code></p>
<p>如果第一个参数非空且非 0，则返回第一个参数的值，否则返回第二个参数的值，但要求第二个参数的值也是非空或非 0，否则返回 0。如果第一个参数是非空或非 0 时，不会计算第二个参数。</p>
</li>
<li>
<p><code>&amp;</code></p>
<p>如果两个参数都非空且非 0，则返回第一个参数，否则返回 0。如果第一个参为 0 或为空，则不会计算第二个参数。</p>
</li>
<li>
<p><code>&lt; &lt;= = == != &gt;= &gt;</code> <br>
 比较两端的参数，如果为 true，则返回 1，否则返回 0。”==” 是”=” 的同义词。”expr” 首先尝试将两端参数转换为整数，并做算术比较，如果转换失败，则按字符集排序规则做字符比较。</p>
</li>
<li>
<p><code>() </code> 可以改变优先级，但需要用反斜杠转义</p>
</li>
</ul>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \&gt; <span class="variable">$b</span>`  <span class="comment"># 输出0，&gt;需要转义</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> <span class="string">&#x27;&lt;&#x27;</span> <span class="variable">$b</span>`  <span class="comment"># 输出1，也可以将特殊字符用引号引起来</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> <span class="string">&#x27;&gt;=&#x27;</span> <span class="variable">$b</span>`  <span class="comment"># 输出0</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \&lt;\= <span class="variable">$b</span>`  <span class="comment"># 输出1</span></span><br><span class="line"></span><br><span class="line">c=0</span><br><span class="line">d=5</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$c</span> \&amp; <span class="variable">$d</span>`  <span class="comment"># 输出0</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \&amp; <span class="variable">$b</span>`  <span class="comment"># 输出3</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$c</span> \| <span class="variable">$d</span>`  <span class="comment"># 输出5</span></span><br><span class="line"><span class="built_in">echo</span> `<span class="built_in">expr</span> <span class="variable">$a</span> \| <span class="variable">$b</span>`  <span class="comment"># 输出3</span></span><br></pre></td></tr></table></figure>
<hr>
<h5 id="37-read命令"><a class="markdownIt-Anchor" href="#37-read命令">#</a> 3.7 read 命令</h5>
<p><code>read</code>  命令用于从标准输入中读取单行数据。当读到文件结束符时， <code>exit code</code>  为 1，否则为 0。</p>
<p>参数说明</p>
<ul>
<li><code>-p</code> : 后面可以接提示信息</li>
<li><code>-t</code> ：后面跟秒数，定义输入字符的等待时间，超过等待时间后会自动忽略此命令</li>
</ul>
<p>实例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">read</span> name  <span class="comment"># 读入name的值</span></span><br><span class="line">acwing yxc  <span class="comment"># 标准输入</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出name的值</span></span><br><span class="line">acwing yxc  <span class="comment">#标准输出</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">read</span> -p <span class="string">&quot;Please input your name: &quot;</span> -t 30 name  <span class="comment"># 读入name的值，等待时间30秒</span></span><br><span class="line">Please input your name: acwing yxc  <span class="comment"># 标准输入</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">echo</span> <span class="variable">$name</span>  <span class="comment"># 输出name的值</span></span><br><span class="line">acwing yxc  <span class="comment"># 标准输出</span></span><br></pre></td></tr></table></figure>
<hr>
<h5 id="38-echo命令"><a class="markdownIt-Anchor" href="#38-echo命令">#</a> 3.8 echo 命令</h5>
<p><code>echo</code>  用于输出字符串。命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> STRING</span><br></pre></td></tr></table></figure>
<p><strong>显示普通字符串</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello AC Terminal&quot;</span></span><br><span class="line"><span class="built_in">echo</span> Hello AC Terminal  <span class="comment"># 引号可以省略</span></span><br></pre></td></tr></table></figure>
<p><strong>显示转义字符</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;\&quot;Hello AC Terminal\&quot;&quot;</span>  <span class="comment"># 注意只能使用双引号，如果使用单引号，则不转义</span></span><br><span class="line"><span class="built_in">echo</span> \&quot;Hello AC Terminal\&quot;  <span class="comment"># 也可以省略双引号</span></span><br></pre></td></tr></table></figure>
<p><strong>显示变量</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">name=yxc</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;My name is <span class="variable">$name</span>&quot;</span>  <span class="comment"># 输出 My name is yxc</span></span><br></pre></td></tr></table></figure>
<p><strong>显示换行</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hi\n&quot;</span>  <span class="comment"># -e 开启转义</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;acwing&quot;</span></span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Hi</span><br><span class="line"></span><br><span class="line">acwing</span><br></pre></td></tr></table></figure>
<p><strong>显示不换行</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hi \c&quot;</span> <span class="comment"># -e 开启转义 \c 不换行</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;acwing&quot;</span></span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Hi acwing</span><br></pre></td></tr></table></figure>
<p><strong>显示结果定向至文件</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;Hello World&quot;</span> &gt; output.txt  <span class="comment"># 将内容以覆盖的方式输出到output.txt中</span></span><br></pre></td></tr></table></figure>
<p><strong>原样输出字符串，不进行转义或取变量 (用单引号)</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">name=acwing</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;$name\&quot;&#x27;</span></span><br></pre></td></tr></table></figure>
<p>输出结果</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="variable">$name</span>\&quot;</span><br></pre></td></tr></table></figure>
<p>显示命令的执行结果</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> `<span class="built_in">date</span>`</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Wed Sep 1 11:45:33 CST 2021</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="39-printf命令"><a class="markdownIt-Anchor" href="#39-printf命令">#</a> 3.9 printf 命令</h5>
<p><code>printf</code>  命令用于格式化输出，类似于 <code>C/C++</code>  中的 <code>printf</code>  函数。</p>
<p>默认<strong>不会在字符串末尾添加换行符</strong>。</p>
<p>命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span> format-string [arguments...]</span><br></pre></td></tr></table></figure>
<p><strong>用法示例</strong><br>
脚本内容：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%10d.\n&quot;</span> 123  <span class="comment"># 占10位，右对齐</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%-10.2f.\n&quot;</span> 123.123321  <span class="comment"># 占10位，保留2位小数，左对齐</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;My name is %s\n&quot;</span> <span class="string">&quot;yxc&quot;</span>  <span class="comment"># 格式化输出字符串</span></span><br><span class="line"><span class="built_in">printf</span> <span class="string">&quot;%d * %d = %d\n&quot;</span>  2 3 `<span class="built_in">expr</span> 2 \* 3` <span class="comment"># 表达式的值作为参数</span></span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<h2 id="-code48-"><a class="markdownIt-Anchor" href="#-code48-">#</a> <figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">   123.</span><br><span class="line">123.12    .</span><br><span class="line">My name is yxc</span><br><span class="line">2 * 3 = 6</span><br></pre></td></tr></table></figure></h2>
<h5 id="310-test命令与判断符号"><a class="markdownIt-Anchor" href="#310-test命令与判断符号">#</a> 3.10 test 命令与判断符号 []</h5>
<p><strong>逻辑运算符 &amp;&amp; 和 ||</strong></p>
<ul>
<li>
<p><code>&amp;&amp;</code>  表示与， <code>|| </code> 表示或</p>
</li>
<li>
<p>二者具有短路原则：</p>
<p><code>expr1 &amp;&amp; expr2</code> ：当 <code>expr1</code>  为假时，直接忽略 <code>expr2</code></p>
<p><code>expr1 || expr2</code> ：当 <code>expr1</code>  为真时，直接忽略 <code>expr2</code></p>
</li>
<li>
<p>表达式的 <code>exit code</code>  为 0，表示真；为非零，表示假。（<strong>与 <code>C/C++</code>  中的定义相反</strong>）</p>
</li>
</ul>
<p><strong>test 命令</strong><br>
在命令行中输入 <code>man test</code> ，可以查看 <code>test</code>  命令的用法。</p>
<p><code>test</code>  命令用于判断文件类型，以及对变量做比较。</p>
<p><code>test</code>  命令用 <code>exit code</code>  返回结果，而不是使用 <code>stdout</code> 。0 表示真，非 0 表示假。</p>
<p>例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span> 2 -lt 3  <span class="comment"># 为真，返回值为0</span></span><br><span class="line"><span class="built_in">echo</span> $?  <span class="comment"># 输出上个命令的返回值，输出0</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">ls</span>  <span class="comment"># 列出当前目录下的所有文件</span></span><br><span class="line">homework  output.txt  test.sh  tmp</span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">test</span> -e test.sh &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">exist  <span class="comment"># test.sh 文件存在</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">test</span> -e test2.sh &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">Not exist  <span class="comment"># testh2.sh 文件不存在</span></span><br></pre></td></tr></table></figure>
<p><strong>文件类型判断</strong><br>
命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span> -e filename  <span class="comment"># 判断文件是否存在</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>测试参数</th>
<th>代表意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-e</td>
<td>文件是否存在</td>
</tr>
<tr>
<td>-f</td>
<td>是否为文件</td>
</tr>
<tr>
<td>-d</td>
<td>是否为目录</td>
</tr>
</tbody>
</table>
<p><strong>文件权限判断</strong><br>
命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span> -r filename  <span class="comment"># 判断文件是否可读</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>测试参数</th>
<th>代表意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-r</td>
<td>文件是否可读</td>
</tr>
<tr>
<td>-w</td>
<td>文件是否可写</td>
</tr>
<tr>
<td>-x</td>
<td>文件是否可执行</td>
</tr>
<tr>
<td>-s</td>
<td>是否为非空文件</td>
</tr>
</tbody>
</table>
<p><strong>整数间的比较</strong><br>
命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span> <span class="variable">$a</span> -eq <span class="variable">$b</span>  <span class="comment"># a是否等于b</span></span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>测试参数</th>
<th>代表意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-eq</td>
<td>a 是否等于 b</td>
</tr>
<tr>
<td>-ne</td>
<td>a 是否不等于 b</td>
</tr>
<tr>
<td>-gt</td>
<td>a 是否大于 b</td>
</tr>
<tr>
<td>-lt</td>
<td>a 是否小于 b</td>
</tr>
<tr>
<td>-ge</td>
<td>a 是否大于等于 b</td>
</tr>
<tr>
<td>-le</td>
<td>a 是否小于等于 b</td>
</tr>
</tbody>
</table>
<p><strong>字符串比较</strong></p>
<table>
<thead>
<tr>
<th>测试参数</th>
<th>代表意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>test -z STRING</td>
<td>判断 STRING 是否为空，如果为空，则返回 true</td>
</tr>
<tr>
<td>test -n STRING</td>
<td>判断 STRING 是否非空，如果非空，则返回 true（-n 可以省略）</td>
</tr>
<tr>
<td>test str1 == str2</td>
<td>判断 str1 是否等于 str2</td>
</tr>
<tr>
<td>test str1 != str2</td>
<td>判断 str1 是否不等于 str2</td>
</tr>
</tbody>
</table>
<p><strong>多重条件判定</strong><br>
命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">test</span> -r filename -a -x filename</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>测试参数</th>
<th>代表意义</th>
</tr>
</thead>
<tbody>
<tr>
<td>-a</td>
<td>两条件是否同时成立</td>
</tr>
<tr>
<td>-o</td>
<td>两条件是否至少一个成立</td>
</tr>
<tr>
<td>!</td>
<td>取反。如 test ! -x file，当 file 不可执行时，返回 true</td>
</tr>
</tbody>
</table>
<p><strong>判断符号 []</strong><br>
 <code>[]</code>  与 <code>test</code>  用法几乎一模一样，更常用于 <code>if</code>  语句中。另外 <code>[[]]</code>  是 <code>[]</code>  的加强版，支持的特性更多。</p>
<p>例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[ 2 -lt 3 ]  <span class="comment"># 为真，返回值为0</span></span><br><span class="line"><span class="built_in">echo</span> $?  <span class="comment"># 输出上个命令的返回值，输出0</span></span><br></pre></td></tr></table></figure>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">ls</span>  <span class="comment"># 列出当前目录下的所有文件</span></span><br><span class="line">homework  output.txt  test.sh  tmp</span><br><span class="line">acs@9e0ebfcd82d7:~$ [ -e test.sh ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">exist  <span class="comment"># test.sh 文件存在</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ [ -e test2.sh ] &amp;&amp; <span class="built_in">echo</span> <span class="string">&quot;exist&quot;</span> || <span class="built_in">echo</span> <span class="string">&quot;Not exist&quot;</span></span><br><span class="line">Not exist  <span class="comment"># testh2.sh 文件不存在</span></span><br></pre></td></tr></table></figure>
<p>注意：</p>
<ul>
<li><code>[]</code>  内的每一项都要用空格隔开</li>
<li>中括号内的变量，最好用双引号括起来</li>
<li>中括号内的常数，最好用单或双引号括起来</li>
</ul>
<p>例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">name=<span class="string">&quot;acwing yxc&quot;</span></span><br><span class="line">[ <span class="variable">$name</span> == <span class="string">&quot;acwing yxc&quot;</span> ]  <span class="comment"># 错误，等价于 [ acwing yxc == &quot;acwing yxc&quot; ]，参数太多</span></span><br><span class="line">[ <span class="string">&quot;<span class="variable">$name</span>&quot;</span> == <span class="string">&quot;acwing yxc&quot;</span> ]  <span class="comment"># 正确</span></span><br></pre></td></tr></table></figure>
<hr>
<h5 id="311-判断语句"><a class="markdownIt-Anchor" href="#311-判断语句">#</a> 3.11 判断语句</h5>
<p><strong>if…then 形式</strong><br>
类似于 <code>C/C++</code>  中的 <code>if-else</code>  语句。</p>
<p><strong>单层 if</strong><br>
 命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -gt 2 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>在范围内</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">3在范围内</span><br></pre></td></tr></table></figure>
<p><strong>单层 if-else</strong><br>
 命令格式</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">a=3</span><br><span class="line">b=4</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ! [ <span class="string">&quot;<span class="variable">$a</span>&quot;</span> -lt <span class="string">&quot;<span class="variable">$b</span>&quot;</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>不小于<span class="variable">$&#123;b&#125;</span></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>小于<span class="variable">$&#123;b&#125;</span></span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">3小于4</span><br></pre></td></tr></table></figure>
<p><strong>多层 if-elif-elif-else</strong><br>
 命令格式</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">elif</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">elif</span> condition</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">a=4</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$a</span> -eq 1 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于1</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$a</span> -eq 2 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于2</span><br><span class="line"><span class="keyword">elif</span> [ <span class="variable">$a</span> -eq 3 ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于3</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> 其他</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">其他</span><br></pre></td></tr></table></figure>
<p><strong>case…esac 形式</strong><br>
类似于 <code>C/C++</code>  中的 <code>switch</code>  语句。</p>
<p>命令格式</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> $变量名称 <span class="keyword">in</span></span><br><span class="line">    值1)</span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;  <span class="comment"># 类似于C/C++中的break</span></span><br><span class="line">    值2)</span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;</span><br><span class="line">    *)  <span class="comment"># 类似于C/C++中的default</span></span><br><span class="line">        语句1</span><br><span class="line">        语句2</span><br><span class="line">        ...</span><br><span class="line">        ;;</span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">a=4</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="variable">$a</span> <span class="keyword">in</span></span><br><span class="line">    1)</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于1</span><br><span class="line">        ;;  </span><br><span class="line">    2)</span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于2</span><br><span class="line">        ;;  </span><br><span class="line">    3)                                                </span><br><span class="line">        <span class="built_in">echo</span> <span class="variable">$&#123;a&#125;</span>等于3</span><br><span class="line">        ;;  </span><br><span class="line">    *)</span><br><span class="line">        <span class="built_in">echo</span> 其他</span><br><span class="line">        ;;  </span><br><span class="line"><span class="keyword">esac</span></span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">其他</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="512-循环语句"><a class="markdownIt-Anchor" href="#512-循环语句">#</a> 5.12 循环语句</h5>
<p><strong>for…in…do…done</strong><br>
 命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> var <span class="keyword">in</span> val1 val2 val3</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例 1，输出 a 2 cc，每个元素一行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a 2 cc</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例 2，输出当前路径下的所有文件名，每个文件名一行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> file <span class="keyword">in</span> `<span class="built_in">ls</span>`</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$file</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例 3，输出 1-10</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> $(<span class="built_in">seq</span> 1 10)</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例 4，使用 <code>&#123;1..10&#125; 或者 &#123;a..z&#125;</code></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> &#123;a..z&#125;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p><strong>for ((…;…;…)) do…done</strong><br>
 命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ((expression; condition; expression))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例，输出 1-10，每个数占一行：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ((i=1; i&lt;=10; i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p><strong>while…do…done 循环</strong><br>
命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例，文件结束符为 <code>Ctrl+d</code> ，输入文件结束符后 <code>read</code>  指令返回 false。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> name</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p><strong>until…do…done 循环</strong><br>
当条件为真时结束。</p>
<p>命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">until condition</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>示例，当用户输入 <code>yes</code>  或者 <code>YES</code>  时结束，否则一直等待读入。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">until [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> == <span class="string">&quot;yes&quot;</span> ] || [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> == <span class="string">&quot;YES&quot;</span> ]</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="built_in">read</span> -p <span class="string">&quot;Please input yes/YES to stop this program: &quot;</span> word</span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p><strong>break 命令</strong><br>
跳出当前一层循环，注意与 <code>C/C++</code>  不同的是： <code>break</code>  不能跳出 <code>case</code>  语句。</p>
<p>示例</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> name</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> ((i=1;i&lt;=10;i++))</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="keyword">case</span> <span class="variable">$i</span> <span class="keyword">in</span></span><br><span class="line">            8)</span><br><span class="line">                <span class="built_in">break</span></span><br><span class="line">                ;;</span><br><span class="line">            *)</span><br><span class="line">                <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line">                ;;</span><br><span class="line">        <span class="keyword">esac</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>该示例每读入非 EOF 的字符串，会输出一遍 1-7。<br>
该程序可以输入 <code>Ctrl+d</code>  文件结束符来结束，也可以直接用 <code>Ctrl+c</code>  杀掉该进程。</p>
<p><strong>continue 命令</strong><br>
跳出当前循环。</p>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> ((i=1;i&lt;=10;i++))</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">if</span> [ `<span class="built_in">expr</span> <span class="variable">$i</span> % 2` -eq 0 ]</span><br><span class="line">    <span class="keyword">then</span></span><br><span class="line">        <span class="built_in">continue</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$i</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>
<p>该程序输出 1-10 中的所有奇数。</p>
<p><strong>死循环的处理方式</strong><br>
如果 AC Terminal 可以打开该程序，则输入 <code>Ctrl+c</code>  即可。</p>
<p>否则可以直接关闭进程：</p>
<ol>
<li>使用 <code>top</code>  命令找到进程的 PID</li>
<li>输入 <code>kill -9 PID</code>  即可关掉此进程</li>
</ol>
<hr>
<h5 id="513-函数"><a class="markdownIt-Anchor" href="#513-函数">#</a> 5.13 函数</h5>
<p><code>bash</code>  中的函数类似于 <code>C/C++</code>  中的函数，但 <code>return</code>  的返回值与 C/C++ 不同，返回的是 <code>exit code</code> ，取值为 0-255，0 表示正常结束。</p>
<p>如果想获取函数的输出结果，可以通过 <code>echo</code>  输出到 <code>stdout</code>  中，然后通过 <code>$(function_name)</code>  来获取 <code>stdout</code>  中的结果。</p>
<p>函数的 <code>return</code>  值可以通过 <code>$?</code>  来获取。</p>
<p>命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">[<span class="keyword">function</span>] <span class="function"><span class="title">func_name</span></span>() &#123;  <span class="comment"># function关键字可以省略</span></span><br><span class="line">    语句1</span><br><span class="line">    语句2</span><br><span class="line">    ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>不获取 <code> return</code>  值和 <code>stdout</code>  值</strong><br>
示例</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    name=yxc</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$name</span>&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">func</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Hello yxc</span><br></pre></td></tr></table></figure>
<p><strong>获取 <code> return</code>  值和 <code>stdout</code>  值</strong><br>
不写 <code>return</code>  时，默认 <code>return 0</code> 。</p>
<p>示例</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    name=yxc</span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;Hello <span class="variable">$name</span>&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">return</span> 123</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">output=$(func)</span><br><span class="line">ret=$?</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;output = <span class="variable">$output</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;return = <span class="variable">$ret</span>&quot;</span></span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">output = Hello yxc</span><br><span class="line"><span class="built_in">return</span> = 123</span><br></pre></td></tr></table></figure>
<p><strong>函数的输入参数</strong><br>
在函数内， <code>$1</code>  表示第一个输入参数， <code>$2</code>  表示第二个输入参数，依此类推。</p>
<p>注意：函数内的 <code>$0</code>  仍然是文件名，而不是函数名。</p>
<p>示例：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="title">func</span></span>() &#123;  <span class="comment"># 递归计算 $1 + ($1 - 1) + ($1 - 2) + ... + 0</span></span><br><span class="line">    word=<span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> != <span class="string">&#x27;y&#x27;</span> ] &amp;&amp; [ <span class="string">&quot;<span class="variable">$&#123;word&#125;</span>&quot;</span> != <span class="string">&#x27;n&#x27;</span> ]</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        <span class="built_in">read</span> -p <span class="string">&quot;要进入func(<span class="variable">$1</span>)函数吗？请输入y/n：&quot;</span> word</span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line">	<span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$word</span>&quot;</span> == <span class="string">&#x27;n&#x27;</span> ]</span><br><span class="line">	<span class="keyword">then</span></span><br><span class="line">         <span class="built_in">echo</span> 0</span><br><span class="line">    	<span class="built_in">return</span> 0</span><br><span class="line">	<span class="keyword">fi</span>  </span><br><span class="line"></span><br><span class="line">	<span class="keyword">if</span> [ <span class="variable">$1</span> -le 0 ] </span><br><span class="line">	<span class="keyword">then</span></span><br><span class="line">    	<span class="built_in">echo</span> 0</span><br><span class="line">    	<span class="built_in">return</span> 0</span><br><span class="line">	<span class="keyword">fi</span>  </span><br><span class="line"></span><br><span class="line">	<span class="built_in">sum</span>=$(func $(<span class="built_in">expr</span> <span class="variable">$1</span> - 1))</span><br><span class="line">	<span class="built_in">echo</span> $(<span class="built_in">expr</span> <span class="variable">$sum</span> + <span class="variable">$1</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $(func 10)</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">55</span><br></pre></td></tr></table></figure>
<p><strong>函数内的局部变量</strong><br>
可以在函数内定义局部变量，作用范围仅在当前函数内。</p>
<p>可以在递归函数中定义局部变量。</p>
<p>命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">local</span> 变量名=变量值</span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="title">func</span></span>() &#123;</span><br><span class="line">    <span class="built_in">local</span> name=yxc</span><br><span class="line">    <span class="built_in">echo</span> <span class="variable">$name</span></span><br><span class="line">&#125;</span><br><span class="line">func</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$name</span></span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">yxc</span><br></pre></td></tr></table></figure>
<p>第一行为函数内的 name 变量，第二行为函数外调用 name 变量，会发现此时该变量不存在。</p>
<hr>
<h5 id="514-exit命令"><a class="markdownIt-Anchor" href="#514-exit命令">#</a> 5.14 exit 命令</h5>
<p><code>exit</code>  命令用来退出当前 <code>shell</code>  进程，并返回一个退出状态；使用 <code>$?</code>  可以接收这个退出状态。</p>
<p><code>exit</code>  命令可以接受一个整数值作为参数，代表退出状态。如果不指定，默认状态值是 0。</p>
<p><code>exit</code>  退出状态只能是一个介于 0~255 之间的整数，其中只有 0 表示成功，其它值都表示失败。</p>
<p>示例：</p>
<p>创建脚本 <code>test.sh</code> ，内容如下：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$#</span> -ne 1 ]  <span class="comment"># 如果传入参数个数等于1，则正常退出；否则非正常退出。</span></span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;arguments not valid&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;arguments valid&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br></pre></td></tr></table></figure>
<p>执行该脚本：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">chmod</span> +x test.sh </span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh acwing</span><br><span class="line">arguments valid</span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">echo</span> $?  <span class="comment"># 传入一个参数，则正常退出，exit code为0</span></span><br><span class="line">0</span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh </span><br><span class="line">arguments not valid</span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">echo</span> $?  <span class="comment"># 传入参数个数不是1，则非正常退出，exit code为1</span></span><br><span class="line">1</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="515-文件重定向"><a class="markdownIt-Anchor" href="#515-文件重定向">#</a> 5.15 文件重定向</h5>
<p>每个进程默认打开 3 个文件描述符：</p>
<ul>
<li><code>stdin</code>  标准输入，从命令行读取数据，文件描述符为 0</li>
<li><code>stdout</code>  标准输出，向命令行输出数据，文件描述符为 1</li>
<li><code>stderr</code>  标准错误输出，向命令行输出数据，文件描述符为 2</li>
</ul>
<p>可以用文件重定向将这三个文件重定向到其他文件中。</p>
<p><strong>重定向命令列表</strong></p>
<table>
<thead>
<tr>
<th>命令</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>command &gt; file</code></td>
<td>将 <code>stdout</code>  重定向到 <code>file</code>  中</td>
</tr>
<tr>
<td><code>command &lt; file</code></td>
<td>将 <code>stdin</code>  重定向到 <code>file</code>  中</td>
</tr>
<tr>
<td><code>command &gt;&gt; file</code></td>
<td>将 <code>stdout</code>  以追加方式重定向到 <code>file</code>  中</td>
</tr>
<tr>
<td><code>command n&gt; file</code></td>
<td>将文件描述符 <code>n</code>  重定向到 <code>file</code>  中</td>
</tr>
<tr>
<td><code>command n&gt;&gt; file</code></td>
<td>将文件描述符 <code>n</code>  以追加方式重定向到 <code>file</code>  中</td>
</tr>
</tbody>
</table>
<p><strong>输入和输出重定向</strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e <span class="string">&quot;Hello \c&quot;</span> &gt; output.txt  <span class="comment"># 将stdout重定向到output.txt中</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;World&quot;</span> &gt;&gt; output.txt  <span class="comment"># 将字符串追加到output.txt中</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> str &lt; output.txt  <span class="comment"># 从output.txt中读取字符串</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="variable">$str</span>  <span class="comment"># 输出结果：Hello World</span></span><br></pre></td></tr></table></figure>
<p><strong>同时重定向 stdin 和 stdout</strong><br>
 创建 bash 脚本：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">read</span> a</span><br><span class="line"><span class="built_in">read</span> b</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> $(<span class="built_in">expr</span> <span class="string">&quot;<span class="variable">$a</span>&quot;</span> + <span class="string">&quot;<span class="variable">$b</span>&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>创建 input.txt，里面的内容为：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">3</span><br><span class="line">4</span><br></pre></td></tr></table></figure>
<p>执行命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">chmod</span> +x test.sh  <span class="comment"># 添加可执行权限</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test.sh &lt; input.txt &gt; output.txt  <span class="comment"># 从input.txt中读取内容，将输出写入output.txt中</span></span><br><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">cat</span> output.txt  <span class="comment"># 查看output.txt中的内容</span></span><br><span class="line">7</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="516-引入外部脚本"><a class="markdownIt-Anchor" href="#516-引入外部脚本">#</a> 5.16 引入外部脚本</h5>
<p>类似于 <code>C/C++</code>  中的 <code>include</code>  操作， <code>bash</code>  也可以引入其他文件中的代码。</p>
<p>语法格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">. filename  <span class="comment"># 注意点和文件名之间有一个空格</span></span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> filename</span><br></pre></td></tr></table></figure>
<p><strong>示例</strong><br>
创建 <code>test1.sh</code> ，内容为：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line">name=yxc  <span class="comment"># 定义变量name</span></span><br></pre></td></tr></table></figure>
<p>然后创建 <code>test2.sh</code> ，内容为：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">source</span> test1.sh <span class="comment"># 或 . test1.sh</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> My name is: <span class="variable">$name</span>  <span class="comment"># 可以使用test1.sh中的变量</span></span><br></pre></td></tr></table></figure>
<p>执行命令：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">acs@9e0ebfcd82d7:~$ <span class="built_in">chmod</span> +x test2.sh </span><br><span class="line">acs@9e0ebfcd82d7:~$ ./test2.sh </span><br><span class="line">My name is: yxc</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="6-ssh"><a class="markdownIt-Anchor" href="#6-ssh">#</a> 6 ssh</h4>
<h5 id="61-ssh登录"><a class="markdownIt-Anchor" href="#61-ssh登录">#</a> 6.1 ssh 登录</h5>
<p>远程登录服务器：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh user@hostname</span><br></pre></td></tr></table></figure>
<ul>
<li><code>user</code> : 用户名</li>
<li><code>hostname</code> : IP 地址或域名</li>
</ul>
<p>第一次登录时会提示：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">The authenticity of host <span class="string">&#x27;123.57.47.211 (123.57.47.211)&#x27;</span> can<span class="string">&#x27;t be established.</span></span><br><span class="line"><span class="string">ECDSA key fingerprint is SHA256:iy237yysfCe013/l+kpDGfEG9xxHxm0dnxnAbJTPpG8.</span></span><br><span class="line"><span class="string">Are you sure you want to continue connecting (yes/no/[fingerprint])?</span></span><br></pre></td></tr></table></figure>
<p>输入 <code>yes</code> ，然后回车即可。<br>
这样会将该服务器的信息记录在 <code>~/.ssh/known_hosts</code>  文件中。</p>
<p>然后输入密码即可登录到远程服务器中。</p>
<p>默认登录端口号为 22。如果想登录某一特定端口：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh user@hostname -p 22</span><br></pre></td></tr></table></figure>
<p>配置文件<br>
创建文件  <code>~/.ssh/config</code> 。</p>
<p>然后在文件中输入：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">Host myserver1</span><br><span class="line">    HostName IP地址或域名</span><br><span class="line">    User 用户名</span><br><span class="line"></span><br><span class="line">Host myserver2</span><br><span class="line">    HostName IP地址或域名</span><br><span class="line">    User 用户名</span><br></pre></td></tr></table></figure>
<p>之后再使用服务器时，可以直接使用别名 <code>myserver1</code> 、 <code>myserver2</code> 。</p>
<p><strong>密钥登录</strong><br>
创建密钥：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-keygen</span><br></pre></td></tr></table></figure>
<p>然后一直回车即可。</p>
<p>执行结束后， <code>~/.ssh/</code>  目录下会多两个文件：</p>
<ul>
<li><code>id_rsa</code> ：私钥</li>
<li><code>id_rsa.pub</code> ：公钥</li>
</ul>
<p>之后想免密码登录哪个服务器，就将公钥传给哪个服务器即可。</p>
<p>例如，想免密登录 <code>myserver</code>  服务器。则将公钥中的内容，复制到 <code>myserver</code>  中的 <code>~/.ssh/authorized_keys</code>  文件里即可。</p>
<p>也可以使用如下命令一键添加公钥：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh-copy-id myserver</span><br></pre></td></tr></table></figure>
<p><strong>执行命令</strong><br>
命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh user@hostname <span class="built_in">command</span></span><br></pre></td></tr></table></figure>
<p>例如：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh user@hostname <span class="built_in">ls</span> -a</span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 单引号中的$i可以求值</span></span><br><span class="line">ssh myserver <span class="string">&#x27;for ((i = 0; i &lt; 10; i ++ )) do echo $i; done&#x27;</span></span><br></pre></td></tr></table></figure>
<p>或者</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 双引号中的$i不可以求值</span></span><br><span class="line">ssh myserver <span class="string">&quot;for ((i = 0; i &lt; 10; i ++ )) do echo <span class="variable">$i</span>; done&quot;</span></span><br></pre></td></tr></table></figure>
<hr>
<h5 id="62-scp传文件"><a class="markdownIt-Anchor" href="#62-scp传文件">#</a> 6.2 scp 传文件</h5>
<p>命令格式：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">scp <span class="built_in">source</span> destination</span><br></pre></td></tr></table></figure>
<p>将 <code>source</code>  路径下的文件复制到 <code>destination</code>  中</p>
<p>一次复制多个文件：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">scp source1 source2 destination</span><br></pre></td></tr></table></figure>
<p>复制文件夹：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">scp -r ~/tmp myserver:/home/acs/</span><br></pre></td></tr></table></figure>
<p>将本地家目录中的 <code>tmp</code>  文件夹复制到 <code>myserver</code>  服务器中的 <code>/home/acs/</code>  目录下。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">scp -r ~/tmp myserver:homework/</span><br></pre></td></tr></table></figure>
<p>将本地家目录中的 <code>tmp</code>  文件夹复制到 <code>myserver</code>  服务器中的 <code>~/homework/</code>  目录下。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">scp -r myserver:homework .</span><br></pre></td></tr></table></figure>
<p>将 <code>myserver</code>  服务器中的 <code>~/homework/</code>  文件夹复制到本地的当前路径下。</p>
<p>指定服务器的端口号：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">scp -P 22 source1 source2 destination</span><br></pre></td></tr></table></figure>
<p><strong>注意：</strong>  <code>scp</code>  的 <code>-r -P</code>  等参数尽量加在 <code>source</code>  和 <code>destination</code>  之前。</p>
<p><strong>使用 <code>scp</code>  配置其他服务器的 <code>vim</code>  和 <code>tmux</code> </strong></p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">scp ~/.vimrc ~/.tmux.conf myserver:</span><br></pre></td></tr></table></figure>
<hr>
<h4 id="7-git"><a class="markdownIt-Anchor" href="#7-git">#</a> 7 git</h4>
<h5 id="71-git基本概念"><a class="markdownIt-Anchor" href="#71-git基本概念">#</a> 7.1. git 基本概念</h5>
<ul>
<li>工作区：仓库的目录。工作区是独立于各个分支的。</li>
<li>暂存区：数据暂时存放的区域，类似于工作区写入版本库前的缓存区。暂存区是独立于各个分支的。</li>
<li>版本库：存放所有已经提交到本地仓库的代码版本</li>
<li>版本结构：树结构，树中每个节点代表一个代码版本。</li>
</ul>
<hr>
<h5 id="72-git常用命令"><a class="markdownIt-Anchor" href="#72-git常用命令">#</a> 7.2 git 常用命令</h5>
<ol>
<li><code>git config --global user.name xxx</code> ：设置全局用户名，信息记录在～/.gitconfig 文件中</li>
<li><code>git config --global user.email xxx@xxx.com</code> ：设置全局邮箱地址，信息记录在～/.gitconfig 文件中</li>
<li><code>git init</code> ：将当前目录配置成 git 仓库，信息记录在隐藏的.git 文件夹中</li>
<li><code>git add XX</code> ：将 XX 文件添加到暂存区
<ul>
<li><code>git add .</code> ：将所有待加入暂存区的文件加入暂存区</li>
</ul>
</li>
<li><code>git rm --cached XX</code> ：将文件从仓库索引目录中删掉</li>
<li><code>git commit -m &quot;给自己看的备注信息&quot;</code> ：将暂存区的内容提交到当前分支</li>
<li><code>git status</code> ：查看仓库状态</li>
<li><code>git diff XX</code> ：查看 XX 文件相对于暂存区修改了哪些内容</li>
<li><code>git log</code> ：查看当前分支的所有版本</li>
<li><code>git reflog</code> ：查看 HEAD 指针的移动历史（包括被回滚的版本）</li>
<li><code>git reset --hard HEAD^</code>  或  <code>git reset --hard HEAD~</code> ：将代码库回滚到上一个版本
<ul>
<li><code>git reset --hard HEAD^^</code> ：往上回滚两次，以此类推</li>
<li><code>git reset --hard HEAD~100</code> ：往上回滚 100 个版本</li>
<li><code>git reset --hard 版本号</code> ：回滚到某一特定版本</li>
</ul>
</li>
<li><code>git checkout — XX</code>  或 <code>git restore XX</code> ：将 XX 文件尚未加入暂存区的修改全部撤销</li>
<li><code>git remote add origin git@git.acwing.com:xxx/XXX.git</code> ：将本地仓库关联到远程仓库</li>
<li><code>git push -u (第一次需要-u以后不需要)</code> ：将当前分支推送到远程仓库
<ul>
<li><code>git push origin branch_name</code> ：将本地的某个分支推送到远程仓库</li>
</ul>
</li>
<li><code>git clone git@git.acwing.com:xxx/XXX.git</code> ：将远程仓库 XXX 下载到当前目录下</li>
<li><code>git checkout -b branch_name</code> ：创建并切换到 <code>branch_name</code>  这个分支</li>
<li><code>git branch</code> ：查看所有分支和当前所处分支</li>
<li><code>git checkout branch_name</code> ：切换到 <code>branch_name</code>  这个分支</li>
<li><code>git merge branch_name</code> ：将分支 <code>branch_name</code>  合并到当前分支上</li>
<li><code>git branch -d branch_name</code> ：删除本地仓库的 <code>branch_name</code>  分支</li>
<li><code>git branch branch_name</code> ：创建新分支</li>
<li><code>git push --set-upstream origin branch_name</code> ：设置本地的 <code>branch_name</code>  分支对应远程仓库的 <code>branch_name</code>  分支</li>
<li><code>git push -d origin branch_name</code> ：删除远程仓库的 <code>branch_name</code>  分支</li>
<li><code>git pull</code> ：将远程仓库的当前分支与本地仓库的当前分支合并
<ul>
<li><code>git pull origin branch_name</code> ：将远程仓库的 <code>branch_name</code>  分支与本地仓库的当前分支合并</li>
</ul>
</li>
<li><code>git branch --set-upstream-to=origin/branch_name1 branch_name2</code> ：将远程的 <code>branch_name1</code>  分支与本地的 <code>branch_name2</code>  分支对应</li>
<li><code>git checkout -t origin/branch_name </code> 将远程的 <code>branch_name</code>  分支拉取到本地</li>
<li><code>git stash</code> ：将工作区和暂存区中尚未提交的修改存入栈中</li>
<li><code>git stash apply</code> ：将栈顶存储的修改恢复到当前分支，但不删除栈顶元素</li>
<li><code>git stash drop</code> ：删除栈顶存储的修改</li>
<li><code>git stash pop</code> ：将栈顶存储的修改恢复到当前分支，同时删除栈顶元素</li>
<li><code>git stash list</code> ：查看栈中所有元素</li>
</ol>
<hr>
<h4 id="8-管道-环境变量与常用命令"><a class="markdownIt-Anchor" href="#8-管道-环境变量与常用命令">#</a> 8 管道、环境变量与常用命令</h4>
<h5 id="81-管道"><a class="markdownIt-Anchor" href="#81-管道">#</a> 8.1 管道</h5>
<p><strong>概念</strong><br>
管道类似于文件重定向，可以将前一个命令的 <code>stdout</code>  重定向到下一个命令的 <code>stdin</code> 。</p>
<p><strong>要点</strong><br>
管道命令仅处理 <code>stdout</code> ，会忽略 <code>stderr</code> 。<br>
管道右边的命令必须能接受 <code>stdin</code> 。<br>
多个管道命令可以串联。<br>
<strong>与文件重定向的区别</strong></p>
<ul>
<li>文件重定向左边为命令，右边为文件。</li>
<li>管道左右两边均为命令，左边有 <code>stdout</code> ，右边有 <code>stdin</code> 。</li>
</ul>
<p><strong>举例</strong><br>
统计当前目录下所有 python 文件的总行数，其中 <code>find</code> 、 <code>xargs</code> 、 <code>wc</code>  等命令可以参考常用命令这一节内容。</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">find . -name <span class="string">&#x27;*.py&#x27;</span> | xargs <span class="built_in">cat</span> | <span class="built_in">wc</span> -l</span><br></pre></td></tr></table></figure>
<hr>
<h5 id="82-环境变量"><a class="markdownIt-Anchor" href="#82-环境变量">#</a> 8.2 环境变量</h5>
<p><strong>概念</strong><br>
 Linux 系统中会用很多环境变量来记录<strong>配置信息</strong>。<br>
环境变量类似于全局变量，可以被各个进程访问到。我们可以通过修改环境变量来方便地修改系统配置。</p>
<p><strong>查看</strong><br>
列出当前环境下的所有环境变量：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">env</span>  <span class="comment"># 显示当前用户的变量</span></span><br><span class="line"><span class="built_in">set</span>  <span class="comment"># 显示当前shell的变量，包括当前用户的变量;</span></span><br><span class="line"><span class="built_in">export</span>  <span class="comment"># 显示当前导出成用户变量的shell变量</span></span><br></pre></td></tr></table></figure>
<p>输出某个环境变量的值：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="variable">$PATH</span></span><br></pre></td></tr></table></figure>
<p><strong>修改</strong><br>
环境变量的定义、修改、删除操作可以参考 shell 语法中的变量这部分内容。</p>
<p>为了将对环境变量的修改应用到未来所有环境下，可以将修改命令放到 <code>~/.bashrc</code>  文件中。<br>
修改完 <code>~/.bashrc</code>  文件后，记得执行 <code>source ~/.bashrc</code> ，来将修改应用到当前的 <code>bash</code>  环境下。</p>
<p>为何将修改命令放到 <code>~/.bashrc</code> ，就可以确保修改会影响未来所有的环境呢？</p>
<ul>
<li>每次启动 <code>bash</code> ，都会先执行 <code>~/.bashrc</code> 。</li>
<li>每次 <code>ssh</code>  登陆远程服务器，都会启动一个 <code>bash</code>  命令行给我们。</li>
<li>每次 <code>tmux</code>  新开一个 <code>pane</code> ，都会启动一个 <code>bash</code>  命令行给我们。</li>
<li>所以未来所有新开的环境都会加载我们修改的内容。</li>
</ul>
<p><strong>常见环境变量</strong></p>
<ol>
<li><code>HOME</code> ：用户的家目录。</li>
<li><code>PATH</code> ：可执行文件（命令）的存储路径。路径与路径之间用：分隔。当某个可执行文件同时出现在多个路径中时，会选择从左到右数第一个路径中的执行。<strong>下列所有存储路径的环境变量，均采用从左到右的优先顺序。</strong></li>
<li><code>LD_LIBRARY_PATH</code> ：用于指定动态链接库 (.so 文件) 的路径，其内容是以冒号分隔的路径列表。</li>
<li><code>C_INCLUDE_PATH</code> ：C 语言的头文件路径，内容是以冒号分隔的路径列表。</li>
<li><code>CPLUS_INCLUDE_PATH</code> ：CPP 的头文件路径，内容是以冒号分隔的路径列表。</li>
<li><code>PYTHONPATH</code> ：Python 导入包的路径，内容是以冒号分隔的路径列表。</li>
<li><code>JAVA_HOME</code> ：jdk 的安装目录。</li>
<li><code>CLASSPATH</code> ：存放 Java 导入类的路径，内容是以冒号分隔的路径列表。</li>
</ol>
<hr>
<h5 id="83-常用命令"><a class="markdownIt-Anchor" href="#83-常用命令">#</a> 8.3 常用命令</h5>
<ol>
<li><strong>系统状况</strong></li>
<li><code>top</code> ：查看所有进程的信息（Linux 的任务管理器）
<ul>
<li>打开后，输入 <code>M</code> ：按使用内存排序</li>
<li>打开后，输入 <code>P</code> ：按使用 CPU 排序</li>
<li>打开后，输入 <code>q</code> ：退出</li>
</ul>
</li>
<li><code>df -h</code> ：查看硬盘使用情况</li>
<li><code>free -h</code> ：查看内存使用情况</li>
<li><code>du -sh</code> ：查看当前目录占用的硬盘空间</li>
<li><code>ps aux</code> ：查看所有进程</li>
<li><code>kill -9 pid</code> ：杀死编号为 <code>pid</code>  的进程<br>
 - 传递某个具体的信号： <code>kill -s SIGTERM pid</code></li>
<li><code>netstat -nt</code> ：查看所有网络连接</li>
<li><code>w</code> ：列出当前登陆的用户</li>
<li><code>ping www.baidu.com</code> ：检查是否连网</li>
</ol>
<hr>
<p><strong>文件权限</strong></p>
<ol>
<li>
<p><code>chmod</code> ：修改文件权限</p>
<ul>
<li>
<p><code>chmod +x xxx</code> ：给 <code>xxx</code>  添加可执行权限</p>
</li>
<li>
<p><code>chmod -x xxx</code> ：去掉 <code>xxx</code>  的可执行权限</p>
</li>
<li>
<p><code>chmod 777 xxx</code> ：将 <code>xxx</code>  的权限改成 777</p>
</li>
<li>
<p><code>chmod 777 xxx -R</code> ：递归修改整个文件夹的权限</p>
</li>
</ul>
</li>
</ol>
<hr>
<p><strong>文件检索</strong></p>
<ol>
<li>
<p><code>find /path/to/directory/ -name '*.py'</code> ：搜索某个文件路径下的所有 <code>*.py</code>  文件</p>
</li>
<li>
<p><code>grep xxx</code> ：从 <code>stdin</code>  中读入若干行数据，如果某行中包含 <code>xxx</code> ，则输出该行；否则忽略该行。</p>
</li>
<li>
<p><code>wc</code> ：统计行数、单词数、字节数</p>
<ul>
<li>
<p>既可以从 <code>stdin</code>  中直接读入内容；也可以在命令行参数中传入文件名列表；</p>
</li>
<li>
<p><code>wc -l</code> ：统计行数</p>
</li>
<li>
<p><code>wc -w</code> ：统计单词数</p>
</li>
<li>
<p><code>wc -c</code> ：统计字节数</p>
</li>
</ul>
</li>
<li>
<p><code>tree</code> ：展示当前目录的文件结构</p>
<ul>
<li>
<p><code>tree /path/to/directory/</code> ：展示某个目录的文件结构</p>
</li>
<li>
<p><code>tree -a</code> ：展示隐藏文件</p>
</li>
</ul>
</li>
<li>
<p><code>ag xxx</code> ：搜索当前目录下的所有文件，检索 xxx 字符串</p>
</li>
<li>
<p><code>cut</code> ：分割一行内容</p>
<ul>
<li>
<p>从 <code>stdin</code>  中读入多行数据</p>
</li>
<li>
<p><code>echo $PATH | cut -d ':' -f 3,5</code> ：输出 <code>PATH</code>  用 <code>:</code>  分割后第 3、5 列数据</p>
</li>
<li>
<p><code>echo $PATH | cut -d ':' -f 3-5</code> ：输出 <code>PATH</code>  用 <code>:</code>  分割后第 3-5 列数据</p>
</li>
<li>
<p><code>echo $PATH | cut -c 3,5</code> ：输出 <code>PATH</code>  的第 3、5 个字符</p>
</li>
<li>
<p><code>echo $PATH | cut -c 3-5</code> ：输出 <code>PATH</code>  的第 3-5 个字符</p>
</li>
</ul>
</li>
<li>
<p><code>sort</code> ：将每行内容按字典序排序</p>
<ul>
<li>
<p>可以从 <code>stdin</code>  中读取多行数据</p>
</li>
<li>
<p>可以从命令行参数中读取文件名列表</p>
</li>
</ul>
</li>
<li>
<p><code>xargs</code> ：将 stdin 中的数据用空格或回车分割成命令行参数</p>
<ul>
<li><code>find . -name '*.py' | xargs cat | wc -l</code> ：统计当前目录下所有 python 文件的总行数</li>
</ul>
</li>
</ol>
<hr>
<p><strong>查看文件内容</strong></p>
<ol>
<li>
<p><code>more</code> ：浏览文件内容</p>
<ul>
<li>
<p>回车：下一行</p>
</li>
<li>
<p>空格：下一页</p>
</li>
<li>
<p><code>b</code> ：上一页</p>
</li>
<li>
<p><code>q</code> ：退出</p>
</li>
</ul>
</li>
<li>
<p><code>less</code> ：与 <code>more</code>  类似，功能更全</p>
<ul>
<li>
<p>回车：下一行</p>
</li>
<li>
<p><code>y</code> ：上一行</p>
</li>
<li>
<p><code>Page Down</code> ：下一页</p>
</li>
<li>
<p><code>Page Up</code> ：上一页</p>
</li>
<li>
<p><code>q</code> ：退出</p>
</li>
</ul>
</li>
<li>
<p><code>head -3 xxx</code> ：展示 <code>xxx</code>  的前 3 行内容</p>
<ul>
<li>同时支持从 <code>stdin</code>  读入内容</li>
</ul>
</li>
<li>
<p><code>tail -3 xxx</code> ：展示 <code>xxx</code>  末尾 3 行内容</p>
<ul>
<li>同时支持从 <code>stdin</code>  读入内容</li>
</ul>
</li>
</ol>
<hr>
<p><strong>用户相关</strong></p>
<ol>
<li><code>history</code> ：展示当前用户的历史操作。内容存放在 <code>~/.bash_history</code>  中</li>
</ol>
<hr>
<p><strong>工具</strong></p>
<ol>
<li>
<p><code>md5sum</code> ：计算 md5 哈希值</p>
<ul>
<li>
<p>可以从 <code>stdin</code>  读入内容</p>
</li>
<li>
<p>也可以在命令行参数中传入文件名列表；</p>
</li>
</ul>
</li>
<li>
<p><code>time command</code> ：统计 <code>command</code>  命令的执行时间</p>
</li>
<li>
<p><code>ipython3</code> ：交互式 python3 环境。可以当做计算器，或者批量管理文件。</p>
</li>
<li>
<p><code>! echo &quot;Hello World&quot;</code> ： <code>!</code>  表示执行 <code>shell</code>  脚本</p>
</li>
<li>
<p><code>watch -n 0.1 command</code> ：每 0.1 秒执行一次 <code>command</code>  命令</p>
</li>
<li>
<p><code>tar</code> ：压缩文件</p>
<ul>
<li>
<p><code>tar -zcvf xxx.tar.gz /path/to/file/*</code> ：压缩</p>
</li>
<li>
<p><code>tar -zxvf xxx.tar.gz</code> ：解压缩</p>
</li>
</ul>
</li>
<li>
<p><code>diff xxx yyy</code> ：查找文件 <code>xxx</code>  与 <code>yyy</code>  的不同点</p>
</li>
</ol>
<hr>
<p><strong>安装软件</strong></p>
<ol>
<li><code>sudo command</code> ：以 <code>root</code>  身份执行 <code>command</code>  命令</li>
<li><code>apt-get install xxx</code> ：安装软件</li>
<li><code>pip install xxx --user --upgrade</code> ：安装 python 包</li>
</ol>
<hr>
<h4 id="9-docker"><a class="markdownIt-Anchor" href="#9-docker">#</a> 9 docker</h4>
<p><strong>将当前用户添加到 <code>docker</code>  用户组</strong><br>
为了避免每次使用 <code>docker</code>  命令都需要加上 <code>sudo</code>  权限，可以将当前用户加入安装中自动创建的 <code>docker</code>  用户组 (可以参考官方文档)：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">sudo usermod -aG docker <span class="variable">$USER</span></span><br></pre></td></tr></table></figure>
<p>执行完此操作后，需要退出服务器，再重新登录回来，才可以省去 <code>sudo</code>  权限。</p>
<hr>
<p><strong>镜像（images）</strong></p>
<ol>
<li><code>docker pull ubuntu:20.04</code> ：拉取一个镜像</li>
<li><code>docker images</code> ：列出本地所有镜像</li>
<li><code>docker image rm ubuntu:20.04</code>  或 <code> docker rmi ubuntu:20.04</code> ：删除镜像 <code>ubuntu:20.04</code></li>
<li><code>docker [container] commit CONTAINER IMAGE_NAME:TAG</code> ：创建某个 <code>container</code>  的镜像</li>
<li><code>docker save -o ubuntu_20_04.tar ubuntu:20.04</code> ：将镜像 <code>ubuntu:20.04</code>  导出到本地文件 <code>ubuntu_20_04.tar</code>  中</li>
<li><code>docker load -i ubuntu_20_04.tar</code> ：将镜像 <code>ubuntu:20.04</code>  从本地文件 <code>ubuntu_20_04.tar</code>  中加载出来</li>
</ol>
<hr>
<p><strong>容器 (container)</strong></p>
<ol>
<li>
<p><code>docker [container] create -it ubuntu:20.04</code> ：利用镜像 <code>ubuntu:20.04</code>  创建一个容器。</p>
</li>
<li>
<p><code>docker ps -a</code> ：查看本地的所有容器</p>
</li>
<li>
<p><code>docker [container] start CONTAINER</code> ：启动容器</p>
</li>
<li>
<p><code>docker [container] stop CONTAINER</code> ：停止容器</p>
</li>
<li>
<p><code>docker [container] restart CONTAINER</code> ：重启容器</p>
</li>
<li>
<p><code>docker [contaienr] run -itd ubuntu:20.04</code> ：创建并启动一个容器</p>
</li>
<li>
<p><code>docker [container] attach CONTAINER</code> ：进入容器</p>
<ul>
<li>先按 <code>Ctrl-p</code> ，再按 <code>Ctrl-q</code>  可以挂起容器</li>
</ul>
</li>
<li>
<p><code>docker [container] exec CONTAINER COMMAND</code> ：在容器中执行命令</p>
</li>
<li>
<p><code>docker [container] rm CONTAINER</code> ：删除容器</p>
</li>
<li>
<p><code>docker container prune</code> ：删除所有已停止的容器</p>
</li>
<li>
<p><code>docker export -o xxx.tar CONTAINER</code> ：将容器 <code>CONTAINER</code>  导出到本地文件 <code>xxx.tar</code>  中</p>
</li>
<li>
<p><code>docker import xxx.tar image_name:tag</code> ：将本地文件 <code>xxx.tar</code>  导入成镜像，并将镜像命名为 <code>image_name:tag</code></p>
</li>
<li>
<p><code>docker export/import</code>  与 <code>docker save/load</code>  的区别：</p>
<ul>
<li>
<p><code>export/import</code>  会丢弃历史记录和元数据信息，仅保存容器当时的快照状态</p>
</li>
<li>
<p><code>save/load</code>  会保存完整记录，体积更大</p>
</li>
</ul>
</li>
<li>
<p><code>docker top CONTAINER</code> ：查看某个容器内的所有进程</p>
</li>
<li>
<p><code>docker stats</code> ：查看所有容器的统计信息，包括 CPU、内存、存储、网络等信息</p>
</li>
<li>
<p><code>docker cp xxx CONTAINER:xxx</code>  或  <code>docker cp CONTAINER:xxx xxx</code> ：在本地和容器间复制文件</p>
</li>
<li>
<p><code>docker rename CONTAINER1 CONTAINER2</code> ：重命名容器</p>
</li>
<li>
<p><code>docker update CONTAINER --memory 500MB</code> ：修改容器限制</p>
</li>
</ol>
<hr>
<p><strong>实战</strong><br>
进入终端，然后：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">scp /var/lib/acwing/docker/images/docker_lesson_1_0.tar server_name:  <span class="comment"># 将镜像上传到自己租的云端服务器</span></span><br><span class="line">ssh server_name  <span class="comment"># 登录自己的云端服务器</span></span><br><span class="line"></span><br><span class="line">docker load -i docker_lesson_1_0.tar  <span class="comment"># 将镜像加载到本地</span></span><br><span class="line">docker run -p 20000:22 --name my_docker_server -itd docker_lesson:1.0  <span class="comment"># 创建并运行docker_lesson:1.0镜像</span></span><br><span class="line"></span><br><span class="line">docker attach my_docker_server  <span class="comment"># 进入创建的docker容器</span></span><br><span class="line">passwd  <span class="comment"># 设置root密码</span></span><br></pre></td></tr></table></figure>
<p>去云平台控制台中修改安全组配置，放行端口 <code>20000</code> 。</p>
<p>返回终端，即可通过 <code>ssh</code>  登录自己的 <code>docker</code>  容器：</p>
<figure class="highlight sh"><table><tr><td class="code"><pre><span class="line">ssh root@xxx.xxx.xxx.xxx -p 20000  <span class="comment"># 将xxx.xxx.xxx.xxx替换成自己租的服务器的IP地址</span></span><br></pre></td></tr></table></figure>
<p>然后，可以仿照先前内容，创建工作账户 <code>acs</code> 。</p>
<p>最后，可以参考 ssh 部分的 ssh 登录配置 <code>docker</code>  容器的别名和免密登录。</p>
]]></content>
      <categories>
        <category>Linux学习讲义</category>
      </categories>
      <tags>
        <tag>Linux</tag>
      </tags>
  </entry>
  <entry>
    <title>Java学习讲义</title>
    <url>/2023/07/15/Java%20%E8%AF%AD%E6%B3%95%E5%AD%A6%E4%B9%A0%E6%B1%87%E6%80%BB/</url>
    <content><![CDATA[<h1 id="java语法学习汇总"><a class="markdownIt-Anchor" href="#java语法学习汇总">#</a> Java 语法学习汇总</h1>
<h4 id="1-最经典开局之hello-world"><a class="markdownIt-Anchor" href="#1-最经典开局之hello-world">#</a> 1、最经典开局之 hello world</h4>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="2-语法基础汇总"><a class="markdownIt-Anchor" href="#2-语法基础汇总">#</a> 2、语法基础汇总</h4>
<p><strong>2.1 变量</strong>：变量必须先定义，才可以使用。不能<mark>重名</mark></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">5</span>;</span><br><span class="line">        <span class="type">int</span> b, c = a, d = <span class="number">10</span> / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><em>内置的数据类型总览</em>：</p>
<table>
<thead>
<tr>
<th>类型</th>
<th>字节数</th>
<th>举例</th>
</tr>
</thead>
<tbody>
<tr>
<td>byte</td>
<td>1</td>
<td>123</td>
</tr>
<tr>
<td>short</td>
<td>2</td>
<td>12345</td>
</tr>
<tr>
<td>int</td>
<td>4</td>
<td>123456789</td>
</tr>
<tr>
<td>long</td>
<td>8</td>
<td>1234567891011L</td>
</tr>
<tr>
<td>float</td>
<td>4</td>
<td>1.2F</td>
</tr>
<tr>
<td>double</td>
<td>8</td>
<td>1.2, 1.2D</td>
</tr>
<tr>
<td>boolean</td>
<td>1</td>
<td>true, false</td>
</tr>
<tr>
<td>char</td>
<td>2</td>
<td>‘A’</td>
</tr>
</tbody>
</table>
<p><em>ps: 基本上 float 有 5-6 位是精确的，但是 double 有 15-16 位是精确的。</em></p>
<hr>
<p><strong>2.2 常量</strong>：使用 <code>final</code>  修饰</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">final</span> <span class="type">int</span> <span class="variable">N</span> <span class="operator">=</span> <span class="number">110</span>;</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>2.3 类型转换</strong>：</p>
<ul>
<li>显示转化： <code>int x = (int)'A';</code></li>
<li>隐式转化： <code>double x = 12, y = 4 * 3.3;</code></li>
</ul>
<hr>
<p><strong>2.4 运算符</strong>：</p>
<p><code>例子前提：A = 10, B = 20</code></p>
<table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
<th>实例</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>+</code></td>
<td>把两个数相加</td>
<td><code>A + B</code>  将得到 30</td>
</tr>
<tr>
<td><code>-</code></td>
<td>从第一个数中减去第二个数</td>
<td><code>A - B</code>  将得到 -10</td>
</tr>
<tr>
<td><code>*</code></td>
<td>把两个数相乘</td>
<td><code>A * B</code>  将得到 200</td>
</tr>
<tr>
<td><code>/</code></td>
<td>分子除以分母</td>
<td><code>B / A</code>  将得到 2</td>
</tr>
<tr>
<td><code>%</code></td>
<td>取模运算符，向<strong>零整除</strong>后的余数，<strong>注意余数可能为负数</strong></td>
<td><code>B % A</code>  将得到 0</td>
</tr>
<tr>
<td><code>++</code></td>
<td>自增运算符</td>
<td><code>A++</code> ：先取值后加 1； <code>++A</code> ：先加 1 后取值</td>
</tr>
<tr>
<td><code>--</code></td>
<td>自减运算符</td>
<td><code>A--</code> ：先取值后减 1； <code>--A</code> ：先减 1 后取值</td>
</tr>
<tr>
<td><code>+=</code></td>
<td>第一个数加上第二个数</td>
<td><code>A = A + B</code>  可以简写为  <code>A += B</code></td>
</tr>
<tr>
<td><code>-=</code></td>
<td>第一个数减去第二个数</td>
<td><code>A = A - B</code>  可以简写为  <code>A -= B</code></td>
</tr>
<tr>
<td><code>*=</code></td>
<td>第一个数乘以第二个数</td>
<td><code>A = A * B</code>  可以简写为  <code>A *= B</code></td>
</tr>
<tr>
<td><code>/=</code></td>
<td>第一个数除以第二个数</td>
<td><code>A = A / B</code>  可以简写为  <code>A /= B</code></td>
</tr>
<tr>
<td><code>%=</code></td>
<td>第一个对第二个数取余数</td>
<td><code>A = A % B</code>  可以简写为  <code>A %= B</code></td>
</tr>
</tbody>
</table>
<p><strong>2.5 表达式的使用</strong>：</p>
<p>整数的加减乘除四则运算：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">6</span> + <span class="number">3</span> * <span class="number">4</span> / <span class="number">2</span> - <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(a);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> a * <span class="number">10</span> + <span class="number">5</span> / <span class="number">2</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(b);</span><br><span class="line"></span><br><span class="line">        System.out.println(<span class="number">23</span> * <span class="number">56</span> - <span class="number">78</span> / <span class="number">3</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>浮点数（小数）的运算：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">double</span> <span class="variable">x</span> <span class="operator">=</span> <span class="number">1.5</span>, y = <span class="number">3.2</span>;</span><br><span class="line"></span><br><span class="line">        System.out.println(x * y);</span><br><span class="line">        System.out.println(x + y);</span><br><span class="line">        System.out.println(x - y);</span><br><span class="line">        System.out.println(x / y);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>整型变量的自增、自减：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">b</span> <span class="operator">=</span> a ++ ;</span><br><span class="line">        System.out.println(a + <span class="string">&quot; &quot;</span> + b);</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> <span class="variable">c</span> <span class="operator">=</span> ++ a;</span><br><span class="line">        System.out.println(a + <span class="string">&quot; &quot;</span> + c);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>2.6 输入方式</strong>：</p>
<p>方式 1，效率较低，输入规模较小时使用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> sc.next();  <span class="comment">// 读入下一个字符串</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt();  <span class="comment">// 读入下一个整数</span></span><br><span class="line">        <span class="type">float</span> <span class="variable">y</span> <span class="operator">=</span> sc.nextFloat();  <span class="comment">// 读入下一个单精度浮点数</span></span><br><span class="line">        <span class="type">double</span> <span class="variable">z</span> <span class="operator">=</span> sc.nextDouble();  <span class="comment">// 读入下一个双精度浮点数</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">line</span> <span class="operator">=</span> sc.nextLine();  <span class="comment">// 读入下一行</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>方式 2，效率较高，输入规模较大时使用。<strong>注意需要抛异常</strong>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">BufferedReader</span> <span class="variable">br</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedReader</span>(<span class="keyword">new</span> <span class="title class_">InputStreamReader</span>(System.in));</span><br><span class="line">        <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> br.readLine();</span><br><span class="line">        System.out.println(str);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>2.7 输出方式</strong>：</p>
<p>方式 1，效率较低，输出规模较小时使用。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        System.out.println(<span class="number">123</span>);  <span class="comment">// 输出整数 + 换行</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Hello World&quot;</span>);  <span class="comment">// 输出字符串 + 换行</span></span><br><span class="line">        System.out.print(<span class="number">123</span>);  <span class="comment">// 输出整数</span></span><br><span class="line">        System.out.print(<span class="string">&quot;yxc\n&quot;</span>);  <span class="comment">// 输出字符串</span></span><br><span class="line">        System.out.printf(<span class="string">&quot;%04d %.2f\n&quot;</span>, <span class="number">4</span>, <span class="number">123.456D</span>);  <span class="comment">// 格式化输出，float与double都用%f输出</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意点</strong>：</p>
<p><code>System.out.printf()</code>  中不同类型变量的输出格式：</p>
<ol>
<li><code>int：%d</code></li>
<li><code>float: %f</code> , 默认保留 6 位小数</li>
<li><code>double: %f</code> ， 默认保留 6 位小数</li>
<li><code>char: %c</code> , 回车也是一个字符，用 <code>'\n'</code>  表示</li>
<li><code>String: %s</code></li>
</ol>
<p>方式 2，效率较高，输出规模较大时使用。<strong>注意需要抛异常</strong>。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedWriter;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStreamWriter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> <span class="keyword">throws</span> Exception &#123;</span><br><span class="line">        <span class="type">BufferedWriter</span> <span class="variable">bw</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">BufferedWriter</span>(<span class="keyword">new</span> <span class="title class_">OutputStreamWriter</span>(System.out));</span><br><span class="line">        bw.write(<span class="string">&quot;Hello World\n&quot;</span>);</span><br><span class="line">        bw.flush();  <span class="comment">// 需要手动刷新缓冲区</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="3-判断语句"><a class="markdownIt-Anchor" href="#3-判断语句">#</a> 3、判断语句</h4>
<p><strong>3.1 if 语句</strong>：</p>
<p><em>基本的 if-else 语句：</em></p>
<p>当条件成立时，执行某些语句；否则执行另一些语句。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a &gt; <span class="number">5</span>) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d is big!\n&quot;</span>, a);</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d + 1 = %d\n&quot;</span>, a, a + <span class="number">1</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d is small!\n&quot;</span>, a);</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d - 1 = %d\n&quot;</span>, a, a - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>： <code>else</code>  语句可以省略：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a &gt; <span class="number">5</span>) &#123;</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d is big!\n&quot;</span>, a);</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d + 1 = %d\n&quot;</span>, a, a + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>：当只有一条语句时，大括号可以省略：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a &gt; <span class="number">5</span>)</span><br><span class="line">            System.out.printf(<span class="string">&quot;%d is big!\n&quot;</span>, a);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            System.out.printf(<span class="string">&quot;%d is small!\n&quot;</span>, a);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>练习 1：输入一个整数，输出这个数的绝对值。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">x</span> <span class="operator">=</span> sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">            System.out.println(x);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            System.out.println(-x);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>练习 2：输入两个整数，输出两个数中较大的那个。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt(), b = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a &gt; b)</span><br><span class="line">            System.out.println(a);</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            System.out.println(b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>注意</strong>： <code>if-else</code>  语句内部也可以是 <code>if-else</code>  语句。</p>
<p>练习 3：输入三个整数，输出三个数中最大的那个。</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt(), b = sc.nextInt(), c = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a &gt; b) &#123;</span><br><span class="line">            <span class="keyword">if</span> (a &gt; c)</span><br><span class="line">                System.out.println(a);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                System.out.println(c);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (b &gt; c)</span><br><span class="line">                System.out.println(b);</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">                System.out.println(c);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>3.2 常见比较运算符</strong>：</p>
<p>(1) 大于  <code>&gt;</code> <br>
(2) 小于  <code>&lt;</code> <br>
(3) 大于等于  <code>&gt;=</code> <br>
(4) 小于等于  <code>&lt;=</code> <br>
(5) 等于  <code>==</code> <br>
(6) 不等于 <code> !=</code></p>
<p>例子：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Main</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">Scanner</span> <span class="variable">sc</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Scanner</span>(System.in);</span><br><span class="line">        <span class="type">int</span> <span class="variable">a</span> <span class="operator">=</span> sc.nextInt(), b = sc.nextInt();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (a &gt; b) System.out.printf(<span class="string">&quot;%d &gt; %d\n&quot;</span>, a, b);</span><br><span class="line">        <span class="keyword">if</span> (a &gt;= b) System.out.printf(<span class="string">&quot;%d &gt;= %d\n&quot;</span>, a, b);</span><br><span class="line">        <span class="keyword">if</span> (a &lt; b) System.out.printf(<span class="string">&quot;%d &lt; %d\n&quot;</span>, a, b);</span><br><span class="line">        <span class="keyword">if</span> (a &lt;= b) System.out.printf(<span class="string">&quot;%d &lt;= %d\n&quot;</span>, a, b);</span><br><span class="line">        <span class="keyword">if</span> (a == b) System.out.printf(<span class="string">&quot;%d == %d\n&quot;</span>, a, b);</span><br><span class="line">        <span class="keyword">if</span> (a != b) System.out.printf(<span class="string">&quot;%d != %d\n&quot;</span>, a, b);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>Java学习讲义</category>
      </categories>
      <tags>
        <tag>Java</tag>
      </tags>
  </entry>
  <entry>
    <title>Visual Studio 常用快捷键分享</title>
    <url>/2023/04/13/VS%E7%9A%84%E5%B8%B8%E7%94%A8%E5%BF%AB%E6%8D%B7%E9%94%AE/</url>
    <content><![CDATA[<h1 id="visual-studio-常用快捷键分享"><a class="markdownIt-Anchor" href="#visual-studio-常用快捷键分享">#</a> Visual Studio 常用快捷键分享</h1>
<p><s>主要是因为自己好几次都想用时用不了，才克服懒癌想写的</s></p>
<ul>
<li><mark><strong>文件相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">打开文件窗口</th>
<th style="text-align:center">Alt + F</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>新建项目</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + N</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>新建文件</strong></td>
<td style="text-align:center"><strong>Ctrl + N</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>打开项目 / 解决方案</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + O</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>打开文件夹</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + Alt + O</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>打开网站</strong></td>
<td style="text-align:center"><strong>Shift + Alt + O</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>打开文件</strong></td>
<td style="text-align:center"><strong>Ctrl + O</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>保存单个文件</strong></td>
<td style="text-align:center"><strong>Ctrl + S</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>全部保存</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + S</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>打印</strong></td>
<td style="text-align:center"><strong>Ctrl + P</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>退出</strong></td>
<td style="text-align:center"><strong>Alt + F4</strong></td>
</tr>
</tbody>
</table>
<ul>
<li><mark><strong>编辑相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>打开编辑窗口</strong></th>
<th style="text-align:center"><strong>Alt + E</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>转到行</strong></td>
<td style="text-align:center"><strong>Ctrl + G</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转到所有</strong></td>
<td style="text-align:center"><strong>Ctrl + T</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转到文件</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + T</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转到最近文件</strong></td>
<td style="text-align:center"><strong>Ctrl + 1 / R</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转到类型</strong></td>
<td style="text-align:center"><strong>Ctrl + 1 , Ctrl + T</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转至成员</strong></td>
<td style="text-align:center"><strong>Alt + \</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转到符号</strong></td>
<td style="text-align:center"><strong>Ctrl + 1 , Ctrl + S</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转到文件中的下个问题</strong></td>
<td style="text-align:center"><strong>Alt + PgDn</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转到文件中的上个问题</strong></td>
<td style="text-align:center"><strong>Alt + PgUp</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转到上一个编辑位置</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + Backspace</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>搜索框</strong></td>
<td style="text-align:center"><strong>Ctrl + Q</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>快速查找</strong></td>
<td style="text-align:center"><strong>Ctrl + F</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>快速替换</strong></td>
<td style="text-align:center"><strong>Ctrl + H</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>在文件中查找</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + F</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>在文件中替换</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + H</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>撤销</strong></td>
<td style="text-align:center"><strong>Ctrl + Z</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>重做</strong></td>
<td style="text-align:center"><strong>Ctrl + Y</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>剪切</strong></td>
<td style="text-align:center"><strong>Ctrl + X</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>复制</strong></td>
<td style="text-align:center"><strong>Ctrl + C</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>粘贴</strong></td>
<td style="text-align:center"><strong>Ctrl + V</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>显示剪贴板历史记录</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + V</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>复制一行</strong></td>
<td style="text-align:center"><strong>Ctrl + D</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>删除</strong></td>
<td style="text-align:center"><strong>Del</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>全选</strong></td>
<td style="text-align:center"><strong>Ctrl + A</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>设置文档的格式</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + D</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>设置选定内容的格式</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + F</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转换为大写</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + U</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转换为小写</strong></td>
<td style="text-align:center"><strong>Ctrl + U</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>将选定行上移</strong></td>
<td style="text-align:center"><strong>Alt + ↑</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>将选定行下移</strong></td>
<td style="text-align:center"><strong>Alt + ↓</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>删除水平空白</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + \</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>将选定内容扩展到包含块</strong></td>
<td style="text-align:center"><strong>Shift + Alt + ]</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>展开选定内容</strong></td>
<td style="text-align:center"><strong>Shift + Alt + =</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>收缩选定内容</strong></td>
<td style="text-align:center"><strong>Shift + Alt + -</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>查看空白</strong></td>
<td style="text-align:center"><strong>Ctrl + R , Ctrl + W</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>自动换行</strong></td>
<td style="text-align:center"><strong>Ctrl + E , Ctrl + W</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>渐进式搜索</strong></td>
<td style="text-align:center"><strong>Ctrl + I</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>切换行注释</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + /</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>切换块注释</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + /</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>注释选定内容</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + C</strong></td>
</tr>
<tr>
<td style="text-align:center">** 取消注释选定内容 **</td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + U</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>切换书签</strong></td>
<td style="text-align:center"><strong>Ctrl + K</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>上一个书签</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + P</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>下一个书签</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + N</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>清除书签</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + L</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>文件夹中的上一书签</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + K , Ctrl + Shift + P</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>文件夹中的下一书签</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + K , Ctrl + Shift + N</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>添加任务列表快捷方式</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + H</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>切换大纲显示展开</strong></td>
<td style="text-align:center"><strong>Ctrl + M , Ctrl + M</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>切换所有大纲显示</strong></td>
<td style="text-align:center"><strong>Ctrl + M , Ctrl + L</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>停止大纲显示</strong></td>
<td style="text-align:center"><strong>Ctrl + M , Ctrl + P</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>停止隐藏当前区域</strong></td>
<td style="text-align:center"><strong>Ctrl + M , Ctrl + U</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>折叠到定义</strong></td>
<td style="text-align:center"><strong>Ctrl + M , Ctrl + O</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>列出成员</strong></td>
<td style="text-align:center"><strong>Ctrl + J</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>参数信息</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + 空格键</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>快速信息</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + I</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>完成单词</strong></td>
<td style="text-align:center"><strong>Ctrl + 空格键</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>切换完成模式</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + 空格键</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>外侧代码</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + S</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>插入片段</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + X</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>插入下一匹配的脱字号</strong></td>
<td style="text-align:center"><strong>Shift + Alt + .</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>在所有匹配位置插入脱字号</strong></td>
<td style="text-align:center"><strong>Shift + Alt + ;</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>滚动窗口但不移动光标</strong></td>
<td style="text-align:center"><strong>Ctrl + Up/Down（方向键↑、↓）</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>转到定义</strong></td>
<td style="text-align:center"><strong>F12</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>在当前行插入空行</strong></td>
<td style="text-align:center"><strong>Ctrl + Enter</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>在当前行下方插入空行</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + Enter</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>块选择</strong></td>
<td style="text-align:center"><strong>Alt + Shift + 方向键、Shift + 方向键</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>选择矩形文本</strong></td>
<td style="text-align:center"><strong>Alt + 鼠标左键</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>匹配括号</strong></td>
<td style="text-align:center"><strong>Ctrl + }</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>选择括号、括号内的文本</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + }</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>从头到尾选择整行</strong></td>
<td style="text-align:center"><strong>Shift + End</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>从尾到头选择整行</strong></td>
<td style="text-align:center"><strong>Shift + Home</strong></td>
</tr>
</tbody>
</table>
<ul>
<li><mark><strong>视图相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>打开视图窗口</strong></th>
<th style="text-align:center"><strong>Alt + V</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>代码</strong></td>
<td style="text-align:center"><strong>F7</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>解决方案资源管理器</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + L</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>团队资源管理器</strong></td>
<td style="text-align:center"><strong>Ctrl + \ , Ctrl + M</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>服务器资源管理器</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + S</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>测试资源管理器</strong></td>
<td style="text-align:center"><strong>Ctrl + E , T</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>书签窗口</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + W</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>调用层次结构</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + K</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>类视图</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + C</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>代码定义窗口</strong></td>
<td style="text-align:center"><strong>Ctrl + \ , D</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>对象浏览器</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + J</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>错误列表</strong></td>
<td style="text-align:center"><strong>Ctrl + \ , E</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>输出</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + O</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>任务列表</strong></td>
<td style="text-align:center"><strong>Ctrl + \ , T</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>工具箱</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + X</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>通知</strong></td>
<td style="text-align:center"><strong>Ctrl + \ , Ctrl + N</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>查找符号接口</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + F12</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>命令窗口</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + A</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>Web 浏览器</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + R</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>任务运行程序资源管理器</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + Backspace</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>文档大纲</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + T</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>资源视图</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + E</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>全屏膜</strong></td>
<td style="text-align:center"><strong>Shift + Alt + Enter</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>所有窗口</strong></td>
<td style="text-align:center"><strong>Shift + Alt + M</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>向后导航</strong></td>
<td style="text-align:center"><strong>Ctrl + -</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>向前导航</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + -</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>属性窗口</strong></td>
<td style="text-align:center"><strong>F4</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>属性页</strong></td>
<td style="text-align:center"><strong>Shift + F4</strong></td>
</tr>
</tbody>
</table>
<ul>
<li><mark><strong>项目相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>打开项目窗口</strong></th>
<th style="text-align:center"><strong>Alt + P</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>类向导</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + X</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>添加新项</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + A</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>添加现有项</strong></td>
<td style="text-align:center"><strong>Shift + Alt + A</strong></td>
</tr>
</tbody>
</table>
<ul>
<li><mark><strong>生成相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>生成解决方案</strong></th>
<th style="text-align:center"><strong>Ctrl + Shift + B</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>对解决方案运行代码进行分析</strong></td>
<td style="text-align:center"><strong>Alt + F11</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>生成项目</strong></td>
<td style="text-align:center"><strong>Ctrl + B</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>编译</strong></td>
<td style="text-align:center"><strong>Ctrl + F7</strong></td>
</tr>
</tbody>
</table>
<ul>
<li><mark><strong>调试相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>打开调试窗口</strong></th>
<th style="text-align:center"><strong>Alt + D</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>断点窗口</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + B</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>异常设置</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + E</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>显示诊断工具</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + F12</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>即时</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + I</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>启动图形调试</strong></td>
<td style="text-align:center"><strong>Alt + F5</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>开始调试</strong></td>
<td style="text-align:center"><strong>F5</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>开始执行（不调试）</strong></td>
<td style="text-align:center"><strong>Ctrl + F5</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>停止调试</strong></td>
<td style="text-align:center"><strong>Shift + F5</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>重新启动调试</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + F5</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>性能探查器</strong></td>
<td style="text-align:center"><strong>Alt + F2</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>附加到进程</strong></td>
<td style="text-align:center"><strong>Ctrl + Alt + P</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>逐语句</strong></td>
<td style="text-align:center"><strong>F11</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>逐过程</strong></td>
<td style="text-align:center"><strong>F10</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>切换断点</strong></td>
<td style="text-align:center"><strong>F9</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>启动 / 停止断点</strong></td>
<td style="text-align:center"><strong>Ctrl + F9</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>运行到光标处</strong></td>
<td style="text-align:center"><strong>Ctrl + F10</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>函数断点</strong></td>
<td style="text-align:center"><strong>Ctrl + K , B</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>停止调试</strong></td>
<td style="text-align:center"><strong>Shift + F5</strong></td>
</tr>
</tbody>
</table>
<ul>
<li><mark><strong>测试相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>打开测试窗口</strong></th>
<th style="text-align:center"><strong>Alt + S</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>运行所有测试</strong></td>
<td style="text-align:center"><strong>Ctrl + R , A</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>重复上次运行</strong></td>
<td style="text-align:center"><strong>Ctrl + R , L</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>调试所有测试</strong></td>
<td style="text-align:center"><strong>Ctrl + R , Ctrl + A</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>调试上次运行</strong></td>
<td style="text-align:center"><strong>Ctrl + R , D</strong></td>
</tr>
<tr>
<td style="text-align:center"><strong>测试资源管理器</strong></td>
<td style="text-align:center"><strong>Ctrl + E , T</strong></td>
</tr>
</tbody>
</table>
<ul>
<li><mark><strong>分析相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">打开分析窗口</th>
<th style="text-align:center">Alt + N</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>对文件运行代码分析</strong></td>
<td style="text-align:center"><strong>Ctrl + Shift + Alt + F7</strong></td>
</tr>
</tbody>
</table>
<ul>
<li><mark><strong>工具相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">打开工具窗口</th>
<th style="text-align:center">Alt + T</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>代码片段管理器</strong></td>
<td style="text-align:center"><strong>Ctrl + K , Ctrl + B</strong></td>
</tr>
</tbody>
</table>
<ul>
<li><mark><strong>扩展相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">打开扩展窗口</th>
<th style="text-align:center">Alt + X</th>
</tr>
</thead>
</table>
<ul>
<li><mark><strong>窗口相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center"><strong>打开窗口</strong></th>
<th style="text-align:center"><strong>Alt + W</strong></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>关闭</strong></td>
<td style="text-align:center"><strong>Shift + Esc</strong></td>
</tr>
</tbody>
</table>
<ul>
<li><mark><strong>帮助相关</strong></mark></li>
</ul>
<table>
<thead>
<tr>
<th style="text-align:center">打开帮助窗口</th>
<th style="text-align:center">Alt + H</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center"><strong>查看帮助</strong></td>
<td style="text-align:center"><strong>Ctrl + F1</strong></td>
</tr>
</tbody>
</table>
]]></content>
      <categories>
        <category>快捷键大全</category>
      </categories>
      <tags>
        <tag>快捷键</tag>
      </tags>
  </entry>
  <entry>
    <title>Unity基础代码合集</title>
    <url>/2023/04/11/Unity%E5%9F%BA%E7%A1%80%E4%BB%A3%E7%A0%81%E5%90%88%E9%9B%86/</url>
    <content><![CDATA[<h1 id="unity-学习档案"><a class="markdownIt-Anchor" href="#unity-学习档案">#</a> Unity 学习档案</h1>
<h6 id="先就列个代码之后二刷会补上一些细节上的说明"><a class="markdownIt-Anchor" href="#先就列个代码之后二刷会补上一些细节上的说明">#</a> 先就列个代码，之后二刷会补上一些细节上的说明</h6>
<h2 id="chapter_1-基本模板"><a class="markdownIt-Anchor" href="#chapter_1-基本模板">#</a> Chapter_1、基本模板</h2>
<p><s>（生成就有的）</s></p>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">NewBehaviourScript</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_2-脚本的生命周期"><a class="markdownIt-Anchor" href="#chapter_2-脚本的生命周期">#</a> Chapter_2、脚本的生命周期</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">test</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Awake</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;awake&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnEnable</span>()<span class="comment">//激活组件时就会调用,可能会调用多次（只要重新激活就会调用）</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnEnable&quot;</span>); </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()<span class="comment">//唯一调用，调用时间在第一次OnEnable之后</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;start&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()<span class="comment">//每一帧输出一次，不要轻易使用</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">LateUpdate</span>()<span class="comment">//每次Update执行完都会执行一遍</span></span></span><br><span class="line">    &#123; </span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">FixedUpdate</span>()<span class="comment">//每隔固定一段时间调用一次，与帧无关，和性能无关，在编辑中的项目设定中的时间进行修改</span></span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnDisable</span>()<span class="comment">//非激活时调用一次</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;OnDisable&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">OnDestroy</span>()<span class="comment">//销毁的时候会调用,一般只会在最后的时候调用一下</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;Ondestroy&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_3-vector3的使用向量"><a class="markdownIt-Anchor" href="#chapter_3-vector3的使用向量">#</a> Chapter_3、Vector3 的使用（向量）</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">VectorTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//向量，坐标，旋转，缩放</span></span><br><span class="line">        Vector3 v = <span class="keyword">new</span> Vector3(<span class="number">1</span>,<span class="number">1</span>,<span class="number">0.5f</span>);<span class="comment">//也可以用(45,90,0)--旋转</span></span><br><span class="line">        v = Vector3.zero;<span class="comment">//通过静态属性快速得到一个结构体，其他有Vector3.one、Vector3.up、Vector3.left等</span></span><br><span class="line">        v = Vector3.right;</span><br><span class="line">        <span class="comment">//v.x = 0;</span></span><br><span class="line">        <span class="comment">//v.y = 1;</span></span><br><span class="line">        <span class="comment">//v.z = 2;</span></span><br><span class="line">        Vector3 v2 = Vector3.forward;</span><br><span class="line">        <span class="comment">//计算两个向量夹角</span></span><br><span class="line">        Debug.Log(Vector3.Angle(v, v2));</span><br><span class="line">        <span class="comment">//计算两点之间的距离</span></span><br><span class="line">        Debug.Log(Vector3.Distance(v, v2));</span><br><span class="line">        <span class="comment">//点乘</span></span><br><span class="line">        Debug.Log(Vector3.Dot(v, v2));</span><br><span class="line">        <span class="comment">//叉乘</span></span><br><span class="line">        Debug.Log(Vector3.Cross(v, v2));</span><br><span class="line">        <span class="comment">//插值</span></span><br><span class="line">        Debug.Log(Vector3.Lerp(Vector3.zero, Vector3.one, <span class="number">0.8f</span>));<span class="comment">//这两个向量之间做一个比例计算</span></span><br><span class="line">        <span class="comment">//向量的模</span></span><br><span class="line">        Debug.Log(v.magnitude);</span><br><span class="line">        <span class="comment">//规范化的向量</span></span><br><span class="line">        Debug.Log(v.normalized);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_4-方向描述欧拉角和四元数"><a class="markdownIt-Anchor" href="#chapter_4-方向描述欧拉角和四元数">#</a> Chapter_4、方向描述，欧拉角和四元数</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RotateTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//旋转：欧拉角，四元数（效率高）</span></span><br><span class="line">        Vector3 rotate=<span class="keyword">new</span> Vector3(<span class="number">0</span>,<span class="number">30</span>,<span class="number">0</span>);</span><br><span class="line">        Quaternion quaternion=Quaternion.identity;<span class="comment">//无旋转,亦可以采用Quaternion quaternion=new Quaternion(x,y,z,w);</span></span><br><span class="line">        quaternion=Quaternion.Euler(rotate);<span class="comment">//通过欧拉角创建四元数</span></span><br><span class="line">        rotate=quaternion.eulerAngles;<span class="comment">//通过四元数转化为欧拉角</span></span><br><span class="line">        <span class="comment">//看向一个物体,看向(0,0,0)的位置</span></span><br><span class="line">        quaternion = Quaternion.LookRotation(<span class="keyword">new</span> Vector3(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h2 id="chapter_5-debug相关的辅助检查手段线的绘制"><a class="markdownIt-Anchor" href="#chapter_5-debug相关的辅助检查手段线的绘制">#</a> Chapter_5、Debug 相关的辅助检查手段 &amp; 线的绘制</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DebugTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        Debug.Log(<span class="string">&quot;test&quot;</span>);</span><br><span class="line">        Debug.LogWarning(<span class="string">&quot;test2&quot;</span>);</span><br><span class="line">        Debug.LogError(<span class="string">&quot;test3&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//绘制一条线,起点，终点；只有调试时能看见，在游戏中是看不见的</span></span><br><span class="line">        Debug.DrawLine(<span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>), Color.blue);<span class="comment">//颜色设置为蓝色</span></span><br><span class="line">        <span class="comment">//绘制一条射线 起点，射线</span></span><br><span class="line">        Debug.DrawRay(<span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>), <span class="keyword">new</span> Vector3(<span class="number">1</span>, <span class="number">1</span>, <span class="number">0</span>), Color.red);<span class="comment">//前面的两个参数可以用Vector3.zero、Vector3.up等</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_6-动态修改物体属性"><a class="markdownIt-Anchor" href="#chapter_6-动态修改物体属性">#</a> Chapter_6、动态修改物体属性</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">EmptyTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> GameObject Cube;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//获取预设体</span></span><br><span class="line">    <span class="keyword">public</span> GameObject Prefab;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//拿到当前脚本所挂载的游戏物体</span></span><br><span class="line">        <span class="comment">//GameObject go = this.gameObject;//this是可以省略的</span></span><br><span class="line">        Debug.Log(gameObject.name);<span class="comment">//名称</span></span><br><span class="line">        Debug.Log(gameObject.tag);<span class="comment">//标签</span></span><br><span class="line">        Debug.Log(gameObject.layer);<span class="comment">//图层</span></span><br><span class="line">        <span class="comment">//立方体的名称</span></span><br><span class="line">        Debug.Log(Cube.name);</span><br><span class="line">        <span class="comment">//立方体是否被激活</span></span><br><span class="line">        Debug.Log(Cube.activeInHierarchy);<span class="comment">//真正的激活状态</span></span><br><span class="line">        Debug.Log(Cube.activeSelf);<span class="comment">//当前自身是否激活挑勾</span></span><br><span class="line">        <span class="comment">//获取Transform组件</span></span><br><span class="line">        <span class="comment">//Transform trans = this.transform;</span></span><br><span class="line">        Debug.Log(transform.position);</span><br><span class="line">        <span class="comment">//获取其他组件</span></span><br><span class="line">        BoxCollider bc = GetComponent&lt;BoxCollider&gt;();</span><br><span class="line">        <span class="comment">//获取当前物体的子物体身上的某个组件</span></span><br><span class="line">        GetComponentInChildren&lt;CapsuleCollider&gt;(bc);</span><br><span class="line">        <span class="comment">//获取当前物体的父物体身上的某个组件</span></span><br><span class="line">        GetComponentInParent&lt;BoxCollider&gt;();</span><br><span class="line">        <span class="comment">//添加一个组件</span></span><br><span class="line">        Cube.AddComponent&lt;AudioSource&gt;();</span><br><span class="line">        <span class="comment">//通过游戏物体的名称来获取游戏物体</span></span><br><span class="line">        test=GameObject.FindWithTag(<span class="string">&quot;Enemy&quot;</span>);</span><br><span class="line">        <span class="comment">//GameObject test = GameObject.Find(&quot;Test&quot;);</span></span><br><span class="line">        test.SetActive(<span class="literal">false</span>);</span><br><span class="line">        Debug.Log(test.name);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//通过预设体来实例化一个游戏物体</span></span><br><span class="line">        GameObject go = Instantiate(Prefab,transform);<span class="comment">//第二维还可以是Vector3.zero,Quaternion.identity</span></span><br><span class="line">        <span class="comment">//销毁</span></span><br><span class="line">        Destroy(go);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_7-游戏时间的使用"><a class="markdownIt-Anchor" href="#chapter_7-游戏时间的使用">#</a> Chapter_7、游戏时间的使用</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TimeTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">float</span> timer = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//游戏开始到现在所花的时间</span></span><br><span class="line">        Debug.Log(Time.time);</span><br><span class="line">        <span class="comment">//时间缩放值</span></span><br><span class="line">        Debug.Log(Time.timeScale);</span><br><span class="line">        <span class="comment">//固定时间间隔</span></span><br><span class="line">        Debug.Log(Time.fixedDeltaTime);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        timer += Time.deltaTime;<span class="comment">//计时器，每帧时间加在一起</span></span><br><span class="line">        <span class="comment">//上一帧到这一帧所用的时间(60帧 1/60s 120帧 1/120s)</span></span><br><span class="line">        Debug.Log(Time.deltaTime);</span><br><span class="line">        <span class="comment">//如果大于10s</span></span><br><span class="line">        <span class="keyword">if</span> (timer &gt; <span class="number">3</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;大于3秒了&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">FixedUpdate</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_8-路径权限相关"><a class="markdownIt-Anchor" href="#chapter_8-路径权限相关">#</a> Chapter_8、路径权限相关</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ApplicationTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//游戏数据文件夹路径(只读，加密压缩)</span></span><br><span class="line">        Debug.Log(Application.dataPath + <span class="string">&quot;/新建文本文档.txt&quot;</span>);</span><br><span class="line">        <span class="comment">//持久化文件夹路径，可以写</span></span><br><span class="line">        Debug.Log(Application.persistentDataPath);</span><br><span class="line">        <span class="comment">//StreamingAssets文件夹路径(只读，配置文件，不会加密压缩)</span></span><br><span class="line">        Debug.Log(Application.streamingAssetsPath);</span><br><span class="line">        <span class="comment">//临时文件夹</span></span><br><span class="line">        Debug.Log(Application.temporaryCachePath);</span><br><span class="line">        <span class="comment">//控制是否在后台运行</span></span><br><span class="line">        Debug.Log(Application.runInBackground);</span><br><span class="line">        <span class="comment">//打开url</span></span><br><span class="line">        Application.OpenURL(<span class="string">&quot;https://www.bilibili.com/&quot;</span>);</span><br><span class="line">        <span class="comment">//退出游戏</span></span><br><span class="line">        Application.Quit();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_9-场景类相关"><a class="markdownIt-Anchor" href="#chapter_9-场景类相关">#</a> Chapter_9、场景类相关</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.SceneManagement;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SceneTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//两个类，场景类，场景管理类</span></span><br><span class="line">        <span class="comment">//场景跳转</span></span><br><span class="line">        <span class="comment">//SceneManager.LoadScene(1);//索引或者名称都可以</span></span><br><span class="line">        <span class="comment">//获取当前场景</span></span><br><span class="line">        Scene scene = SceneManager.GetActiveScene();</span><br><span class="line">        <span class="comment">//场景名称</span></span><br><span class="line">        Debug.Log(scene.name);</span><br><span class="line">        <span class="comment">//场景是否已经加载</span></span><br><span class="line">        Debug.Log(scene.isLoaded);</span><br><span class="line">        <span class="comment">//场景路径</span></span><br><span class="line">        Debug.Log(scene.path);</span><br><span class="line">        <span class="comment">//场景索引</span></span><br><span class="line">        Debug.Log(scene.buildIndex);</span><br><span class="line">        GameObject[] gos = scene.GetRootGameObjects();</span><br><span class="line">        Debug.Log(gos.Length);</span><br><span class="line"></span><br><span class="line">        <span class="comment">//场景管理类</span></span><br><span class="line">        <span class="comment">//已加载场景个数</span></span><br><span class="line">        Debug.Log(SceneManager.sceneCount);</span><br><span class="line">        <span class="comment">//创建新场景</span></span><br><span class="line">        Scene newScene = SceneManager.CreateScene(<span class="string">&quot;newScene&quot;</span>);</span><br><span class="line">        <span class="comment">//卸载场景</span></span><br><span class="line">        SceneManager.UnloadSceneAsync(newScene);</span><br><span class="line">        <span class="comment">//加载场景用法拓展</span></span><br><span class="line">        SceneManager.LoadScene(<span class="string">&quot;MyScene&quot;</span>,LoadSceneMode.Additive);<span class="comment">//场景叠加在一起了，除了Additive还有Single</span></span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_10-异步场景加载相关"><a class="markdownIt-Anchor" href="#chapter_10-异步场景加载相关">#</a> Chapter_10、异步场景加载相关</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AsyncTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        StartCoroutine(loadScene());</span><br><span class="line">    &#125;</span><br><span class="line">	<span class="comment">//协程方法用来异步加载场景</span></span><br><span class="line">    <span class="function">IEnumerator <span class="title">loadScene</span>()</span>&#123;</span><br><span class="line">        operation = SceneManager.LoadSceneAsync(<span class="number">1</span>);</span><br><span class="line">        <span class="comment">//加载完场景不要自动跳转</span></span><br><span class="line">        operation.allowSceneActivation = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">yield</span> <span class="keyword">return</span> operation;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">float</span> timer = <span class="number">0</span>;</span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//输出加载进度 0-0.9</span></span><br><span class="line">        Debug.Log(operation.progress);</span><br><span class="line">        timer += Time.deltaTime;</span><br><span class="line">        <span class="comment">//如果到达5s,再跳转</span></span><br><span class="line">        <span class="keyword">if</span>(timer &gt; <span class="number">5</span>)&#123;</span><br><span class="line">            operation.allowSceneActivation = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_11-了解transform"><a class="markdownIt-Anchor" href="#chapter_11-了解transform">#</a> Chapter_11、了解 transform</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TransformTest</span> : <span class="title">MonoBehaviour</span><span class="comment">//transform主要的两套用法有：父子关系&amp;旋转相关的操作</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">/*以下为常用的数据</span></span><br><span class="line"><span class="comment">        //获取位置</span></span><br><span class="line"><span class="comment">        Debug.Log(transform.position);</span></span><br><span class="line"><span class="comment">        Debug.Log(transform.localPosition);//相对父物体的位置</span></span><br><span class="line"><span class="comment">        //获取旋转</span></span><br><span class="line"><span class="comment">        Debug.Log(transform.rotation);</span></span><br><span class="line"><span class="comment">        Debug.Log(transform.localRotation);//相对父物体的旋转</span></span><br><span class="line"><span class="comment">        Debug.Log(transform.eulerAngles);//获取相对于世界的物体的欧拉角</span></span><br><span class="line"><span class="comment">        Debug.Log(transform.localEulerAngles);//相对父物体（本地）</span></span><br><span class="line"><span class="comment">        //获取缩放</span></span><br><span class="line"><span class="comment">        Debug.Log(transform.localScale);//相对于父物体的缩放，仅此一种</span></span><br><span class="line"><span class="comment">        //向量</span></span><br><span class="line"><span class="comment">        Debug.Log(transform.forward);</span></span><br><span class="line"><span class="comment">        Debug.Log(transform.right);</span></span><br><span class="line"><span class="comment">        Debug.Log(transform.up);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//父子关系</span></span><br><span class="line">        <span class="comment">//获取父物体</span></span><br><span class="line">        <span class="comment">//transform.parent.gameObject</span></span><br><span class="line">        <span class="comment">//子物体个数</span></span><br><span class="line">        <span class="comment">//Debug.Log(transform.childCount);</span></span><br><span class="line">        <span class="comment">//接触与子物体的父子关系</span></span><br><span class="line">        <span class="comment">//transform.DetachChildren();</span></span><br><span class="line">        <span class="comment">//获取子物体</span></span><br><span class="line">        Transform trans = transform.Find(<span class="string">&quot;Chuld&quot;</span>);<span class="comment">//返回值是transform型</span></span><br><span class="line">        trans = transform.GetChild(<span class="number">0</span>);<span class="comment">//获取第几个孩子，例中为第0个</span></span><br><span class="line">        <span class="comment">//判断一个物体是不是另外一个物体的子物体</span></span><br><span class="line">        <span class="built_in">bool</span> res = trans.IsChildOf(transform);</span><br><span class="line">        Debug.Log(res);</span><br><span class="line">        <span class="comment">//设置为父物体</span></span><br><span class="line">        trans.SetParent(transform);<span class="comment">//此时设置自身为自身的父物体</span></span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//以下为常用的方法</span></span><br><span class="line">        <span class="comment">//时时刻刻看向某点(例中为0，0，0)</span></span><br><span class="line">        <span class="comment">//tranform.LookAt(Vector3.zero);</span></span><br><span class="line">        <span class="comment">//旋转方法</span></span><br><span class="line">        <span class="comment">//transform.Rotate(Vector.up, 1);//让绕着up这个轴每秒转动1帧</span></span><br><span class="line">        <span class="comment">//绕某个物体旋转</span></span><br><span class="line">        <span class="comment">//transform.RotateAround(Vector3.zero, Vector3.up, 5);//绕000点的up轴进行旋转，每帧转动5度</span></span><br><span class="line">        <span class="comment">//移动</span></span><br><span class="line">        <span class="comment">//transform.Translate(Vector3.forward * 0.1f);//每一帧朝forward方向移动0.1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_12-键鼠操作"><a class="markdownIt-Anchor" href="#chapter_12-键鼠操作">#</a> Chapter_12、键鼠操作</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">KeyTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//鼠标操作是时时刻刻都可能有的，所以写在update中，每帧都判断一下</span></span><br><span class="line">        <span class="comment">//按下鼠标0左键 1右键 2滚轮</span></span><br><span class="line">        <span class="keyword">if</span>(Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;鼠标左键&quot;</span>);<span class="comment">//只有按下瞬间触发</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//持续按下鼠标</span></span><br><span class="line">        <span class="keyword">if</span>(Input.GetMouseButton(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;持续按下左键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//抬起鼠标</span></span><br><span class="line">        <span class="keyword">if</span>(Input.GetMouseButtonUp(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;抬起鼠标左键&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//按下键盘按键</span></span><br><span class="line">        <span class="keyword">if</span>(Input.GetKeyDown(KeyCode.A))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;按下了A&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//持续按下按键</span></span><br><span class="line">        <span class="keyword">if</span> (Input.GetKey(KeyCode.A))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;持续按下了A&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//抬起键盘按键</span></span><br><span class="line">        <span class="keyword">if</span>(Input.GetKeyUp(KeyCode.A))<span class="comment">//不可以用&quot;A&quot;,但是可以用&quot;a&quot;</span></span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;松开了A&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_13-虚拟轴的使用"><a class="markdownIt-Anchor" href="#chapter_13-虚拟轴的使用">#</a> Chapter_13、虚拟轴的使用</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AxisTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;   <span class="comment">/*</span></span><br><span class="line"><span class="comment">        //获取水平轴</span></span><br><span class="line"><span class="comment">        float horizontal = Input.GetAxis(&quot;Horizontal&quot;)//()中填写轴的名称</span></span><br><span class="line"><span class="comment">        float vertical = Input.GetAxis(&quot;Vertical&quot;);</span></span><br><span class="line"><span class="comment">        Debug.Log(horizontal + &quot; &quot; + vertical);</span></span><br><span class="line"><span class="comment">        */</span></span><br><span class="line">        <span class="comment">//虚拟按键</span></span><br><span class="line">        <span class="keyword">if</span>(Input.GetButtonDown(<span class="string">&quot;Jump&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;空格&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(Input.GetButton(<span class="string">&quot;Jump&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;空格&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(Input.GetButtonUp(<span class="string">&quot;Jump&quot;</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            Debug.Log(<span class="string">&quot;空格&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_14-手机上的触摸操作"><a class="markdownIt-Anchor" href="#chapter_14-手机上的触摸操作">#</a> Chapter_14、手机上的触摸操作</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TouchTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//开启多点触摸</span></span><br><span class="line">        Input.multiTouchEnabled = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span>/判断单点触摸</span></span><br><span class="line">        <span class="comment">//if(Input.touchCount == 1)</span></span><br><span class="line">        <span class="comment">//&#123;</span></span><br><span class="line">        <span class="comment">//    //触摸对象</span></span><br><span class="line">        <span class="comment">//    Touch touch = Input.touches[0];//点击事件都存储在touch这个对象上</span></span><br><span class="line">        <span class="comment">//    //触摸位置</span></span><br><span class="line">        <span class="comment">//    Debug.Log(touch.position);</span></span><br><span class="line">        <span class="comment">//    //触摸阶段</span></span><br><span class="line">        <span class="comment">//    switch (touch.phase)//单点触摸</span></span><br><span class="line">        <span class="comment">//    &#123;</span></span><br><span class="line">        <span class="comment">//        case touchPhase.Began:</span></span><br><span class="line">        <span class="comment">//            break;</span></span><br><span class="line">        <span class="comment">//        case touchPhase.Moved:</span></span><br><span class="line">        <span class="comment">//            break;</span></span><br><span class="line">        <span class="comment">//        case touchPhase.Stationary://静止时候做什么</span></span><br><span class="line">        <span class="comment">//            break;</span></span><br><span class="line">        <span class="comment">//        case touchPhase.Ended:</span></span><br><span class="line">        <span class="comment">//            break;</span></span><br><span class="line">        <span class="comment">//        case touchPhase.Canceled:</span></span><br><span class="line">        <span class="comment">//            break;</span></span><br><span class="line">        <span class="comment">//    &#125;</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//判断多点触摸</span></span><br><span class="line">        <span class="keyword">if</span>(Input.touchCount == <span class="number">2</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Touch touch = Input.touches[<span class="number">0</span>];</span><br><span class="line">            Touch touch1 = Input.touches[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_15-音频控制相关的脚本"><a class="markdownIt-Anchor" href="#chapter_15-音频控制相关的脚本">#</a> Chapter_15、音频控制相关的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AudioTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//AudioClip</span></span><br><span class="line">    <span class="keyword">public</span> AudioClip music;<span class="comment">//；音乐1</span></span><br><span class="line">    <span class="keyword">public</span> AudioClip se;<span class="comment">//音效1</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//播放器组件</span></span><br><span class="line">    <span class="keyword">private</span> AudioSource player;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = GetComponent&lt;AudioSource&gt;();<span class="comment">//获取到播放器组件</span></span><br><span class="line">        player.clip = music;<span class="comment">//设定播放的音频片段</span></span><br><span class="line">        <span class="comment">//循环播放</span></span><br><span class="line">        player.loop = <span class="literal">true</span>;</span><br><span class="line">        <span class="comment">//设置音量</span></span><br><span class="line">        player.volume = <span class="number">0.5f</span>;</span><br><span class="line">        <span class="comment">//播放</span></span><br><span class="line">        player.Play();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//按空格切换声音的播放和暂停</span></span><br><span class="line">        <span class="keyword">if</span>(Input.GetKeyDown(KeyCode.Space))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//如果当前正在播放声音</span></span><br><span class="line">            <span class="keyword">if</span>(player.isPlaying)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//暂停</span></span><br><span class="line">                player.Pause();</span><br><span class="line">                <span class="comment">//player.Stop();停止播放,下次从头开始播放</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//继续播放</span></span><br><span class="line">                player.UnPause();</span><br><span class="line">                <span class="comment">//player.Play();</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//按鼠标左键播放声音</span></span><br><span class="line">        <span class="keyword">if</span>(Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            player.PlayOneShot(se);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_16-视频控制相关的脚本"><a class="markdownIt-Anchor" href="#chapter_16-视频控制相关的脚本">#</a> Chapter_16、视频控制相关的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.Video;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">VideoTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> VideoPlayer player;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = GetComponent&lt;VideoPlayer&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            player.Pause();<span class="comment">//操作基本类似音频</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_17-角色控制基本移动相关的脚本"><a class="markdownIt-Anchor" href="#chapter_17-角色控制基本移动相关的脚本">#</a> Chapter_17、角色控制基本移动相关的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerControl</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> CharacterController player;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        player = GetComponent&lt;CharacterController&gt;();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//水平轴</span></span><br><span class="line">        <span class="built_in">float</span> horizontal = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line">        <span class="comment">//垂直轴</span></span><br><span class="line">        <span class="built_in">float</span> vertical = Input.GetAxis(<span class="string">&quot;Vertical&quot;</span>);</span><br><span class="line">        <span class="comment">//创建成一个方向向量</span></span><br><span class="line">        Vector3 dir = <span class="keyword">new</span> Vector3(horizontal, <span class="number">0</span>, vertical);</span><br><span class="line">        <span class="comment">//Debug.DrawRay(transform.position, dir, color.red);</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//朝向该方向移动</span></span><br><span class="line">        player.SimpleMove(dir * <span class="number">2</span>);<span class="comment">//不带Simple是不受重力影响的，*2是为了加速移动,当然整体可以改为transform.Translate(dir*2*Time.deltaTime);帧转秒用的方式也体现在此</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_18-发生碰撞的监听脚本"><a class="markdownIt-Anchor" href="#chapter_18-发生碰撞的监听脚本">#</a> Chapter_18、发生碰撞的监听脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">FireTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//创建一个爆炸预设体</span></span><br><span class="line">    <span class="keyword">public</span> GameObject Prefab;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//监听发生碰撞</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionEnter</span>(<span class="params">Collision collision</span>)<span class="comment">//会获取到碰撞到的物品的信息</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//创建一个爆炸物体</span></span><br><span class="line">        Instantiate(Prefab,transform.position,Quaternion.identity);<span class="comment">//在当前位置，不旋转</span></span><br><span class="line">        <span class="comment">//销毁自身</span></span><br><span class="line">        Destroy(gameObject);<span class="comment">//gameObject代表当前物体</span></span><br><span class="line">        <span class="comment">//获取碰撞到的物体</span></span><br><span class="line">        Debug.Log(collision.gameObject.name);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//持续碰撞中</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionStay</span>(<span class="params">Collision collision</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//结束碰撞</span></span><br><span class="line">	<span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnCollisionExit</span>(<span class="params">Collision collision</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_19-触发器相关的脚本"><a class="markdownIt-Anchor" href="#chapter_19-触发器相关的脚本">#</a> Chapter_19、触发器相关的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">TriggerControl</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//注意碰撞传的参数是Collision类型,返回的是物体，要得到碰撞物体的碰撞器还要collision.collider</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerEnter</span>(<span class="params">Collider other</span>)<span class="comment">//这里是直接给出进入触发的物体的触发器</span></span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//此处实现让一个叫做door的物体消失,最常用的游戏制作用法之一</span></span><br><span class="line">        GameObject door = GameObject.Find(<span class="string">&quot;Door&quot;</span>);</span><br><span class="line">        <span class="keyword">if</span>(door!=<span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            door.SetActive(<span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerStay</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnTriggerExit</span>(<span class="params">Collider other</span>)</span></span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_20-射线检测的脚本"><a class="markdownIt-Anchor" href="#chapter_20-射线检测的脚本">#</a> Chapter_20、射线检测的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RayTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//方式1</span></span><br><span class="line">        Ray ray = <span class="keyword">new</span> Ray(Vector3.zero, Vector3.up);<span class="comment">//以前一个点作为出发点，后一个点作为发射方向</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//方式2</span></span><br><span class="line">        <span class="keyword">if</span>(Input.GetMouseButtonDown(<span class="number">0</span>))<span class="comment">//按下鼠标左键时候发出射线</span></span><br><span class="line">        &#123;</span><br><span class="line">            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class="line">            <span class="comment">//声明一个碰撞信息类</span></span><br><span class="line">            RaycastHit hit;</span><br><span class="line">            <span class="comment">//碰撞检测</span></span><br><span class="line">            <span class="built_in">bool</span> res = Physics.Raycast(ray, <span class="keyword">out</span> hit);</span><br><span class="line">            <span class="comment">//如果碰撞到的情况下，hit就有内容了</span></span><br><span class="line">            <span class="keyword">if</span>(res == <span class="literal">true</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.Log(hit.point);</span><br><span class="line">                transform.position = hit.point;<span class="comment">//当前物体的位置移动到射线碰撞的位置</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">//多检测</span></span><br><span class="line">            <span class="comment">//RaycastHit[] hits = Physics.RaycastAll(ray,100,1&lt;&lt;10);//检测射线碰到的所有物体，每碰到一个物体就hits就多上一个,100是检测距离,1&lt;&lt;10代表就检测第10图层,非第十图层不检测</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_21-画线段组件的脚本"><a class="markdownIt-Anchor" href="#chapter_21-画线段组件的脚本">#</a> Chapter_21、画线段组件的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">lineTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//设定线段位置</span></span><br><span class="line">        <span class="comment">//获取线段渲染器</span></span><br><span class="line">        LineRenderer lineRenderer = GetComponent&lt;LineRenderer&gt;();</span><br><span class="line">        lineRenderer.positionCount = <span class="number">3</span>;<span class="comment">//设置线段需要多少个点</span></span><br><span class="line">        lineRenderer.SetPosition(<span class="number">0</span>,Vector3.zero);<span class="comment">//设置第0个点，位置为000，采用逐个设置的方式</span></span><br><span class="line">        lineRenderer.SetPosition(<span class="number">1</span>,Vector3.one);</span><br><span class="line">        lineRenderer.SetPosition(<span class="number">2</span>, Vector3.down);</span><br><span class="line">        <span class="comment">//设置开始/结束时候的宽度和颜色</span></span><br><span class="line">        <span class="comment">//lineRenderer.endwidth、endcolor、startwidth、startcolor</span></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_22-旧动画组件的脚本"><a class="markdownIt-Anchor" href="#chapter_22-旧动画组件的脚本">#</a> Chapter_22、旧动画组件的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AnimationTest</span> : <span class="title">MonoBehaviour</span><span class="comment">//旧版动画组件</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            GetComponent&lt;Animation&gt;().Play(<span class="string">&quot;Video&quot;</span>);<span class="comment">//默认没参数时会播放默认视频</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_23-新动画组件的脚本"><a class="markdownIt-Anchor" href="#chapter_23-新动画组件的脚本">#</a> Chapter_23、新动画组件的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AnimatorTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> Animator animator;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        animator = GetComponent&lt;Animator&gt;();<span class="comment">//获取动画器组件，只需要一次</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            animator.Play(<span class="string">&quot;right&quot;</span>);<span class="comment">//播放相应的动画</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_24-人物活动1的脚本"><a class="markdownIt-Anchor" href="#chapter_24-人物活动1的脚本">#</a> Chapter_24、人物活动 1 的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerController</span> : <span class="title">MonoBehaviour</span><span class="comment">//基本动画操作</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(Input.GetKeyDown(KeyCode.F))<span class="comment">//按下F键</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//触发pickup参数</span></span><br><span class="line">            GetComponent&lt;Animator&gt;().SetTrigger(<span class="string">&quot;pickup&quot;</span>);<span class="comment">//触发叫做pickup的条件参数</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_25-人物活动2的脚本"><a class="markdownIt-Anchor" href="#chapter_25-人物活动2的脚本">#</a> Chapter_25、人物活动 2 的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerControl1</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//反向动力学(IK)演示对象</span></span><br><span class="line">    <span class="keyword">public</span> Transform target;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> Animator animator;<span class="comment">//设置动画组件成员，人真的跑起来了</span></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        animator = GetComponent&lt;Animator&gt;();<span class="comment">//获取组件       </span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//水平轴</span></span><br><span class="line">        <span class="built_in">float</span> horizontal = Input.GetAxis(<span class="string">&quot;Horizontal&quot;</span>);</span><br><span class="line">        <span class="comment">//垂直轴</span></span><br><span class="line">        <span class="built_in">float</span> vertical = Input.GetAxis(<span class="string">&quot;Vertical&quot;</span>);</span><br><span class="line">        <span class="comment">//向量</span></span><br><span class="line">        Vector3 dir = <span class="keyword">new</span> Vector3(horizontal, <span class="number">0</span>, vertical);</span><br><span class="line">        <span class="comment">//当用户按下了方向键</span></span><br><span class="line">        <span class="keyword">if</span>(dir != Vector3.zero)</span><br><span class="line">        &#123;</span><br><span class="line">            transform.rotation = Quaternion.LookRotation(dir);<span class="comment">//面向向量</span></span><br><span class="line">            <span class="comment">//播放跑步动画</span></span><br><span class="line">            animator.SetBool(<span class="string">&quot;IsRun&quot;</span>, <span class="literal">true</span>);</span><br><span class="line">            <span class="comment">//朝向前方移动</span></span><br><span class="line">            transform.Translate(Vector3.forward * <span class="number">2</span> * Time.deltaTime);<span class="comment">//转成每秒移动</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//播放站立动画</span></span><br><span class="line">            animator.SetBool(<span class="string">&quot;IsRun&quot;</span>, <span class="literal">false</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//随时获取Test参数并打印出来,打印出动画的曲线</span></span><br><span class="line">        Debug.Log(animator.GetFloat(<span class="string">&quot;Test&quot;</span>));</span><br><span class="line"></span><br><span class="line">        <span class="comment">//打印事件</span></span><br><span class="line">        <span class="comment">//void leftFoot()</span></span><br><span class="line">        <span class="comment">//&#123;</span></span><br><span class="line">        <span class="comment">//    Debug.Log(&quot;左脚&quot;);</span></span><br><span class="line">        <span class="comment">//&#125;//可以在落地时生成火花，同时可以播放脚步声</span></span><br><span class="line">        <span class="comment">//void rightFoot()</span></span><br><span class="line">        <span class="comment">//&#123;</span></span><br><span class="line">        <span class="comment">//    Debug.Log(&quot;右脚&quot;);</span></span><br><span class="line">        <span class="comment">//&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">//IK实现写道下面这个方法内</span></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnAnimatorIK</span>(<span class="params"><span class="built_in">int</span> layerIndex</span>)<span class="comment">//控制哪一层IK</span></span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//设置头部IK</span></span><br><span class="line">            animator.SetLookAtWeight(<span class="number">1</span>);<span class="comment">//设置权重为1时，才会有效</span></span><br><span class="line">            animator.SetLookAtPosition(target.position);</span><br><span class="line">            <span class="comment">//设置右手IK</span></span><br><span class="line">            animator.SetIKPositionWeight(AvatarlGoal.RightHand, <span class="number">1</span>);</span><br><span class="line">            <span class="comment">//旋转权重</span></span><br><span class="line">            animator.SetIKRotationWeight(AvatarlGoal.LeftHand, <span class="number">1</span>);</span><br><span class="line">            <span class="comment">//设置右手IK</span></span><br><span class="line">            animator.SetIKPosition(AvatarIKGoal.RightHand, target.position);</span><br><span class="line">            animator.SetIKRotation(AvatarIKGoal.RightHand, target.rotation);<span class="comment">//手部设置一个旋转权重</span></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_26-导航活动相关的脚本"><a class="markdownIt-Anchor" href="#chapter_26-导航活动相关的脚本">#</a> Chapter_26、导航活动相关的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.AI;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">PlayerControl2</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">private</span> NavMeshAgent.agent;<span class="comment">//代理组件</span></span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//获取代理组件</span></span><br><span class="line">        agent = GetComponent&lt;NavMeshAgent&gt;();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//如果按下鼠标</span></span><br><span class="line">        <span class="keyword">if</span>(Input.GetMouseButtonDown(<span class="number">0</span>))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//获取点击位置</span></span><br><span class="line">            Ray ray = Camera.main.ScreenPointToRay(Input.mousePosition);</span><br><span class="line">            RaycastHit hit;<span class="comment">//判断射线是否碰到物体</span></span><br><span class="line">            <span class="keyword">if</span>(Physics.Raycast(ray, <span class="keyword">out</span> hit))<span class="comment">//射线检测，如果检测到射线返回true证明检测成功</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//点击位置</span></span><br><span class="line">                Vector3 point = hit.point;<span class="comment">//就是鼠标的点击位置</span></span><br><span class="line">                <span class="comment">//设置该位置为导航目标点</span></span><br><span class="line">                agent.SetDestination(point);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="chapter_27-选项框相关的脚本"><a class="markdownIt-Anchor" href="#chapter_27-选项框相关的脚本">#</a> Chapter_27、选项框相关的脚本</h2>
<figure class="highlight c#"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Collections;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> UnityEngine;</span><br><span class="line"><span class="keyword">using</span> UnityEngine.UI;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">DropDownTest</span> : <span class="title">MonoBehaviour</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Start is called before the first frame update</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Start</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//获取下拉组件</span></span><br><span class="line">        Dropdown dropdown = GetComponent&lt;Dropdown&gt;();</span><br><span class="line">        <span class="comment">//获取组件的选项</span></span><br><span class="line">        List&lt;Dropdown.OptionData&gt; options = dropdown.options;</span><br><span class="line">        <span class="comment">//修改选项</span></span><br><span class="line">        options.Add(<span class="keyword">new</span> Dropdown.Option(<span class="string">&quot;俄罗斯&quot;</span>));</span><br><span class="line">        dropdown.options = options;<span class="comment">//加完后的选项赋值上去</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Update is called once per frame</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">Update</span>()</span></span><br><span class="line">    &#123;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><mark>一刷结束了，撒花，接着看情况修改完善，接着可能会加上一些进阶的操作代码以供参考</mark></p>
]]></content>
      <categories>
        <category>Unity基础学习代码大全</category>
      </categories>
      <tags>
        <tag>Unity</tag>
      </tags>
  </entry>
  <entry>
    <title>Hello World</title>
    <url>/2022/05/01/hello-world/</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start">#</a> Quick Start</h2>
<h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post">#</a> Create a new post</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server">#</a> Run server</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files">#</a> Generate static files</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites">#</a> Deploy to remote sites</h3>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>Markdown的基础语法*超详细*（1）</title>
    <url>/2022/05/03/markdown%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95/</url>
    <content><![CDATA[<h1 id="markdown的基础语法超详细1"><a class="markdownIt-Anchor" href="#markdown的基础语法超详细1">#</a> Markdown 的基础语法<em>超详细</em>（1）</h1>
<p><strong><mark>part1. 标题</mark></strong></p>
<h1 id="一级标题想要几级标题就在标题前加几个"><a class="markdownIt-Anchor" href="#一级标题想要几级标题就在标题前加几个">#</a> 一级标题（想要几级标题就在标题前加几个’#‘）</h1>
<h2 id="二级标题"><a class="markdownIt-Anchor" href="#二级标题">#</a> 二级标题</h2>
<h3 id="三级标题"><a class="markdownIt-Anchor" href="#三级标题">#</a> 三级标题</h3>
<h4 id="四级标题"><a class="markdownIt-Anchor" href="#四级标题">#</a> 四级标题</h4>
<h5 id="五级标题"><a class="markdownIt-Anchor" href="#五级标题">#</a> 五级标题</h5>
<h6 id="六级标题"><a class="markdownIt-Anchor" href="#六级标题">#</a> 六级标题</h6>
<p><em>####### 七级标题（六级标题是上限哦！）</em></p>
<p><strong><mark>part2. 引用</mark></strong></p>
<blockquote>
<p>用电脑键盘右下方的‘&gt;‘表示</p>
<blockquote>
<p>小箭头越多表示引用级数越多</p>
<blockquote>
<p>三级引用</p>
<blockquote>
<p>四级引用</p>
<blockquote>
<p>五级引用</p>
<blockquote>
<p>六级引用</p>
<blockquote>
<p>七级引用</p>
<blockquote>
<p>八级引用</p>
<blockquote>
<p>九级引用</p>
<blockquote>
<p>十级引用</p>
<blockquote>
<p>十一级引用（引用数管够！）</p>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
</blockquote>
<p><em>tips1 : &lt;n 个箭头 = n 级&gt; 有时是错的！如果引用没有断开如果当行箭头比上一行小，则当前显示的引用级数是继承上一层的。如想让 &lt; 级数 = 箭头数 &gt;，请再设定所想级数行之下的一行进行内容填写。（即换行输入，但显示内容仍在引用行上不用担心）</em></p>
<p><em>tips2 : 在按下<strong> return 键</strong>之后只能继承原有（当前层所有）级数 1 次，如若不输入内容再按<strong> return 键</strong>后变为无引用状态。但是空引用不会有所显示。</em></p>
<p><em>tips3 : 要结束引用状态也要换行到引用符下的第二行，不然就会连在一起ヽ (￣ω￣(￣ω￣〃) ゝ</em></p>
<p><strong><mark>part3. 高光</mark></strong></p>
<p><em>如标题所示的效果。实现代码格式是：&lt;两个等于号 + 所写内容 + 两个等于号&gt;（不带 &lt;&gt; 哦！）</em></p>
<p>** 示例:**①<mark>线性代数</mark>	②<mark>微积分</mark>	③<mark>离散数学</mark></p>
<p><em>tips1 : 有时候如果没有显示出高光效果，请点击左上角’文件 (F)‘—&gt;’偏好设置‘—&gt;Markdown 拓展语法 选项卡中启用这个效果。（勾上它！）</em></p>
<p><em>tips2 : <mark>高光</mark>可以嵌套使用哦！但要记住不要在等号后加空格哦！</em></p>
<p><strong><mark>part4. 上下标</mark></strong></p>
<p><em>Ⅰ 下标</em><br>
<em>所需语法 : &lt;边～下标～边&gt;(不包括 &lt;&gt; 哦！同时去掉 ‘~’ 标两侧的空格即可实现！’)</em></p>
<p>** 示例:**①H<sub>2</sub>O	②<sub>我是小下标</sub></p>
<p><em>Ⅰ 上标</em><br>
<em>所需语法 : &lt;边 ^ 下标 ^ 边&gt;(不包括 &lt;&gt; 哦！同时去掉 ‘^’ 标两侧的空格即可实现！’)</em></p>
<p>** 示例:**①H<sup>2</sup>O	②<sup>我是小上标</sup></p>
<p><strong><mark>part5. 水平线</mark></strong></p>
<p><em>所需语法 : &lt;<em><em><em><em> 加</em> return 键</em> &gt; 或 &lt;---- 加</em> return 键</em> &gt; 其中的 '</em>’ 与 '-' 数量要 &gt;=3 且要使用时要单独成行 *</p>
<p><strong>示例:</strong><br>
①</p>
<hr>
<p>②</p>
<hr>
<p><em>tips : 建议使用</em> **<em> 来做水平线，如果用 ---- 的话需要在 — 上有一行空行，不然就会放大上一行字体</em></p>
<h2 id="如"><a class="markdownIt-Anchor" href="#如">#</a> 如：</h2>
<p><s>完结撒花</s><br>
<em><strong><mark>未完待续</mark></strong></em></p>
]]></content>
      <categories>
        <category>Markdown语法学习</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>Markdown的基础语法*超详细*（2）</title>
    <url>/2022/05/05/Markdown%E7%9A%84%E5%9F%BA%E7%A1%80%E8%AF%AD%E6%B3%95(2)/</url>
    <content><![CDATA[<h1 id="markdown的基础语法超详细2"><a class="markdownIt-Anchor" href="#markdown的基础语法超详细2">#</a> Markdown 的基础语法<em>超详细</em>（2）</h1>
<p><strong><mark>part6. 列表</mark></strong></p>
<p><em>Ⅰ 无序列表</em><br>
<em>所需格式：&lt;输入’8 上面的星星号’加空格&gt; 或 &lt; 输入 + 加空格 &gt; 或 &lt; 输入 - 加空格 &gt; 写入内容后回车</em><br>
 * 示例: *<br>
①</p>
<ul>
<li>我想是一</li>
<li>我想是二</li>
<li>我想是三（星星开头）</li>
</ul>
<ul>
<li>重复一次</li>
<li>重复两次</li>
<li>重复三次（加号开头）</li>
</ul>
<ul>
<li>再来一遍</li>
<li>再来两遍</li>
<li>再来三遍</li>
</ul>
<p><em>tips : 没有空格，效果不会出发哦！(⊙﹏⊙)</em></p>
<p><em>Ⅱ 有序列表</em><br>
<em>所需格式 : &lt;输入 1.&gt; 写入内容后回车</em><br>
 * 示例: *<br>
①<br>
1. 是一<br>
 2. 是二<br>
 3. 是三<br>
②</p>
<ol>
<li>是一</li>
<li>是二</li>
<li>是三<br>
⑤</li>
<li>是一</li>
<li>是二</li>
<li>是三</li>
</ol>
<p><em>tips：有序的列表<mark>没有</mark>空格的需求，但是没有空格是，形式会很奇怪</em></p>
<p><em>tips : 后期会有进阶讲列表升级（一级列表、二级列表）</em></p>
<p><strong><mark>part7. 任务列表</mark></strong><br>
<em>所需格式：&lt;- [] &gt; 与 &lt;- [x] &gt; 注意’]' 后有空格</em><br>
 * 示例: *<br>
①</p>
<ul class="task-list">
<li class="task-list-item"><input type="checkbox" id="cbx_0" disabled="true"><label for="cbx_0"> 未完成</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_1" checked="true" disabled="true"><label for="cbx_1"> 完成</label></li>
<li class="task-list-item"><input type="checkbox" id="cbx_2" disabled="true"><label for="cbx_2"> 未完成</label></li>
</ul>
<p><strong><mark>part8. 表格</mark></strong><br>
<em>所需格式：&lt;每行都是‘| 内容 | 内容 |’（第二行要 |—|---|…）&gt; 内容间用‘|’分隔，没有空格要求，但要在两侧加上‘|’围边</em><br>
 * 示例: *<br>
①</p>
<table>
<thead>
<tr>
<th>表格</th>
<th>表格</th>
</tr>
</thead>
<tbody>
<tr>
<td>表格</td>
<td>表格</td>
</tr>
<tr>
<td>表格</td>
<td>表格</td>
</tr>
</tbody>
</table>
<p><strong><mark>part9. 粗体</mark></strong><br>
<em>所需格式：&lt;’8 上的星星连续 2 个‘内容’8 上的星星连续 2 个‘&gt;，不是很好表达</em><br>
 * 示例: *<br>
①<strong>cuti</strong>	②<strong>粗体</strong></p>
<p><em>tips：它也是可以嵌套地哦！</em></p>
<p><strong><mark>part10. 斜体</mark></strong><br>
<em>所需格式：&lt;’8 上的星星 1 个‘内容’8 上的星星 1 个‘&gt;，不是很好表达</em><br>
<em>示例: *<br>
①</em>xieti*	②<em>斜体</em></p>
<p><mark>to be continue</mark></p>
<p>​</p>
]]></content>
      <categories>
        <category>Markdown语法学习</category>
      </categories>
      <tags>
        <tag>Markdown</tag>
      </tags>
  </entry>
  <entry>
    <title>今天鸽了qwq</title>
    <url>/2022/05/04/%E4%BB%8A%E5%A4%A9%E9%B8%BD%E4%BA%86/</url>
    <content><![CDATA[<h1 id="今天鸽了"><a class="markdownIt-Anchor" href="#今天鸽了">#</a> 今天鸽了</h1>
<p><s>配了一天的 vscode，还没配出来</s><br>
提供几个我个人收藏免费看动漫和国产漫画的网址吧：1、<a href="http://yhdm86.com/">http://yhdm86.com/</a>	2、<a href="http://www.qiman56.com/">http://www.qiman56.com/</a> （这个我现在已经不用了，国漫脸看腻了） 3、<a href="https://www.copymanga.tv/https://www.copymanga.tv/">https://www.copymanga.tv/https://www.copymanga.tv/</a> （一般我想看都是看这个的，拷贝 yyds。唯二缺点就是有点慢和有广告，但是不用 fq 就能看，而且漫画挺全的。//<mark> 当然还是要支持正版，有能力的话</mark>）</p>
<hr>
<p>4.22 更新</p>
<p>emmm，现在好歹不是以前的自己了，vscode 也配好了，甚至还搞好了 C# 和 python 的环境。</p>
<p>顺便也把之前提供的网址修改了一下，增加一个补充网站。</p>
]]></content>
      <categories>
        <category>偷懒合集(bushi)</category>
      </categories>
  </entry>
  <entry>
    <title>水一期，qwq，作业写完了</title>
    <url>/2022/05/11/%E4%BD%9C%E4%B8%9A%E5%86%99%E5%AE%8C%E4%BA%86/</url>
    <content><![CDATA[<h1 id="水一期作业写完了"><a class="markdownIt-Anchor" href="#水一期作业写完了">#</a> 水一期，作业写完了</h1>
<p><strong><mark>预告新标签：全国大学生数学竞赛选题谈</mark></strong></p>
<hr>
<p>2023 年 4 月 22 日更新</p>
<p>我感觉好像更不了的感觉捏，虽然我这本倒是刷完了，可能更新这个要到我再补更新几期 markdown 语法吧，有点难蚌。<s>感觉以前博客选图好。。。</s></p>
]]></content>
  </entry>
  <entry>
    <title>关于ccleaner把回收站注册表清除掉的那些事</title>
    <url>/2022/05/07/%E5%85%B3%E4%BA%8Eccleaner%E6%8A%8A%E5%9B%9E%E6%94%B6%E7%AB%99%E6%B3%A8%E5%86%8C%E8%A1%A8%E6%B8%85%E9%99%A4%E6%8E%89%E7%9A%84%E9%82%A3%E4%BA%9B%E4%BA%8B/</url>
    <content><![CDATA[<h1 id="关于ccleaner把回收站注册表清除掉的那些事"><a class="markdownIt-Anchor" href="#关于ccleaner把回收站注册表清除掉的那些事">#</a> 关于 ccleaner 把回收站注册表清除掉的那些事</h1>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">想必大多数大学生都下过一个AutoCAD吧，然后也总是有人手贱把它给卸了重装吧。</span><br><span class="line">这个时候大多数生物都是难以重装成功的，这个是时候搜索引擎告诉我们要删除它的注册表。</span><br><span class="line">这时候大多数生物都会找到一款ccleaner的软件。</span><br><span class="line">然后开开心心清空注册表。</span><br><span class="line">然后有一天，发现回收站失去了属性和清空回收站的功能。</span><br><span class="line">此篇博客将为各位带来解决方案（本人也是看大神的解决方案加亲身实践选择的）</span><br></pre></td></tr></table></figure>
<p><mark>目前最有效的方法</mark><br>
桌面新建一个 txt 文件<br>
在里面 cp 进去以下代码</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">Windows Registry Editor Version <span class="number">5.00</span></span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\CLSID\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;]</span><br><span class="line">@=<span class="string">&quot;回收站&quot;</span></span><br><span class="line"><span class="string">&quot;InfoTip&quot;</span>=hex(<span class="number">2</span>):<span class="number">40</span>,<span class="number">00</span>,<span class="number">25</span>,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">52</span>,<span class="number">00</span>,<span class="number">6f</span>,<span class="number">00</span>,\</span><br><span class="line"><span class="number">6f</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">25</span>,<span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,5c,\</span><br><span class="line"><span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">48</span>,<span class="number">00</span>,<span class="number">45</span>,<span class="number">00</span>,4c,<span class="number">00</span>,4c,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,2e,<span class="number">00</span>,<span class="number">64</span>,<span class="number">00</span>,6c,<span class="number">00</span>,6c,<span class="number">00</span>,2c,<span class="number">00</span>,\</span><br><span class="line"><span class="number">2d</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,<span class="number">39</span>,<span class="number">00</span>,<span class="number">31</span>,<span class="number">00</span>,<span class="number">35</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span></span><br><span class="line"><span class="string">&quot;SortOrderIndex&quot;</span>=dword:<span class="number">00000060</span></span><br><span class="line"><span class="string">&quot;IntroText&quot;</span>=hex(<span class="number">2</span>):<span class="number">40</span>,<span class="number">00</span>,<span class="number">25</span>,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">52</span>,<span class="number">00</span>,<span class="number">6f</span>,<span class="number">00</span>,\</span><br><span class="line"><span class="number">6f</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">25</span>,<span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,5c,\</span><br><span class="line"><span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">48</span>,<span class="number">00</span>,<span class="number">45</span>,<span class="number">00</span>,4c,<span class="number">00</span>,4c,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,2e,<span class="number">00</span>,<span class="number">64</span>,<span class="number">00</span>,6c,<span class="number">00</span>,6c,<span class="number">00</span>,2c,<span class="number">00</span>,\</span><br><span class="line"><span class="number">2d</span>,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">31</span>,<span class="number">00</span>,<span class="number">37</span>,<span class="number">00</span>,<span class="number">34</span>,<span class="number">00</span>,<span class="number">38</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span></span><br><span class="line"><span class="string">&quot;LocalizedString&quot;</span>=hex(<span class="number">2</span>):<span class="number">40</span>,<span class="number">00</span>,<span class="number">25</span>,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">52</span>,<span class="number">00</span>,\</span><br><span class="line"><span class="number">6f</span>,<span class="number">00</span>,<span class="number">6f</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">25</span>,<span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,\</span><br><span class="line"><span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">48</span>,<span class="number">00</span>,<span class="number">45</span>,<span class="number">00</span>,4c,<span class="number">00</span>,4c,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,2e,<span class="number">00</span>,<span class="number">64</span>,<span class="number">00</span>,6c,<span class="number">00</span>,6c,<span class="number">00</span>,\</span><br><span class="line">2c,<span class="number">00</span>,<span class="number">2d</span>,<span class="number">00</span>,<span class="number">38</span>,<span class="number">00</span>,<span class="number">39</span>,<span class="number">00</span>,<span class="number">36</span>,<span class="number">00</span>,<span class="number">34</span>,<span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span></span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\CLSID\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;\DefaultIcon]</span><br><span class="line">@=hex(<span class="number">2</span>):<span class="number">25</span>,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">52</span>,<span class="number">00</span>,<span class="number">6f</span>,<span class="number">00</span>,<span class="number">6f</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">25</span>,\</span><br><span class="line"><span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">68</span>,<span class="number">00</span>,\</span><br><span class="line"><span class="number">65</span>,<span class="number">00</span>,6c,<span class="number">00</span>,6c,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,2e,<span class="number">00</span>,<span class="number">64</span>,<span class="number">00</span>,6c,<span class="number">00</span>,6c,<span class="number">00</span>,2c,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">31</span>,<span class="number">00</span>,<span class="number">00</span>,\</span><br><span class="line"><span class="number">00</span></span><br><span class="line"><span class="string">&quot;Empty&quot;</span>=hex(<span class="number">2</span>):<span class="number">25</span>,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">52</span>,<span class="number">00</span>,<span class="number">6f</span>,<span class="number">00</span>,<span class="number">6f</span>,<span class="number">00</span>,<span class="number">74</span>,\</span><br><span class="line"><span class="number">00</span>,<span class="number">25</span>,<span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,\</span><br><span class="line"><span class="number">68</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,6c,<span class="number">00</span>,6c,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,2e,<span class="number">00</span>,<span class="number">64</span>,<span class="number">00</span>,6c,<span class="number">00</span>,6c,<span class="number">00</span>,2c,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">31</span>,\</span><br><span class="line"><span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span></span><br><span class="line"><span class="string">&quot;Full&quot;</span>=hex(<span class="number">2</span>):<span class="number">25</span>,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">52</span>,<span class="number">00</span>,<span class="number">6f</span>,<span class="number">00</span>,<span class="number">6f</span>,<span class="number">00</span>,<span class="number">74</span>,\</span><br><span class="line"><span class="number">00</span>,<span class="number">25</span>,<span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">53</span>,<span class="number">00</span>,<span class="number">79</span>,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,<span class="number">74</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,<span class="number">6d</span>,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,5c,<span class="number">00</span>,<span class="number">73</span>,<span class="number">00</span>,\</span><br><span class="line"><span class="number">68</span>,<span class="number">00</span>,<span class="number">65</span>,<span class="number">00</span>,6c,<span class="number">00</span>,6c,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,<span class="number">00</span>,2e,<span class="number">00</span>,<span class="number">64</span>,<span class="number">00</span>,6c,<span class="number">00</span>,6c,<span class="number">00</span>,2c,<span class="number">00</span>,<span class="number">33</span>,<span class="number">00</span>,<span class="number">32</span>,\</span><br><span class="line"><span class="number">00</span>,<span class="number">00</span>,<span class="number">00</span></span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\CLSID\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;\InProcServer32]</span><br><span class="line">@=<span class="string">&quot;shell32.dll&quot;</span></span><br><span class="line"><span class="string">&quot;ThreadingModel&quot;</span>=<span class="string">&quot;Apartment&quot;</span></span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\CLSID\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;\shell\empty]</span><br><span class="line"><span class="string">&quot;CommandStateHandler&quot;</span>=<span class="string">&quot;&#123;c9298eef-69dd-4cdd-b153-bdbc38486781&#125;&quot;</span></span><br><span class="line"><span class="string">&quot;Description&quot;</span>=<span class="string">&quot;@shell32.dll,-31332&quot;</span></span><br><span class="line"><span class="string">&quot;Icon&quot;</span>=<span class="string">&quot;shell32.dll,-254&quot;</span></span><br><span class="line"><span class="string">&quot;MUIVerb&quot;</span>=<span class="string">&quot;@shell32.dll,-10564&quot;</span></span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\CLSID\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;\shell\empty\command]</span><br><span class="line"><span class="string">&quot;DelegateExecute&quot;</span>=<span class="string">&quot;&#123;48527bb3-e8de-450b-8910-8c4099cb8624&#125;&quot;</span></span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\CLSID\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;\shellex]</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\CLSID\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;\shellex\ContextMenuHandlers]</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\CLSID\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;\shellex\ContextMenuHandlers\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;]</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\CLSID\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;\shellex\PropertySheetHandlers]</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\CLSID\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;\shellex\PropertySheetHandlers\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;]</span><br><span class="line"> </span><br><span class="line">[HKEY_CLASSES_ROOT\CLSID\&#123;645FF040-<span class="number">5081</span>-101B-9F08-00AA002F954E&#125;\ShellFolder]</span><br><span class="line"><span class="string">&quot;Attributes&quot;</span>=hex:<span class="number">50</span>,<span class="number">01</span>,<span class="number">00</span>,<span class="number">20</span></span><br><span class="line"><span class="string">&quot;CallForAttributes&quot;</span>=dword:<span class="number">00000000</span></span><br></pre></td></tr></table></figure>
<p>最后另存为 fix.reg (选择所有文档格式)，双击导入注册表，重启电脑<br>
原链接：<a href="https://blog.csdn.net/chengnan2330/article/details/100783570">https://blog.csdn.net/chengnan2330/article/details/100783570</a></p>
<p><em>大家也有可能会搜到以下的方法，但这种方法效果不是很好，弊端如：1、对任何桌面软件右键都有’清空回收站‘选项。2、在回收站的内部没有’清空回收站‘。</em></p>
<p><mark>不是很推荐</mark></p>
<p>如果想了解，原链接为：<a href="https://blog.csdn.net/OpasPolice/article/details/117551682?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4-117551682-blog-93135632.pc_relevant_default&amp;spm=1001.2101.3001.4242.3&amp;utm_relevant_index=7">https://blog.csdn.net/OpasPolice/article/details/117551682?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_baidulandingword~default-4-117551682-blog-93135632.pc_relevant_default&amp;spm=1001.2101.3001.4242.3&amp;utm_relevant_index=7</a></p>
<p><em>目前我还不太清楚试了第二种，怎么把’清空回收站‘从对软件右键后产生的列表中去除，如有大佬知道，求在评论区展示解决方法吧！谢谢！</em></p>
<p>更新一种方法：<mark>重装系统</mark>即可 XD。</p>
]]></content>
  </entry>
  <entry>
    <title>关于更新git这档子事</title>
    <url>/2023/12/03/%E5%85%B3%E4%BA%8E%E6%9B%B4%E6%96%B0git%E8%BF%99%E6%A1%A3%E5%AD%90%E4%BA%8B/</url>
    <content><![CDATA[<h2 id="关于更新git这档子事"><a class="markdownIt-Anchor" href="#关于更新git这档子事">#</a> 关于更新 git 这档子事</h2>
<p>![1701524089636](C:\Users\QJF\OneDrive\ 文档 \WeChat Files\WeChat Files\wxid_0td1p5r6m6hc12\FileStorage\Temp\1701524089636.png)</p>
<p>今天突然想更新个博客，顺带着就想把这个 git 给更新了，结果好家伙不管怎么样试都是这样的结果</p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl: (28) Failed to connect to github.com port 443 after 21037 ms: Couldn&#x27;t connect to server</span><br></pre></td></tr></table></figure>
<p>然后就尝试关掉什么梯子啊，代理之类的再尝试，好家伙还是不得用。然后网上找了找相关的解决方法，感觉有点小烦。不知怎么地，脑筋一转，打开了 UU 加速器，连接了下面这个加速节点。</p>
<p><img src="/img/loading.gif" class="lazyload" data-src="C:%5CUsers%5CQJF%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20231202213842992.png"  alt="image-20231202213842992"></p>
<p>然后就是见证奇迹地时刻：</p>
<p>![1701524378646](C:\Users\QJF\OneDrive\ 文档 \WeChat Files\WeChat Files\wxid_0td1p5r6m6hc12\FileStorage\Temp\1701524378646.png)</p>
<p>它开始下载了😄。</p>
<p>天晴了雨停了，我觉得我又行了。</p>
<p>之后还有好多坑留着我自己埋。。。反正也都是留给自己看的，希望之后的我能更勤快地写博客吧。</p>
]]></content>
      <categories>
        <category>小问题集锦</category>
      </categories>
      <tags>
        <tag>小问题</tag>
      </tags>
  </entry>
  <entry>
    <title>C++常用代码模板（1）</title>
    <url>/2023/06/26/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF1/</url>
    <content><![CDATA[<h1 id="常用代码模板1基础算法"><a class="markdownIt-Anchor" href="#常用代码模板1基础算法">#</a> 常用代码模板 1—— 基础算法</h1>
<h4 id="快速排序算法模板"><a class="markdownIt-Anchor" href="#快速排序算法模板">#</a> 快速排序算法模板</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> i = l - <span class="number">1</span>, j = r + <span class="number">1</span>, x = q[l + r &gt;&gt; <span class="number">1</span>];</span><br><span class="line">    <span class="keyword">while</span> (i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">do</span> i ++ ; <span class="keyword">while</span> (q[i] &lt; x);</span><br><span class="line">        <span class="keyword">do</span> j -- ; <span class="keyword">while</span> (q[j] &gt; x);</span><br><span class="line">        <span class="keyword">if</span> (i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">quick_sort</span>(q, l, j), <span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="归并排序算法模板"><a class="markdownIt-Anchor" href="#归并排序算法模板">#</a> 归并排序算法模板</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> q[], <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, l, mid);</span><br><span class="line">    <span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">        <span class="keyword">if</span> (q[i] &lt;= q[j]) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">        <span class="keyword">else</span> tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (i &lt;= mid) tmp[k ++ ] = q[i ++ ];</span><br><span class="line">    <span class="keyword">while</span> (j &lt;= r) tmp[k ++ ] = q[j ++ ];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = l, j = <span class="number">0</span>; i &lt;= r; i ++, j ++ ) q[i] = tmp[j];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="整数二分算法模板"><a class="markdownIt-Anchor" href="#整数二分算法模板">#</a> 整数二分算法模板</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x)</span> </span>&#123;<span class="comment">/* ... */</span>&#125; <span class="comment">// 检查x是否满足某种性质</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid]和[mid + 1, r]时使用：</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bsearch_1</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) r = mid;    <span class="comment">// check()判断mid是否满足性质</span></span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 区间[l, r]被划分成[l, mid - 1]和[mid, r]时使用：</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bsearch_2</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r + <span class="number">1</span> &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) l = mid;</span><br><span class="line">        <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="浮点数二分算法模板"><a class="markdownIt-Anchor" href="#浮点数二分算法模板">#</a> 浮点数二分算法模板</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">double</span> x)</span> </span>&#123;<span class="comment">/* ... */</span>&#125; <span class="comment">// 检查x是否满足某种性质</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">bsearch_3</span><span class="params">(<span class="type">double</span> l, <span class="type">double</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">const</span> <span class="type">double</span> eps = <span class="number">1e-6</span>;   <span class="comment">// eps 表示精度，取决于题目对精度的要求</span></span><br><span class="line">    <span class="keyword">while</span> (r - l &gt; eps)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="高精度加法"><a class="markdownIt-Anchor" href="#高精度加法">#</a> 高精度加法</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// C = A + B, A &gt;= 0, B &gt;= 0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">add</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (A.<span class="built_in">size</span>() &lt; B.<span class="built_in">size</span>()) <span class="keyword">return</span> <span class="built_in">add</span>(B, A);</span><br><span class="line"></span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        t += A[i];</span><br><span class="line">        <span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t += B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (t) C.<span class="built_in">push_back</span>(t);</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="高精度减法"><a class="markdownIt-Anchor" href="#高精度减法">#</a> 高精度减法</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// C = A - B, 满足A &gt;= B, A &gt;= 0, B &gt;= 0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">sub</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, vector&lt;<span class="type">int</span>&gt; &amp;B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        t = A[i] - t;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t -= B[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>((t + <span class="number">10</span>) % <span class="number">10</span>);</span><br><span class="line">        <span class="keyword">if</span> (t &lt; <span class="number">0</span>) t = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> t = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="高精度乘低精度"><a class="markdownIt-Anchor" href="#高精度乘低精度">#</a> 高精度乘低精度</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// C = A * b, A &gt;= 0, b &gt;= 0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mul</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>() || t; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; A.<span class="built_in">size</span>()) t += A[i] * b;</span><br><span class="line">        C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="高精度除以低精度"><a class="markdownIt-Anchor" href="#高精度除以低精度">#</a> 高精度除以低精度</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// A / b = C ... r, A &gt;= 0, b &gt; 0</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">div</span><span class="params">(vector&lt;<span class="type">int</span>&gt; &amp;A, <span class="type">int</span> b, <span class="type">int</span> &amp;r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line">    r = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = A.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -- )</span><br><span class="line">    &#123;</span><br><span class="line">        r = r * <span class="number">10</span> + A[i];</span><br><span class="line">        C.<span class="built_in">push_back</span>(r / b);</span><br><span class="line">        r %= b;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">reverse</span>(C.<span class="built_in">begin</span>(), C.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">while</span> (C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line">    <span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="一维前缀和"><a class="markdownIt-Anchor" href="#一维前缀和">#</a> 一维前缀和</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">S[i] = a[<span class="number">1</span>] + a[<span class="number">2</span>] + ... a[i]</span><br><span class="line">a[l] + ... + a[r] = S[r] - S[l - <span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<h4 id="二维前缀和"><a class="markdownIt-Anchor" href="#二维前缀和">#</a> 二维前缀和</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">S[i, j] = 第i行j列格子左上部分所有元素的和</span><br><span class="line">以(x1, y1)为左上角，(x2, y2)为右下角的子矩阵的和为：</span><br><span class="line">S[x2, y2] - S[x1 - <span class="number">1</span>, y2] - S[x2, y1 - <span class="number">1</span>] + S[x1 - <span class="number">1</span>, y1 - <span class="number">1</span>]</span><br></pre></td></tr></table></figure>
<h4 id="一维差分"><a class="markdownIt-Anchor" href="#一维差分">#</a> 一维差分</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">给区间[l, r]中的每个数加上c：B[l] += c, B[r + <span class="number">1</span>] -= c</span><br></pre></td></tr></table></figure>
<h4 id="二维差分"><a class="markdownIt-Anchor" href="#二维差分">#</a> 二维差分</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">给以(x1, y1)为左上角，(x2, y2)为右下角的子矩阵中的所有元素加上c：</span><br><span class="line">S[x1, y1] += c, S[x2 + <span class="number">1</span>, y1] -= c, S[x1, y2 + <span class="number">1</span>] -= c, S[x2 + <span class="number">1</span>, y2 + <span class="number">1</span>] += c</span><br></pre></td></tr></table></figure>
<h4 id="位运算"><a class="markdownIt-Anchor" href="#位运算">#</a> 位运算</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">求n的第k位数字: n &gt;&gt; k &amp; <span class="number">1</span></span><br><span class="line">返回n的最后一位<span class="number">1</span>：<span class="built_in">lowbit</span>(n) = n &amp; -n</span><br></pre></td></tr></table></figure>
<h4 id="双指针"><a class="markdownIt-Anchor" href="#双指针">#</a> 双指针</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (j &lt; i &amp;&amp; <span class="built_in">check</span>(i, j)) j ++ ;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 具体问题的逻辑</span></span><br><span class="line">&#125;</span><br><span class="line">常见问题分类：</span><br><span class="line">    (<span class="number">1</span>) 对于一个序列，用两个指针维护一段区间</span><br><span class="line">    (<span class="number">2</span>) 对于两个序列，维护某种次序，比如归并排序中合并两个有序序列的操作</span><br></pre></td></tr></table></figure>
<h4 id="离散化"><a class="markdownIt-Anchor" href="#离散化">#</a> 离散化</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">vector&lt;<span class="type">int</span>&gt; alls; <span class="comment">// 存储所有待离散化的值</span></span><br><span class="line"><span class="built_in">sort</span>(alls.<span class="built_in">begin</span>(), alls.<span class="built_in">end</span>()); <span class="comment">// 将所有值排序</span></span><br><span class="line">alls.<span class="built_in">erase</span>(<span class="built_in">unique</span>(alls.<span class="built_in">begin</span>(), alls.<span class="built_in">end</span>()), alls.<span class="built_in">end</span>());   <span class="comment">// 去掉重复元素</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 二分求出x对应的离散化的值</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> <span class="comment">// 找到第一个大于等于x的位置</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> l = <span class="number">0</span>, r = alls.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (l &lt; r)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span> (alls[mid] &gt;= x) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> r + <span class="number">1</span>; <span class="comment">// 映射到1, 2, ...n</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="区间合并"><a class="markdownIt-Anchor" href="#区间合并">#</a> 区间合并</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 将所有存在交集的区间合并</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge</span><span class="params">(vector&lt;PII&gt; &amp;segs)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;PII&gt; res;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">sort</span>(segs.<span class="built_in">begin</span>(), segs.<span class="built_in">end</span>());</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> st = <span class="number">-2e9</span>, ed = <span class="number">-2e9</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> seg : segs)</span><br><span class="line">        <span class="keyword">if</span> (ed &lt; seg.first)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (st != <span class="number">-2e9</span>) res.<span class="built_in">push_back</span>(&#123;st, ed&#125;);</span><br><span class="line">            st = seg.first, ed = seg.second;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> ed = <span class="built_in">max</span>(ed, seg.second);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (st != <span class="number">-2e9</span>) res.<span class="built_in">push_back</span>(&#123;st, ed&#125;);</span><br><span class="line"></span><br><span class="line">    segs = res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>模板类型</category>
      </categories>
      <tags>
        <tag>C++模板</tag>
      </tags>
  </entry>
  <entry>
    <title>C++常用代码模板（2）</title>
    <url>/2023/06/26/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF2/</url>
    <content><![CDATA[<h1 id="常用代码模板2数据结构"><a class="markdownIt-Anchor" href="#常用代码模板2数据结构">#</a> 常用代码模板 2—— 数据结构</h1>
<h4 id="单链表"><a class="markdownIt-Anchor" href="#单链表">#</a> 单链表</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// head存储链表头，e[]存储节点的值，ne[]存储节点的next指针，idx表示当前用到了哪个节点</span></span><br><span class="line"><span class="type">int</span> head, e[N], ne[N], idx;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    head = <span class="number">-1</span>;</span><br><span class="line">    idx = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在链表头插入一个数a</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = a, ne[idx] = head, head = idx ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将头结点删除，需要保证头结点存在</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">remove</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    head = ne[head];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="双链表"><a class="markdownIt-Anchor" href="#双链表">#</a> 双链表</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// e[]表示节点的值，l[]表示节点的左指针，r[]表示节点的右指针，idx表示当前用到了哪个节点</span></span><br><span class="line"><span class="type">int</span> e[N], l[N], r[N], idx;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//0是左端点，1是右端点</span></span><br><span class="line">    r[<span class="number">0</span>] = <span class="number">1</span>, l[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    idx = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在节点a的右边插入一个数x</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = x;</span><br><span class="line">    l[idx] = a, r[idx] = r[a];</span><br><span class="line">    l[r[a]] = idx, r[a] = idx ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 删除节点a</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">remove</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    l[r[a]] = l[a];</span><br><span class="line">    r[l[a]] = r[a];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="栈"><a class="markdownIt-Anchor" href="#栈">#</a> 栈</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// tt表示栈顶</span></span><br><span class="line"><span class="type">int</span> stk[N], tt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向栈顶插入一个数</span></span><br><span class="line">stk[ ++ tt] = x;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从栈顶弹出一个数</span></span><br><span class="line">tt -- ;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 栈顶的值</span></span><br><span class="line">stk[tt];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断栈是否为空，如果 tt &gt; 0，则表示不为空</span></span><br><span class="line"><span class="keyword">if</span> (tt &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="队列"><a class="markdownIt-Anchor" href="#队列">#</a> 队列</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">********<span class="number">1.</span>普通队列************</span><br><span class="line"><span class="comment">// hh 表示队头，tt表示队尾</span></span><br><span class="line"><span class="type">int</span> q[N], hh = <span class="number">0</span>, tt = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向队尾插入一个数</span></span><br><span class="line">q[ ++ tt] = x;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从队头弹出一个数</span></span><br><span class="line">hh ++ ;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 队头的值</span></span><br><span class="line">q[hh];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断队列是否为空，如果 hh &lt;= tt，则表示不为空</span></span><br><span class="line"><span class="keyword">if</span> (hh &lt;= tt)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">********<span class="number">2.</span>循环队列************</span><br><span class="line"><span class="comment">// hh 表示队头，tt表示队尾的后一个位置</span></span><br><span class="line"><span class="type">int</span> q[N], hh = <span class="number">0</span>, tt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 向队尾插入一个数</span></span><br><span class="line">q[tt ++ ] = x;</span><br><span class="line"><span class="keyword">if</span> (tt == N) tt = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从队头弹出一个数</span></span><br><span class="line">hh ++ ;</span><br><span class="line"><span class="keyword">if</span> (hh == N) hh = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 队头的值</span></span><br><span class="line">q[hh];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 判断队列是否为空，如果hh != tt，则表示不为空</span></span><br><span class="line"><span class="keyword">if</span> (hh != tt)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure>
<h4 id="单调栈"><a class="markdownIt-Anchor" href="#单调栈">#</a> 单调栈</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">常见模型：找出每个数左边离它最近的比它大/小的数</span><br><span class="line"><span class="type">int</span> tt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (tt &amp;&amp; <span class="built_in">check</span>(stk[tt], i)) tt -- ;</span><br><span class="line">    stk[ ++ tt] = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="单调队列"><a class="markdownIt-Anchor" href="#单调队列">#</a> 单调队列</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">常见模型：找出滑动窗口中的最大值/最小值</span><br><span class="line"><span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (hh &lt;= tt &amp;&amp; <span class="built_in">check_out</span>(q[hh])) hh ++ ;  <span class="comment">// 判断队头是否滑出窗口</span></span><br><span class="line">    <span class="keyword">while</span> (hh &lt;= tt &amp;&amp; <span class="built_in">check</span>(q[tt], i)) tt -- ;</span><br><span class="line">    q[ ++ tt] = i;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="kmp"><a class="markdownIt-Anchor" href="#kmp">#</a> KMP</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// s[]是长文本，p[]是模式串，n是s的长度，m是p的长度</span></span><br><span class="line">求模式串的Next数组：</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>, j = <span class="number">0</span>; i &lt;= m; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (j &amp;&amp; p[i] != p[j + <span class="number">1</span>]) j = ne[j];</span><br><span class="line">    <span class="keyword">if</span> (p[i] == p[j + <span class="number">1</span>]) j ++ ;</span><br><span class="line">    ne[i] = j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 匹配</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt;= n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">while</span> (j &amp;&amp; s[i] != p[j + <span class="number">1</span>]) j = ne[j];</span><br><span class="line">    <span class="keyword">if</span> (s[i] == p[j + <span class="number">1</span>]) j ++ ;</span><br><span class="line">    <span class="keyword">if</span> (j == m)</span><br><span class="line">    &#123;</span><br><span class="line">        j = ne[j];</span><br><span class="line">        <span class="comment">// 匹配成功后的逻辑</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="trie树"><a class="markdownIt-Anchor" href="#trie树">#</a> Trie 树</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> son[N][<span class="number">26</span>], cnt[N], idx;</span><br><span class="line"><span class="comment">// 0号点既是根节点，又是空节点</span></span><br><span class="line"><span class="comment">// son[][]存储树中每个节点的子节点</span></span><br><span class="line"><span class="comment">// cnt[]存储以每个节点结尾的单词数量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 插入一个字符串</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; str[i]; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u = str[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!son[p][u]) son[p][u] = ++ idx;</span><br><span class="line">        p = son[p][u];</span><br><span class="line">    &#125;</span><br><span class="line">    cnt[p] ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询字符串出现的次数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">char</span> *str)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; str[i]; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> u = str[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">if</span> (!son[p][u]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        p = son[p][u];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> cnt[p];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="并查集"><a class="markdownIt-Anchor" href="#并查集">#</a> 并查集</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>)朴素并查集：</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> p[N]; <span class="comment">//存储每个点的祖宗节点</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回x的祖宗节点</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[x] != x) p[x] = <span class="built_in">find</span>(p[x]);</span><br><span class="line">        <span class="keyword">return</span> p[x];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化，假定节点编号是1~n</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) p[i] = i;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 合并a和b所在的两个集合：</span></span><br><span class="line">    p[<span class="built_in">find</span>(a)] = <span class="built_in">find</span>(b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="number">2</span>)维护size的并查集：</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> p[N], size[N];</span><br><span class="line">    <span class="comment">//p[]存储每个点的祖宗节点, size[]只有祖宗节点的有意义，表示祖宗节点所在集合中的点的数量</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回x的祖宗节点</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[x] != x) p[x] = <span class="built_in">find</span>(p[x]);</span><br><span class="line">        <span class="keyword">return</span> p[x];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化，假定节点编号是1~n</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        p[i] = i;</span><br><span class="line">        size[i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 合并a和b所在的两个集合：</span></span><br><span class="line">    size[<span class="built_in">find</span>(b)] += size[<span class="built_in">find</span>(a)];</span><br><span class="line">    p[<span class="built_in">find</span>(a)] = <span class="built_in">find</span>(b);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">(<span class="number">3</span>)维护到祖宗节点距离的并查集：</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> p[N], d[N];</span><br><span class="line">    <span class="comment">//p[]存储每个点的祖宗节点, d[x]存储x到p[x]的距离</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回x的祖宗节点</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (p[x] != x)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> u = <span class="built_in">find</span>(p[x]);</span><br><span class="line">            d[x] += d[p[x]];</span><br><span class="line">            p[x] = u;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> p[x];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 初始化，假定节点编号是1~n</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        p[i] = i;</span><br><span class="line">        d[i] = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 合并a和b所在的两个集合：</span></span><br><span class="line">    p[<span class="built_in">find</span>(a)] = <span class="built_in">find</span>(b);</span><br><span class="line">    d[<span class="built_in">find</span>(a)] = distance; <span class="comment">// 根据具体问题，初始化find(a)的偏移量</span></span><br></pre></td></tr></table></figure>
<h4 id="堆"><a class="markdownIt-Anchor" href="#堆">#</a> 堆</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// h[N]存储堆中的值, h[1]是堆顶，x的左儿子是2x, 右儿子是2x + 1</span></span><br><span class="line"><span class="comment">// ph[k]存储第k个插入的点在堆中的位置</span></span><br><span class="line"><span class="comment">// hp[k]存储堆中下标是k的点是第几个插入的</span></span><br><span class="line"><span class="type">int</span> h[N], ph[N], hp[N], size;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 交换两个点，及其映射关系</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">heap_swap</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">swap</span>(ph[hp[a]],ph[hp[b]]);</span><br><span class="line">    <span class="built_in">swap</span>(hp[a], hp[b]);</span><br><span class="line">    <span class="built_in">swap</span>(h[a], h[b]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">down</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> t = u;</span><br><span class="line">    <span class="keyword">if</span> (u * <span class="number">2</span> &lt;= size &amp;&amp; h[u * <span class="number">2</span>] &lt; h[t]) t = u * <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (u * <span class="number">2</span> + <span class="number">1</span> &lt;= size &amp;&amp; h[u * <span class="number">2</span> + <span class="number">1</span>] &lt; h[t]) t = u * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (u != t)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">heap_swap</span>(u, t);</span><br><span class="line">        <span class="built_in">down</span>(t);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">while</span> (u / <span class="number">2</span> &amp;&amp; h[u] &lt; h[u / <span class="number">2</span>])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">heap_swap</span>(u, u / <span class="number">2</span>);</span><br><span class="line">        u &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// O(n)建堆</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n / <span class="number">2</span>; i; i -- ) <span class="built_in">down</span>(i);</span><br></pre></td></tr></table></figure>
<h4 id="一般哈希"><a class="markdownIt-Anchor" href="#一般哈希">#</a> 一般哈希</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">(<span class="number">1</span>) 拉链法</span><br><span class="line">    <span class="type">int</span> h[N], e[N], ne[N], idx;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 向哈希表中插入一个数</span></span><br><span class="line">    <span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> k = (x % N + N) % N;</span><br><span class="line">        e[idx] = x;</span><br><span class="line">        ne[idx] = h[k];</span><br><span class="line">        h[k] = idx ++ ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 在哈希表中查询某个数是否存在</span></span><br><span class="line">    <span class="function"><span class="type">bool</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> k = (x % N + N) % N;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h[k]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">            <span class="keyword">if</span> (e[i] == x)</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">(<span class="number">2</span>) 开放寻址法</span><br><span class="line">    <span class="type">int</span> h[N];</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果x在哈希表中，返回x的下标；如果x不在哈希表中，返回x应该插入的位置</span></span><br><span class="line">    <span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="type">int</span> t = (x % N + N) % N;</span><br><span class="line">        <span class="keyword">while</span> (h[t] != null &amp;&amp; h[t] != x)</span><br><span class="line">        &#123;</span><br><span class="line">            t ++ ;</span><br><span class="line">            <span class="keyword">if</span> (t == N) t = <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> t;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>
<h4 id="字符串哈希"><a class="markdownIt-Anchor" href="#字符串哈希">#</a> 字符串哈希</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">核心思想：将字符串看成P进制数，P的经验值是<span class="number">131</span>或<span class="number">13331</span>，取这两个值的冲突概率低</span><br><span class="line">小技巧：取模的数用<span class="number">2</span>^<span class="number">64</span>，这样直接用<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span>存储，溢出的结果就是取模的结果</span><br><span class="line"></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ULL;</span><br><span class="line">ULL h[N], p[N]; <span class="comment">// h[k]存储字符串前k个字母的哈希值, p[k]存储 P^k mod 2^64</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line">p[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    h[i] = h[i - <span class="number">1</span>] * P + str[i];</span><br><span class="line">    p[i] = p[i - <span class="number">1</span>] * P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算子串 str[l ~ r] 的哈希值</span></span><br><span class="line"><span class="function">ULL <span class="title">get</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> h[r] - h[l - <span class="number">1</span>] * p[r - l + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="stl简介"><a class="markdownIt-Anchor" href="#stl简介">#</a> STL 简介</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">vector, 变长数组，倍增的思想</span><br><span class="line">    <span class="built_in">size</span>()  返回元素个数</span><br><span class="line">    <span class="built_in">empty</span>()  返回是否为空</span><br><span class="line">    <span class="built_in">clear</span>()  清空</span><br><span class="line">    <span class="built_in">front</span>()/<span class="built_in">back</span>()</span><br><span class="line">    <span class="built_in">push_back</span>()/<span class="built_in">pop_back</span>()</span><br><span class="line">    <span class="built_in">begin</span>()/<span class="built_in">end</span>()</span><br><span class="line">    []</span><br><span class="line">    支持比较运算，按字典序</span><br><span class="line"></span><br><span class="line">pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;</span><br><span class="line">    first, 第一个元素</span><br><span class="line">    second, 第二个元素</span><br><span class="line">    支持比较运算，以first为第一关键字，以second为第二关键字（字典序）</span><br><span class="line"></span><br><span class="line">string，字符串</span><br><span class="line">    <span class="built_in">size</span>()/<span class="built_in">length</span>()  返回字符串长度</span><br><span class="line">    <span class="built_in">empty</span>()</span><br><span class="line">    <span class="built_in">clear</span>()</span><br><span class="line">    <span class="built_in">substr</span>(起始下标，(子串长度))  返回子串</span><br><span class="line">    <span class="built_in">c_str</span>()  返回字符串所在字符数组的起始地址</span><br><span class="line"></span><br><span class="line">queue, 队列</span><br><span class="line">    <span class="built_in">size</span>()</span><br><span class="line">    <span class="built_in">empty</span>()</span><br><span class="line">    <span class="built_in">push</span>()  向队尾插入一个元素</span><br><span class="line">    <span class="built_in">front</span>()  返回队头元素</span><br><span class="line">    <span class="built_in">back</span>()  返回队尾元素</span><br><span class="line">    <span class="built_in">pop</span>()  弹出队头元素</span><br><span class="line"></span><br><span class="line">priority_queue, 优先队列，默认是大根堆</span><br><span class="line">    <span class="built_in">size</span>()</span><br><span class="line">    <span class="built_in">empty</span>()</span><br><span class="line">    <span class="built_in">push</span>()  插入一个元素</span><br><span class="line">    <span class="built_in">top</span>()  返回堆顶元素</span><br><span class="line">    <span class="built_in">pop</span>()  弹出堆顶元素</span><br><span class="line">    定义成小根堆的方式：priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt; q;</span><br><span class="line"></span><br><span class="line">stack, 栈</span><br><span class="line">    <span class="built_in">size</span>()</span><br><span class="line">    <span class="built_in">empty</span>()</span><br><span class="line">    <span class="built_in">push</span>()  向栈顶插入一个元素</span><br><span class="line">    <span class="built_in">top</span>()  返回栈顶元素</span><br><span class="line">    <span class="built_in">pop</span>()  弹出栈顶元素</span><br><span class="line"></span><br><span class="line">deque, 双端队列</span><br><span class="line">    <span class="built_in">size</span>()</span><br><span class="line">    <span class="built_in">empty</span>()</span><br><span class="line">    <span class="built_in">clear</span>()</span><br><span class="line">    <span class="built_in">front</span>()/<span class="built_in">back</span>()</span><br><span class="line">    <span class="built_in">push_back</span>()/<span class="built_in">pop_back</span>()</span><br><span class="line">    <span class="built_in">push_front</span>()/<span class="built_in">pop_front</span>()</span><br><span class="line">    <span class="built_in">begin</span>()/<span class="built_in">end</span>()</span><br><span class="line">    []</span><br><span class="line"></span><br><span class="line">set, map, multiset, multimap, 基于平衡二叉树（红黑树），动态维护有序序列</span><br><span class="line">    <span class="built_in">size</span>()</span><br><span class="line">    <span class="built_in">empty</span>()</span><br><span class="line">    <span class="built_in">clear</span>()</span><br><span class="line">    <span class="built_in">begin</span>()/<span class="built_in">end</span>()</span><br><span class="line">    ++, -- 返回前驱和后继，时间复杂度 <span class="built_in">O</span>(logn)</span><br><span class="line"></span><br><span class="line">    set/<span class="function">multiset</span></span><br><span class="line"><span class="function">        <span class="title">insert</span><span class="params">()</span>  插入一个数</span></span><br><span class="line"><span class="function">        <span class="title">find</span><span class="params">()</span>  查找一个数</span></span><br><span class="line"><span class="function">        <span class="title">count</span><span class="params">()</span>  返回某一个数的个数</span></span><br><span class="line"><span class="function">        <span class="title">erase</span><span class="params">()</span></span></span><br><span class="line"><span class="function">            <span class="params">(<span class="number">1</span>)</span> 输入是一个数x，删除所有x   <span class="title">O</span><span class="params">(k + logn)</span></span></span><br><span class="line"><span class="function">            <span class="params">(<span class="number">2</span>)</span> 输入一个迭代器，删除这个迭代器</span></span><br><span class="line"><span class="function">        <span class="title">lower_bound</span><span class="params">()</span>/<span class="title">upper_bound</span><span class="params">()</span></span></span><br><span class="line"><span class="function">            <span class="title">lower_bound</span><span class="params">(x)</span>  返回大于等于x的最小的数的迭代器</span></span><br><span class="line"><span class="function">            <span class="title">upper_bound</span><span class="params">(x)</span>  返回大于x的最小的数的迭代器</span></span><br><span class="line"><span class="function">    map/multimap</span></span><br><span class="line"><span class="function">        <span class="title">insert</span><span class="params">()</span>  插入的数是一个pair</span></span><br><span class="line"><span class="function">        <span class="title">erase</span><span class="params">()</span>  输入的参数是pair或者迭代器</span></span><br><span class="line"><span class="function">        <span class="title">find</span><span class="params">()</span></span></span><br><span class="line"><span class="function">        []  注意multimap不支持此操作。 时间复杂度是 <span class="title">O</span><span class="params">(logn)</span></span></span><br><span class="line"><span class="function">        <span class="title">lower_bound</span><span class="params">()</span>/<span class="title">upper_bound</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">unordered_set, unordered_map, unordered_multiset, unordered_multimap, 哈希表</span></span><br><span class="line"><span class="function">    和上面类似，增删改查的时间复杂度是 <span class="title">O</span><span class="params">(<span class="number">1</span>)</span></span></span><br><span class="line"><span class="function">    不支持 <span class="title">lower_bound</span><span class="params">()</span>/<span class="title">upper_bound</span><span class="params">()</span>， 迭代器的++，--</span></span><br><span class="line"><span class="function"></span></span><br><span class="line"><span class="function">bitset, 圧位</span></span><br><span class="line"><span class="function">    bitset&lt;10000&gt; s</span>;</span><br><span class="line">    ~, &amp;, |, ^</span><br><span class="line">    &gt;&gt;, &lt;&lt;</span><br><span class="line">    ==, !=</span><br><span class="line">    []</span><br><span class="line"></span><br><span class="line">    <span class="built_in">count</span>()  返回有多少个<span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">any</span>()  判断是否至少有一个<span class="number">1</span></span><br><span class="line">    <span class="built_in">none</span>()  判断是否全为<span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">set</span>()  把所有位置成<span class="number">1</span></span><br><span class="line">    <span class="built_in">set</span>(k, v)  将第k位变成v</span><br><span class="line">    <span class="built_in">reset</span>()  把所有位变成<span class="number">0</span></span><br><span class="line">    <span class="built_in">flip</span>()  等价于~</span><br><span class="line">    <span class="built_in">flip</span>(k) 把第k位取反</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>模板类型</category>
      </categories>
      <tags>
        <tag>C++模板</tag>
      </tags>
  </entry>
  <entry>
    <title>前端学习——HTML+CSS</title>
    <url>/2023/04/21/%E5%89%8D%E7%AB%AF%E5%AD%A6%E4%B9%A0%E2%80%94%E2%80%94HTML+CSS/</url>
    <content><![CDATA[<h1 id="前端学习htmlcss"><a class="markdownIt-Anchor" href="#前端学习htmlcss">#</a> 前端学习 ——HTML+CSS</h1>
<h2 id="001什么是网页"><a class="markdownIt-Anchor" href="#001什么是网页">#</a> 001. 什么是网页</h2>
<ul>
<li>网页由三种元素组成：HTML、CSS、JavaScript</li>
<li>HTML 决定，网页上显示什么内容</li>
<li>CSS 决定显示内容的外观（位置，大小，形状等）</li>
<li>JavaScript 主要负责网页中的动态内容</li>
</ul>
<p>标签向：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span>里面的字符都是粗体的<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="002标签的基本书写格式"><a class="markdownIt-Anchor" href="#002标签的基本书写格式">#</a> 002. 标签的基本书写格式</h2>
<ul>
<li>
<p>标签分为两种：1、单标签 (&lt;/&gt;)。2、双标签 (&lt;&gt;&lt;/&gt;)(前一个标签为开标签，后面的标签为闭合标签)。</p>
</li>
<li>
<p>vscode 中的自动补全操作：打上 h1 后按下 tab 键会自动补全标签</p>
</li>
<li>
<p>例：：换行操作的单标签：<br></p>
</li>
<li>
<p>标签属性：1、书写在标签自己本身；2、可以为标签提供一些额外信息或者对标签进行修饰。</p>
</li>
<li>
<p>书写标签属性注意点：</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">双标签：<span class="tag">&lt;<span class="name">h1</span> 属性名=<span class="string">&quot;属性值&quot;</span> 属性名<span class="attr">2</span>=<span class="string">&quot;属性值2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span>  多个属性名之间用空格空开</span><br><span class="line">单标签：<span class="tag">&lt;<span class="name">img</span> 属性名=<span class="string">&quot;属性值&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ul>
<h2 id="003html的基本格式"><a class="markdownIt-Anchor" href="#003html的基本格式">#</a> 003.HTML 的基本格式</h2>
<p>如下代码所示</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>标准网页格式<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span>&gt;</span>内容填充<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">其中，vscode有快捷键，通过按下!+Tab键就能直接生成该格式</span><br></pre></td></tr></table></figure>
<h2 id="004标题与段落标签"><a class="markdownIt-Anchor" href="#004标题与段落标签">#</a> 004. 标题与段落标签</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">html中共设立了6级标签</span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span>&gt;</span><span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h2</span>&gt;</span><span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h3</span>&gt;</span><span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h5</span>&gt;</span><span class="tag">&lt;/<span class="name">h5</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h6</span>&gt;</span><span class="tag">&lt;/<span class="name">h6</span>&gt;</span></span><br><span class="line"></span><br><span class="line">没有h7标签可以使用</span><br><span class="line"></span><br><span class="line">段落标签</span><br><span class="line">用字母p表示</span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>文章巴拉巴拉<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"></span><br><span class="line">其中如果想要加入空格，如果单纯用空格是显示不出东西的，要表现空格，需要写<span class="symbol">&amp;nbsp;</span>来充当一个空格键；如果要表示一个中文汉字大小的空格，需要用<span class="symbol">&amp;emsp;</span></span><br><span class="line"></span><br><span class="line">水平居中属性名与属性值：align=&quot;center&quot;</span><br></pre></td></tr></table></figure>
<h2 id="005页面中插入图片"><a class="markdownIt-Anchor" href="#005页面中插入图片">#</a> 005. 页面中插入图片</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">此处要用到<span class="tag">&lt;<span class="name">img</span>&gt;</span>标签，对，是个单标签。基本语法是<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片路径&quot;</span>&gt;</span></span><br><span class="line">如果是同一级的，直接用文件名即可，如果是上一级文件夹下的文件，要用&quot;../img/图片.png&quot;</span><br><span class="line"></span><br><span class="line">总结：</span><br><span class="line">	相对路径：1、页面和图片在同一文件夹，不需要定义路径。2、页面引用子文件里的图片，路径查找使用img1/img2/img3。3、页面引用外层文件夹里的图片，路径查找使用../../../（有几个写几个）</span><br><span class="line">	绝对路径：①引用互联网资源，直接使用互联网图片地址。②引用本地磁盘中的某个文件夹图片，拷贝全部物理路径。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">图片标签进阶处：</span><br><span class="line">	<span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;图片路径&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span>&gt;</span>	增加alt这个标签，来添加对图片的说明（显示alt内容，要求图片加载失败时才会出现，同时此时alt的定义内容是占用页面空间的），如果要让鼠标悬于图片之上也会有内容相关的说明，只需再加一个标签title即可（title属性定义的内容是不占据页面空间的；同时默认是隐藏的，只有鼠标划入的时候才会显示）。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">图片标签拓展：</span><br><span class="line">	网页中使用的图片格式是有限的，支持的格式有：gif、jpg、jpeg、png、bmp、webp</span><br><span class="line">	其中：GIF图片支持透明、压缩、交错和多图像图片（无损压缩格式），但是最多只有256色</span><br><span class="line">	JPG和JPEG是高度有损压缩方式，同时可以支持的颜色数量非常多（上百万种）</span><br><span class="line">	PNG是一种新的无显示质量损耗的文件格式，汲取GIF和JPEG两者的有点，存储形式丰富，有利于网络的传输却不失真</span><br><span class="line">	BMP常用于网站注册或登录页面中的验证码，通常是不压缩的，所以要大很多</span><br><span class="line">	WEBP同时提供了有损压缩和无损压缩的图片文件格式（谷歌公司针对谷歌浏览器研发出来的图片格式）</span><br></pre></td></tr></table></figure>
<h2 id="006超链接相关操作"><a class="markdownIt-Anchor" href="#006超链接相关操作">#</a> 006. 超链接相关操作</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">HyperText(超文本)</span><br><span class="line">实现是通过双标签<span class="tag">&lt;<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span>(a是anchor的意思，要实现跳转还必须携带一个属性href，即<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;目标页面的地址&quot;</span>&gt;</span>显示在页面中的文本<span class="tag">&lt;/<span class="name">a</span>&gt;</span>  可以使用相对和绝对路径，标签对的内容就是显示在页面中的内容，要定义打开方式（在原界面上打开还是新开一个标签页，要加入一个新的属性target,属性值定义为_self表示链接的目标页面在当前窗口中打开；定义为_blank表示链接的咪表页面在新的浏览器窗口中打开）)</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">超链接的锚点功能</span><br><span class="line">	锚点是网页超级链接中的一种，又叫做命名标记，可以当作定位器，是页面内的超级链接。实现页面中的不同部分的快速跳转。</span><br><span class="line">实现超链接的锚点方法：1、跳转目标的定义。2、锚点的定义。	在跳转目标的位置处，给对应的标签添加一个id属性，其中添加的属性值就是这个锚点的名字（要遵循文件和文件夹的命名规则），一个锚点的跳转只能跳转到一个位置，使用id的属性值不能重复出现。之后，给跳转目标定义一个相应的超链接，添加a标签，并且给他添加href属性，此时属性值不在是页面地址或者是互联网地址，而是通过#来携带目标名字。</span><br><span class="line">示例：  段落处：<span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">&quot;box1&quot;</span>&gt;</span>段落<span class="tag">&lt;/<span class="name">p</span>&gt;</span>	超链接：<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#box1&quot;</span>&gt;</span>目标一<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">详细实现可以参考profile.html文件</span><br></pre></td></tr></table></figure>
<h2 id="007修饰文本常用标签"><a class="markdownIt-Anchor" href="#007修饰文本常用标签">#</a> 007. 修饰文本常用标签</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">前面说到文本加粗，用到的是h1、h2等标题标签，这里会给到专用来加粗字体的标签。</span><br><span class="line">第一个b(bold加粗的缩写)标签:<span class="tag">&lt;<span class="name">b</span>&gt;</span>加粗的文本<span class="tag">&lt;/<span class="name">b</span>&gt;</span></span><br><span class="line">第二个strong标签:<span class="tag">&lt;<span class="name">strong</span>&gt;</span>加粗的文本<span class="tag">&lt;/<span class="name">strong</span>&gt;</span></span><br><span class="line">两者区别：b标签仅仅是为了加粗显示文本；strong标签语义化更强，表示该文本比较重要，同时如果用到阅读设备阅读网页时，strong的文本会被重（zhòng）读。</span><br><span class="line"></span><br><span class="line">文本倾斜效果也是比较常用的强调方式，和加粗一样，有两种标签来实现。</span><br><span class="line">第一个i(italic倾斜的缩写)标签:<span class="tag">&lt;<span class="name">i</span>&gt;</span>倾斜的文本<span class="tag">&lt;/<span class="name">i</span>&gt;</span></span><br><span class="line">第二个em(emphasize强调的缩写)标签:<span class="tag">&lt;<span class="name">em</span>&gt;</span>倾斜的文本<span class="tag">&lt;/<span class="name">em</span>&gt;</span></span><br><span class="line">两者区别：i标签仅仅为了让字体显示斜体，没有强调的语义；em标签不仅能让字体显示斜体，还可以加强语气，在爬虫爬取网页时会特别收录em中的文本，以便别人通过百度搜索em里面包含的关键字时会优先显示。</span><br><span class="line"></span><br><span class="line">文本的删除显示效果（类似word中的删除线）也是挺重要的一种比较重要的功能，一样也有两种标签。</span><br><span class="line">第一个s(strike删除的缩写)标签:<span class="tag">&lt;<span class="name">s</span>&gt;</span>删除线文本<span class="tag">&lt;/<span class="name">s</span>&gt;</span></span><br><span class="line">第二个del(delete删除的缩写)标签:<span class="tag">&lt;<span class="name">del</span>&gt;</span>删除线文本<span class="tag">&lt;/<span class="name">del</span>&gt;</span></span><br><span class="line">区别：HTML5已经不支持s标签了，所以尽量使用del标签为好</span><br><span class="line"></span><br><span class="line">其他的一些润色标签owo/：</span><br><span class="line">①</span><br><span class="line">为文本添加下划线：</span><br><span class="line">使用u(underline的缩写)标签:<span class="tag">&lt;<span class="name">u</span>&gt;</span>下划线文本<span class="tag">&lt;/<span class="name">u</span>&gt;</span></span><br><span class="line">②</span><br><span class="line">角标的实现（上/下）</span><br><span class="line">使用sup(superscript上角标的缩写)或sub(下角标suberscript下角标的缩写)标签:</span><br><span class="line">上角标：<span class="tag">&lt;<span class="name">sup</span>&gt;</span>上角标文本<span class="tag">&lt;/<span class="name">sup</span>&gt;</span></span><br><span class="line">下角标：<span class="tag">&lt;<span class="name">sub</span>&gt;</span>下角标文本<span class="tag">&lt;/<span class="name">sub</span>&gt;</span></span><br><span class="line"></span><br><span class="line">那么如果我要多种效果叠加在一起该怎么实现捏~(￣▽￣)~*?</span><br><span class="line">答：使用标签的嵌套来实现（类似洋葱一样，层层包裹）。</span><br><span class="line">注意点：要整个标签包裹，万万不可交叉嵌套。</span><br><span class="line">具体实现可以参考italic.delete.bold.html文件</span><br></pre></td></tr></table></figure>
<h2 id="008注释的使用"><a class="markdownIt-Anchor" href="#008注释的使用">#</a> 008. 注释的使用</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">注释的格式：<span class="comment">&lt;!-- 注释的内容 --&gt;</span></span><br><span class="line">其中快速生成注释的快捷键是：ctrl+/</span><br></pre></td></tr></table></figure>
<h2 id="009列表的使用"><a class="markdownIt-Anchor" href="#009列表的使用">#</a> 009. 列表的使用</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">html中有三种列表，分别为：有序列表、无序列表、自定义列表</span><br><span class="line">①有序列表</span><br><span class="line">由两个元素组成，ol(order list)和li(list item)，两者为父子关系，li需要被ol包裹着</span><br><span class="line">语法：<span class="tag">&lt;<span class="name">ol</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">li</span>&gt;</span>列表项内容<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	 <span class="tag">&lt;/<span class="name">ol</span>&gt;</span></span><br><span class="line">注意：ol当中只能嵌套li标签，如果要放其他的标签项需要放在li标签里面</span><br><span class="line">其中ol可以添加一个type属性，用来设置列表项目的符号，常见的取值有5个：A、a（字母顺序）、I、i（罗马数字顺序）、1（阿拉伯数字顺序）		默认是数字从1开始排序，用其他字母的话一律还是依照数字序开始排序</span><br><span class="line">其中ol还有另一个start属性，用来控制列表项目开始的取值（比如从0开始），注意，start的取值是数字序号，不是其他字母之类的（我自己捯饬时发现：除了数字序列，好像其他两种，在start小于等于0时都是按照数字序列来显示的）。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">②无序列表</span><br><span class="line">指的是，列表项中的内容，是没有时间、空间或者逻辑等顺序要求的。</span><br><span class="line">语法：<span class="tag">&lt;<span class="name">ul</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">	 <span class="tag">&lt;/<span class="name">ul</span>&gt;</span>(此处的ul是unorder list的缩写)</span><br><span class="line">注意：和ol一样，ul里面一样只能防止li标签。</span><br><span class="line">无序列表的项目符号默认三个项目同为黑色的实心原点（disc）。</span><br><span class="line">想要交换事项之间的位置顺序，可以使用vscode自带的快捷键alt+↑/↓来实现行的位置调动。</span><br><span class="line"></span><br><span class="line">无序列表也是有type属性，同样的type属性就是用来设置无序列表的项目符号的，取值一共有4种：disc（实心圆点）、circle（空心圆）、square（实心方块）、none（隐藏项目符号）</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">③自定义列表</span><br><span class="line">由三种标签组成，分别为：dl(definition list定义列表)、dt(definition term定义术语--列表标题)、dd(definition description定义描述--列表内容)</span><br><span class="line">语法：<span class="tag">&lt;<span class="name">dl</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;/<span class="name">dt</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">    	<span class="tag">&lt;<span class="name">dd</span>&gt;</span><span class="tag">&lt;/<span class="name">dd</span>&gt;</span></span><br><span class="line">	 <span class="tag">&lt;/<span class="name">dl</span>&gt;</span></span><br><span class="line">注意：dt和dd是dl的子标签，dt和dd是兄弟标签，所以dt不能放到dd当中，dd也不能放到dt当中；dd标签可以定义多个，同时dt或dd标签是不能脱离dl单独使用的</span><br><span class="line">dd标签的内容会相较dt标签有一段缩进，这是默认存在的。（如果要进一步美化还得学习css相关的知识）</span><br></pre></td></tr></table></figure>
<h2 id="010快速创建标签的技巧"><a class="markdownIt-Anchor" href="#010快速创建标签的技巧">#</a> 010. 快速创建标签的技巧</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">这部分将会提供一些比较实用的快捷键来提高效率，减少反复劳作</span><br><span class="line">这些主要得益于Emmet。其提高了代码编写的效率；提供了一种非常简练的语法规则；可以立刻生成对应的HTML结构。</span><br><span class="line">单标签的代码补全：</span><br><span class="line">①使用格式：标签名&#123;标签文本内容&#125;+tab或者回车键</span><br><span class="line">②使用格式：标签名&#123;标签文本内容&#125;*标签重复次数</span><br><span class="line">③使用格式：标签$&#123;标签文$本内容&#125;*标签重复次数		ps：这里的$符号实现依次递增的序号</span><br><span class="line">嵌套标签的代码补全：</span><br><span class="line">①父标签名&gt;子标签名&#123;子标签文本&#125;*子标签重复次数		一个父标签里放了5个子标签</span><br><span class="line">②父标签名*5&gt;子标签名&#123;子标签文本&#125;					创建5个父标签，每个父标签里面有个子标签</span><br><span class="line"></span><br><span class="line">综合：ol&gt;li*4&gt;a[href]			中括号中放的是属性</span><br><span class="line"></span><br><span class="line">详见shortcut_key.html文件</span><br></pre></td></tr></table></figure>
<h2 id="011表格的使用"><a class="markdownIt-Anchor" href="#011表格的使用">#</a> 011. 表格的使用</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">表格基本语法：</span><br><span class="line"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">tr</span>&gt;</span>(table row表格行)</span><br><span class="line">    	<span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;/<span class="name">td</span>&gt;</span>(table data cell 表格数据单元)</span><br><span class="line">    <span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span><br><span class="line">注意：表格的标签嵌套也和ol和ul一样，其他的标签要放就得放到td的里面。</span><br><span class="line">一个tr代表的是一行，一个td代表的是一个单元格，要实现多行多列，要在tr中添加多个td，table中添加多个tr。同时要注意，一个普通的表格中每个tr中的td个数是相等的。</span><br><span class="line">快捷键输入法：table&gt;tr*行数&gt;td*列数</span><br><span class="line"></span><br><span class="line">接下来，讲一下表格有什么属性</span><br><span class="line">第一种：表头标签（说是说表头，实际上放哪里都没事），用来加粗并居中内容，同时语义更强，使用方法就是将td换为th(table header cell的缩写  表头单元格)即可</span><br><span class="line">第二种：绘制表格线，给table加个border属性，属性值是数值，用来定义线条的粗细</span><br><span class="line">第三种：给表格添加宽度和高度，给table添加width属性，值是一个数字，用来定义表格的总宽度，再添加一个height属性，值也是一个数字，用来定义表格的总高度</span><br><span class="line">第四种：控制表格边框的空隙或文字与边框的距离，table有cellspacing（定义是单元格之间的距离）和cellpadding（定义单元格边框和文本之间的距离）两个表示间距的属性</span><br><span class="line">第五种：使表格位于浏览器的水平居中位置，为table添加align属性（定义表格在页面中水平方向上的对齐方式，有三个取值：left、center、right）</span><br><span class="line">第六种：给表格添加颜色，为table添加bgcolor属性（修饰表格的背景颜色）、为table添加bordercolor属性（修饰表格的边框颜色）。两者的属性值直接用英语颜色如red填入即可，当然也能通过6位16进制来表现。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">表格行属性相关细节：</span><br><span class="line">①设置行高度，给tr标签增加height属性，属性值为所需数值。（注意表格的总高度是由table属性的height决定的，所以，特定某行的height高的同时，会挤压其他行的高度,但是当height值设置过高，会打破table的height限制）</span><br><span class="line">②给tr添加bgcolor属性时，设置属性值后，最终该行的颜色会根据tr标签的属性变化，其他的背景色依然听从table标签的属性值。---&gt;即浏览器通过就近原则来渲染，或者后代标签属性渲染的优先级是高于父级标签。</span><br><span class="line">③tr的align和valign属性，其中align用来设置行内所有单元格的水平对齐方式，取值有：left、center、right；valign用来设置行内所有单元格的垂直对齐属性，取值有：top、middle、bottom。其中，文本默认的对齐方式为：left、middle</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">单元格属性相关细节：</span><br><span class="line">①可以给td添加width和height以及bgcolor属性，其中调节任意单元格的高度，那么该单元格所在行的每个单元格的高度都会随之改变；调节任意单元格的宽度，那么该单元格所在列的每个单元格的宽度都会随之改变；但是设置背景色时，只会影响当前单元格。</span><br><span class="line">②td也有align和valign属性，取值同tr，同样采用就近原则。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">合并单元格：</span><br><span class="line">类别：横向合并（水平合并，要求只在本行进行）、纵向合并（垂直合并，要求只在本列进行）</span><br><span class="line">单元格的合并必定产生跨行或者跨列</span><br><span class="line">基本的实现原理为：</span><br><span class="line">①横向合并，保留合并单元格块的最左边的单元格，删除其余单元格，浏览器解析时将第一个单元格拉伸满</span><br><span class="line">②纵向合并，保留合并单元格块的最上方的单元格，删除其余单元格，。。。</span><br><span class="line">具体需要设置的标签属性，</span><br><span class="line">①为保留的tr对应的td标签添加一个colspan(跨列)属性，其属性值为合并列的总数（包含。。。），删除同一tr下一定数量的td标签。</span><br><span class="line">②为保留的tr对应的td标签添加一个rowspan(跨行)属性，其属性值为合并行的总数（包含保留的对应单元格的那一行），其他行对应相同位置的td标签通通删除掉。</span><br></pre></td></tr></table></figure>
<p><mark>详见文件 table_course.html</mark></p>
<h2 id="012表格的进阶使用"><a class="markdownIt-Anchor" href="#012表格的进阶使用">#</a> 012. 表格的进阶使用</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">表格标题和结构分组：</span><br><span class="line">①表格标题，就是表格的一个大标题，位于表格上方，默认水平居中显示。标签名：caption（说明文字）	语法：<span class="tag">&lt;<span class="name">caption</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">caption</span>&gt;</span></span><br><span class="line">caption是table标签的一个子标签，一般放在第一个tr标签之前。</span><br><span class="line"></span><br><span class="line">②表格分组，此时需要三个行分组标签thead（表格头）、tbody（表格体）、tfoot（表格尾）</span><br><span class="line">语法：<span class="tag">&lt;<span class="name">thead</span>&gt;</span><span class="tag">&lt;/<span class="name">thead</span>&gt;</span>;<span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;/<span class="name">tbody</span>&gt;</span>;<span class="tag">&lt;<span class="name">tfoot</span>&gt;</span><span class="tag">&lt;/<span class="name">tfoot</span>&gt;</span></span><br><span class="line">都是table标签的子标签，在这些标签里面放入tr标签来分组。</span><br><span class="line">注意点：表格如果没有使用任何分组标签，浏览器会在渲染时把table中所有未分组的tr放在一个tbody标签里面；同时一个表格只允许使用一个thead和一个tfoot，但是允许使用多个tbody。</span><br><span class="line"></span><br><span class="line">以上是行分组，以下是列分组的相关操作：</span><br><span class="line">列分组标签是colgroup，可以把一列或者连续的几列分成一组，进行不同属性的修饰。列分组经常用来定义表格一整列单元格的颜色。基本语法：<span class="tag">&lt;<span class="name">colgroup</span>&gt;</span><span class="tag">&lt;/<span class="name">colgroup</span>&gt;</span>,可以定义一个属性span，属性值代表多少列分为一组。要划分多组，需要使用多个colgroup标签。</span><br></pre></td></tr></table></figure>
<p><strong>tips</strong>：如果文档缩进和对齐有点错乱，可以右键选择格式化文档；vscode 自带快捷键，通过选定指定内容，然后按 ctrl+d 可以实现多光标选中内容相同的内容。</p>
<h2 id="013网页中的颜色值和长度单位"><a class="markdownIt-Anchor" href="#013网页中的颜色值和长度单位">#</a> 013. 网页中的颜色值和长度单位</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">颜色值：</span><br><span class="line">①网页中支持140个标准的颜色英文名称，中文汉字时不能作为颜色值的</span><br><span class="line">②颜色值还能使用十六进制值来表示：#RRGGBB 来定义颜色值。注意：井号不要丢掉，井号后的字母全部要求小写，同时这种表达方式时所有浏览器都支持的。</span><br><span class="line">③最后一种颜色表示是采用RGB的方式，即RGB(red,green,blue)来定义颜色值。注意，这里RGB是不区分大小写的，括号里的数字和逗号前后可以有空格，同时这种方式也是所有浏览器都支持。</span><br><span class="line"></span><br><span class="line">长度单位：</span><br><span class="line">①绝对长度单位：固定的，用这些单位表示的长度会显示为设置的尺寸，例如：cm、mm、in(英寸)、px(像素 最常用，浏览器默认)</span><br><span class="line">②相对长度单位：指相对一个长度计算出来的长度，一般用来适配不同的设备，例如：百分比(%)。</span><br></pre></td></tr></table></figure>
<h2 id="014块级元素和内联元素"><a class="markdownIt-Anchor" href="#014块级元素和内联元素">#</a> 014. 块级元素和内联元素</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">首先我们要知道，每个HTML元素都有默认的显示值，这两个值为：block(块 块元素)和inline(内联 行内元素)	</span><br><span class="line">①块级元素总是从新行开始，浏览器会自动在元素的前后添加一些间距，会占据可用的全部宽度，尽可能向左向右伸展，常用标签有：<span class="tag">&lt;<span class="name">p</span>&gt;</span>（段落元素）、<span class="tag">&lt;<span class="name">div</span>&gt;</span>（分块元素）、<span class="tag">&lt;<span class="name">h1</span>&gt;</span>-<span class="tag">&lt;<span class="name">h6</span>&gt;</span>（标题元素）、<span class="tag">&lt;<span class="name">ol</span>&gt;</span><span class="tag">&lt;<span class="name">ul</span>&gt;</span><span class="tag">&lt;<span class="name">li</span>&gt;</span><span class="tag">&lt;<span class="name">dl</span>&gt;</span><span class="tag">&lt;<span class="name">dt</span>&gt;</span><span class="tag">&lt;<span class="name">dd</span>&gt;</span>（列表元素）、<span class="tag">&lt;<span class="name">table</span>&gt;</span><span class="tag">&lt;<span class="name">tr</span>&gt;</span><span class="tag">&lt;<span class="name">td</span>&gt;</span><span class="tag">&lt;<span class="name">th</span>&gt;</span><span class="tag">&lt;<span class="name">thead</span>&gt;</span><span class="tag">&lt;<span class="name">tfoot</span>&gt;</span><span class="tag">&lt;<span class="name">tbody</span>&gt;</span><span class="tag">&lt;<span class="name">caption</span>&gt;</span>（表格元素）。</span><br><span class="line">注意：p标签是用来专门定义段落的。</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span>(division分块的缩写，引申为盒子或是容器，用来定义html里面一个分块或是一个部分)，语法是<span class="tag">&lt;<span class="name">div</span>&gt;</span>分块内容<span class="tag">&lt;/<span class="name">div</span>&gt;</span>。</span><br><span class="line">    </span><br><span class="line">②内联元素不会独占一行，只占用必要的宽度，例如文本修饰元素标签：<span class="tag">&lt;<span class="name">b</span>&gt;</span>、<span class="tag">&lt;<span class="name">em</span>&gt;</span>、<span class="tag">&lt;<span class="name">strong</span>&gt;</span>、<span class="tag">&lt;<span class="name">i</span>&gt;</span>、<span class="tag">&lt;<span class="name">sub</span>&gt;</span>、<span class="tag">&lt;<span class="name">sup</span>&gt;</span>（文本修饰元素）、<span class="tag">&lt;<span class="name">a</span>&gt;</span>（链接元素）、<span class="tag">&lt;<span class="name">br</span>&gt;</span>（折行元素）、<span class="tag">&lt;<span class="name">img</span>&gt;</span>（图片元素）。此时有个特别的标签<span class="tag">&lt;<span class="name">span</span>&gt;</span>（范围元素）用来标记文本的一部分或文档的一部分。定义语法：<span class="tag">&lt;<span class="name">span</span>&gt;</span>内容<span class="tag">&lt;/<span class="name">span</span>&gt;</span>。</span><br><span class="line">注意点：内联元素里面不能嵌套块级元素！！</span><br></pre></td></tr></table></figure>
<h2 id="015表单的认识"><a class="markdownIt-Anchor" href="#015表单的认识">#</a> 015.<mark> 表单的认识</mark></h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">表单是用来采集用户信息的。</span><br><span class="line">而表单为了采集用户的信息，需要用到表单控件（文本框、单选框、多选框、下拉菜单、按钮等）。</span><br><span class="line"></span><br><span class="line">在html中表单通过form(表)来定义，语法：<span class="tag">&lt;<span class="name">form</span>&gt;</span><span class="tag">&lt;/<span class="name">form</span>&gt;</span>			如果没加子标签，可能会类似table标签</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">文本框和密码框：</span><br><span class="line">即单行文本框的实现：在form内部嵌入input标签（单标签）实现，除此之外还要定义一个type属性（来表征输入控件的类型），其中单行文本框的type值为text（默认就是这个）、密码框的type值为password</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">多行文本框（文本域控件）：</span><br><span class="line">实现方式：在form标签中嵌套textarea（文本域，双标签）标签实现，基本语法：<span class="tag">&lt;<span class="name">textarea</span>&gt;</span>文本<span class="tag">&lt;/<span class="name">textarea</span>&gt;</span>，初次之外还可以控制显示的可见宽度之类的属性，例如cols用来指定一个文本区的可见宽度，值是一个数字；rows来指定一个文本区域中的可见行数，值是数字</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">单选与多选：</span><br><span class="line">实现方式：在form标签中嵌套input标签，并设置type属性值来实现单选或是多选；单选的type属性值为radio，多选的type取值为checkbox（复选框）。input仍然是单标签，选项直接写在标签的后面即可。</span><br><span class="line">注意点：1、单选框控件必须成组使用才有意义，每组至少需要两个单选框。2、“组”是通过name属性来建立的，凡是name值相同的就是一组。3、同组的单选框，只有一个会处在选中状态，其他的会自动呈现为未选中状态。---&gt;所以默认下没有设置name情况下，会将每个单选框视作一个组，要实现选一需要设置name属性，属性值为自取的组名。</span><br><span class="line"></span><br><span class="line">设置默认选中效果：两者方式一样，都是通过定义一个checked属性来实现，其属性值只要不为空，任何字符都可以，通常采用checked这个字符串作为它的值。当然也可以不定义属性值，只定义一个属性名</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">下拉菜单：</span><br><span class="line">实现方式：在form标签里面嵌套select标签来定义，基本语法为：<span class="tag">&lt;<span class="name">select</span>&gt;</span><span class="tag">&lt;/<span class="name">select</span>&gt;</span>,其中select标签包含一个或多个option子标签，这个的语法为：<span class="tag">&lt;<span class="name">option</span>&gt;</span><span class="tag">&lt;/<span class="name">option</span>&gt;</span>。</span><br><span class="line">tips1：要添加默认选择哪个option的值，要在该option标签中添加默认选择的selected属性，只要定义就行，不用给属性值。</span><br><span class="line">tips2：要设置多选下拉菜单，需要给select标签定义一个multiple（允许用户选择一个以上的值）属性。</span><br><span class="line">tips3：给select标签定义size属性，就可以定义控件默认可见行数，值是一个数字。</span><br><span class="line">注意：select标签里面只能防止option标签。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">input中的选择文件（上传文件）功能：</span><br><span class="line">实现方式：在input输入控件上定义type属性赋值为file。（不同浏览器，这个控件的显示效果可能不太相同）</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">表单label标签和只读禁用属性：</span><br><span class="line">实现方式：在form标签中嵌入label标签，基本语法为：<span class="tag">&lt;<span class="name">label</span>&gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span>,这在屏幕阅读器读到时会大声读出里面的内容；同时还能帮助我们点选难以点击的非常小的区域，只要点击那部分区域就能选中那区域的控件。当然为了实现第二种功能，我们还用为label添加一个for属性，用来定义与label相关联的表单控件，它的值为表单控件的id值（具有唯一性，一个页面不能出现两个相同的id属性值）。</span><br><span class="line"></span><br><span class="line">设置只读（内容无法更改，但是可以复制里面的内容）：给表单控件定义一个readonly只读属性即可实现，同时为了默认显示一个值，需要添加一个属性value，值为默认显示的值。</span><br><span class="line">设置无法选中（使用鼠标无法选中，默认是灰色显示的）：为表单控件添加一个disabled（禁用）属性</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">表单分组（带有边框和标题的表单控件）：</span><br><span class="line">实现方式：使用fieldset（字段集）标签，语法为：<span class="tag">&lt;<span class="name">fieldset</span>&gt;</span><span class="tag">&lt;/<span class="name">fieldset</span>&gt;</span>，里面包含了legend（说明）标签，为fieldset元素定义了一个标题。其他表单控件放到legend标签的后面。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">表单按钮：</span><br><span class="line">表单按钮的分类共有5种：提交按钮、重置按钮、普通按钮、图像按钮、双标签button按钮</span><br><span class="line">①提交按钮：通过input标签实现，为input的type属性的值设置为submit。通过点击设置的提交按钮后，会发生：1、页面刷新了。2、输入框的内容消失了。3、浏览器地址栏中多了一个问号。</span><br><span class="line">其实点击提交后，数据会提交给网站后台的服务器，后台服务器将数据保存到数据库当中，然后服务器会给网页的表单提供一个访问地址。		那么要如何提供访问地址呢？这时候要给form标签添加一个action属性，用来反馈用户点击提交后做什么动作，事实上值就是服务器的地址；而不定义action属性值，那么默认就会把当前网页的网址当作action值。		如果要保留这些填写的值该如何设置？给form标签定义一个target属性，属性值和链接的target属性值一样，可以设置为：_blank也可以是_self。前者开一个新的网页（action后的网址），后者和之前一样。</span><br><span class="line"></span><br><span class="line">②重置按钮：将input的type属性值设置为reset。</span><br><span class="line"></span><br><span class="line">③普通按钮：没有任何功能的按钮，定义语法为将input的type属性值定义为button。要为这种按钮起名字需要添加value属性，其属性值就是按钮上显示的文字。同样，这种value设置名字的方式也使用于重置按钮和提交按钮。</span><br><span class="line"></span><br><span class="line">④图像按钮：定义方式为input中的type值设置为image，还需要添加src属性，放入图片路径。点击后，表单提交。如果图片过大，可以添加width和height属性设置成合适的大小。</span><br><span class="line"></span><br><span class="line">⑤双标签button按钮：定义语法：<span class="tag">&lt;<span class="name">button</span>&gt;</span><span class="tag">&lt;/<span class="name">button</span>&gt;</span>,按钮的名字在标签里面定义，点击后也是实现表单提交，如果为其添加type属性，设置为button那么就会变成一个一无是处的普通按钮了。</span><br></pre></td></tr></table></figure>
<p><em>快捷键提示</em>：如果忘记使用标签名 {内容}* 数量的方式，可以先选中想要多行复制的标签行，然后通过按住 alt+shift 键再配合↓键实现多行复制重复内容。</p>
<h2 id="016表单数据采集和提交"><a class="markdownIt-Anchor" href="#016表单数据采集和提交">#</a> 016. 表单数据采集和提交</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">在实现form表单数据采集和提交之前，我们要首先了解前后端协作的流程。前端工程师做好表单后，交给用户在浏览器上填报。用户填好信息后，点击提交按钮。数据通过互联网发给服务器，后端工程师在服务器上开发程序，接受用户提交过来的数据，最后再把数据存入数据库。</span><br><span class="line">如果按之前的表单操作那么我们是没有手机到表单的数据的，为了手机表单的数据，我们要给表单控件添加name属性，有了name之后浏览器会自动为我们手机表单的控件数据。当用户输入数据后，name定义的属性值会为我们存储输入的数据，这时候提交表单，地址栏后面除了问号后还有一串字符这里记录了用户的输入值。</span><br><span class="line">但是如果表单包含敏感信息，那么这样直接显示是相当不安全的，这里就要为form添加method属性，这个属性的属性值常用的有：get（默认值，浏览器会把手机好的表单数据，加到服务器地址的后面，提交给服务器）和post（不但能够手机表单的数据，而且不会再地址栏里面暴露隐私数据）</span><br></pre></td></tr></table></figure>
<h2 id="017其他实用标签"><a class="markdownIt-Anchor" href="#017其他实用标签">#</a> 017. 其他实用标签</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">水平线标签：<span class="tag">&lt;<span class="name">hr</span>&gt;</span>（单标签），作用为在网页上画出一条水平分隔线。这个标签有5个重要的属性：width/size属性是用来控制水平线的宽度和高度，如果没有添加这个属性，默认水平线的宽度是横跨整个屏幕，高度为2px；noshade属性是用来规定水平线的颜色呈现为纯色，而不是由阴影的颜色；color用来定义水平线的颜色（不知道为什么，这里不能使用rgb的颜色定义，其余两种都能正常使用）；align用来调整水平线水平对齐方式（使用前提是水平线要有一定的宽度），默认对齐方式是水平居中对齐。</span><br><span class="line"></span><br><span class="line">预格式化的文本标签：<span class="tag">&lt;<span class="name">pre</span>&gt;</span>（preformatted）（双标签），语法：<span class="tag">&lt;<span class="name">pre</span>&gt;</span><span class="tag">&lt;/<span class="name">pre</span>&gt;</span>，该元素里的文本以固定宽度的字体显示，同时保留标签内文本的空格和换行。</span><br><span class="line"></span><br><span class="line">定义一个图像映射：<span class="tag">&lt;<span class="name">map</span>&gt;</span>（双标签）,就是一个图像的热点链接，点击图片的不同区域会实现链接页面的跳转，基本语法：<span class="tag">&lt;<span class="name">map</span>&gt;</span><span class="tag">&lt;/<span class="name">map</span>&gt;</span>,他有一个必要的属性，为name，这个属性的属性值要和img标签的usemap属性相关联，在图像和地图之间创建关系。之后在map标签内部定义一个area（单标签）标签，用来定义图片的热点区域，实现相应区域的目标跳转。通过area标签可以设置区域的位置、大小、形状，该标签由三个重要的属性：①herf：用来定义热点区域链接的目标地址（互联网和本地的网页及图片地址都可以）、②shape：用来定义区域的形状，取值可以为：default（所有区域）、rect（矩形）、circle、poly（多边形）、③coords：用来定义可点击区域的坐标，要与shape属性配合使用。注意图像原点位于图像党的左上角。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">iframe标签（双标签）：</span><br><span class="line">用来在一个网页中显示另一个网页，基本语法：<span class="tag">&lt;<span class="name">iframe</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span>,这个标签有5个基本属性：①src，值是一个网页页面的路径、②width，用来控制引入页面的宽度，值是数字、③height，用来控制引入页面的高度，值是数字、④frameborder，默认引入的框架带有边框，通常将值设置为0即可、⑤scrolling滚动属性，用来控制是否显示框架的滚动条，只有三个（auto（）默认、yes、no）。</span><br><span class="line">iframe还可以作为一个链接的目标框架，iframe的target属性必须设置为iframe的name属性</span><br></pre></td></tr></table></figure>
<h2 id="018svg的认识"><a class="markdownIt-Anchor" href="#018svg的认识">#</a> 018.SVG 的认识</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">首先我们要知道，SVG（Scalable Vector Graphics 可缩放矢量图）是基于xml语法的图像格式，所以要遵循xml语法iui。基本语法：<span class="tag">&lt;<span class="name">svg</span>&gt;</span>...(绘制各种图形)<span class="tag">&lt;/<span class="name">svg</span>&gt;</span>，svg可以当作绘制图形的画布，有两个重要的属性：width定义画布的宽度，height定义画布的高度。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">绘制矩形、圆形和椭圆形</span><br><span class="line">SVG预定义了一些形状元素可供使用：1、rect（矩形）；2、circle（圆形）；3、ellipse（椭圆）；4、line（线条）；5、poly（多线条）；6、polygon（多边形）；7、path（路径）</span><br><span class="line"></span><br><span class="line">矩形基本语法：<span class="tag">&lt;<span class="name">rect</span> /&gt;</span>,xml语法一定要求闭合，语法要求忒严格了哩。重要的属性有：width和height用来定义矩形的宽度和高度，fill定义矩形的填充颜色，stroke-width定义了矩形的边框宽度，stroke定义矩形边框的颜色,x属性是用来定义与左边界的距离，y属性是用来定义与上边界的距离，fill-opacity定义填充透明度，stroke-opacity用来定义边框的透明度（透明度的值越小，透明度越高）|如果直接用opacity则是用来设置整个元素的不透明度值，合法范围值为0~1。		圆角矩形的实现：需要多加rx和ry两个属性，值是数字，如果两者数字相等，那么就是一个圆形的角，两个值不相等就是一个椭圆形的角。</span><br><span class="line"></span><br><span class="line">圆形基本语法：<span class="tag">&lt;<span class="name">circle</span>/&gt;</span>,有三个重要的属性，其中cx和cy用来定义圆形中心的坐标，r属性定义圆的半径（如果省略前两个，圆的中心会被设置为(0,0)），之后定义stroke、stroke-width、fill（基本上svg的都有，以下就省略不写了）属性，来设置边框颜色、边框宽度和背景色填充等。</span><br><span class="line"></span><br><span class="line">椭圆形基本语法：<span class="tag">&lt;<span class="name">ellipse</span>/&gt;</span>,有四个重要的属性，cx定义椭圆中心的x坐标，cy定义椭圆中心的y坐标，rx属性定义水平半径，ry属性定义垂直半径。如果出现椭圆的堆叠，实际上堆叠的顺序并不是html书写的顺序，而是由他们的位置大小cx、cy、rx、ry来决定的。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">绘制线条、多边形和多线条：</span><br><span class="line">绘制线条使用line标签，基本语法为：<span class="tag">&lt;<span class="name">line</span>/&gt;</span>,重要属性，x1,y1，定义x，y轴上直线的起点坐标；x2,y2，定义x，y轴上直线的末端坐标。坐标的起点在画布的左上角，向右看作x轴，向下看作y轴。</span><br><span class="line">绘制多边形：</span><br><span class="line">使用polygon标签，基本语法：<span class="tag">&lt;<span class="name">polygon</span>/&gt;</span>,用来创建一个至少包含三个边的图形，有个属性points，其定义了多边形每个点的对应坐标（至少要三对坐标，坐标之间空格隔开，可以画出五角星捏）。</span><br><span class="line">绘制多线条：</span><br><span class="line">使用polyline标签，基本语法：<span class="tag">&lt;<span class="name">polyline</span>/&gt;</span>,可以创建任何只由直线组成的形状，和上面一样，有一个points属性，用来定义线条经过的各个点（要有两个及以上的坐标对，一个点显示不出来），填充fill要设置为none，不然会有一块从头点连到尾点的一块填充。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">绘制文本：</span><br><span class="line">通过text文本来进行绘制，是一个双标签，基本语法为：<span class="tag">&lt;<span class="name">text</span>&gt;</span>文本内容<span class="tag">&lt;/<span class="name">text</span>&gt;</span>，其中属性x，y用来定义文本的位置坐标，值为数字；属性font-size用来定义文本的大小，值为数字，属性text-anchor用来定义文本的对齐方式，值有：start、middle、end，各代表x，y值在文本的什么位置上。</span><br><span class="line">为什么svg不用p标签显示文本？text是绘制的对象，使用text那么就可以使用svg特有的控制文本方式了。例如旋转文本。有transform属性，属性值为：rotate(旋转角度 旋转的中心点（默认为原点）)</span><br><span class="line">此外，text标签内还能嵌入多个tspan标签，各个tspan（语法：<span class="tag">&lt;<span class="name">tspan</span>&gt;</span><span class="tag">&lt;/<span class="name">tspan</span>&gt;</span>）标签可以包含不同的格式和位置。给text文本添加链接的方式，则是让text文本嵌入到a标签内，但是这时候属性设置比较复杂，a标签要添加xlink:href属性，属性值是链接的地址（也可以定义target属性）。为什么不直接定义href属性捏？svg应用xml语法定义元素，所以还要再svg标签上定义一个命名空间的属性xmlns:xlink，属性值写为:http://www.w3.org/1999/xlink</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">绘制路径：</span><br><span class="line">通过path标签来定义一个路径，基本语法：<span class="tag">&lt;<span class="name">path</span>/&gt;</span>  应用路径我们可以绘制任意形状的图形，path中的重要属性d（draw绘制）是用来定义绘制路径的命令，这个命令属性值有很多，常用的两个命令是：M（moveto定义绘制图形的起点坐标）、L（lineto用来绘制一条直线，表示从上一个结束点到后面接的的点之间绘制一条直线）、Q（quadratic Bezier curve绘制二次贝塞尔曲线，需要在后面定义控制点和终点的坐标），后面需要跟着控制点坐标和终点坐标。其中命令的大小写代表的意义也是不同的，大写代表的是绝对定位，小写代表的是相对定位。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">成组定义属性（类似div）：</span><br><span class="line">用g标签将多个绘图元素给包裹起来，在g标签上定义公共的属性，基本语法：<span class="tag">&lt;<span class="name">g</span>&gt;</span><span class="tag">&lt;/<span class="name">g</span>&gt;</span>。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">描边属性：</span><br><span class="line">stroke（笔画属性）、stroke-width（笔画宽度属性）、stroke-linecap（笔画笔帽属性，值有：butt、round、square）、stroke-dasharray（虚线笔画属性，值是数字序列，用来定义虚线的线条与空隙的大小，至少要定义两个值），以上属性可以用在任何的线条、文本和元素的轮廓。一般定义定义在path标签中，可以放到g中。</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">模糊和阴影效果：</span><br><span class="line">添加特殊效果需要定义filter标签，基本语法：<span class="tag">&lt;<span class="name">filter</span>&gt;</span><span class="tag">&lt;/<span class="name">filter</span>&gt;</span>。内部定义x和y的属性值确定滤镜的起点坐标值。其里面包含一个或多个效果滤镜，但是里面有一个必要的id（确保唯一性）属性，用来识别过滤器，图形通过这个id指向要使用的过滤器。其中filter都是定义在defs（definitions）标签内部的，基本语法为：<span class="tag">&lt;<span class="name">defs</span>&gt;</span><span class="tag">&lt;/<span class="name">defs</span>&gt;</span>。模糊效果是通过feGaussianBlur（高斯模糊）滤镜标签来创建的，需要定义在filter标签内部，基本语法为：<span class="tag">&lt;<span class="name">feGaussianBlur</span>/&gt;</span>,再通过stdDeviation属性定义模糊的数量，值越大模糊程度就越高。阴影效果可以通过feOffset滤镜和feBlend滤镜来实现。原理是将一个SVG图形、图像或元素在xy平面上做一定的偏移，定义在filter内部，基本语法为<span class="tag">&lt;<span class="name">feOffset</span>/&gt;</span>（有属性dx和dy（在x和y方向上阴影的偏移量），in属性表示阴影图像的来源，值有：SourceAlpha和SourceGraphic）和<span class="tag">&lt;<span class="name">feBlend</span>/&gt;</span>定义in属性，值为SourceGraphic</span><br></pre></td></tr></table></figure>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">线性渐变和径向渐变：</span><br><span class="line">SVG中主要有两种渐变类型：线性渐变（→，用linearGradient元素来定义，必须嵌套在defs标签内部，双标签，语法为：<span class="tag">&lt;<span class="name">linearGradient</span>&gt;</span><span class="tag">&lt;/<span class="name">linearGradient</span>&gt;</span>,有两组坐标属性，x1、y1、x2、y2，用来定义线性渐变的开始位置和结束位置，通过左边不同会产生垂直、水平、角度渐变,可以有多种颜色，每种颜色用stop标签来指定，基本语法：<span class="tag">&lt;<span class="name">stop</span>/&gt;</span> 一般有两个属性，offset属性用来定义渐变颜色的开始和结束位置，属性值是一个描述相对位置的百分比，stop-color的属性用来定义渐变的颜色，取值为任何的合法颜色值）和径向渐变（↓，应用radialGradient元素来定义，也必须嵌套在defs标签当中，基本语法：<span class="tag">&lt;<span class="name">radialGradient</span>&gt;</span><span class="tag">&lt;/<span class="name">radialGradient</span>&gt;</span>,有唯一id属性，cx、cy、r定义了最外面的圆，fx、fy定义了最里面的那个圆，同样颜色可以由两种或多种组成，每种颜色由stop指定，也要定义offset和stop-color属性）。</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="css的三种样式"><a class="markdownIt-Anchor" href="#css的三种样式">#</a> CSS 的三种样式</h2>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">行内样式、内部样式、外部样式。具体的解说待我补充！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！！</span><br></pre></td></tr></table></figure>
<hr>
<p>简单选择器的分类：</p>
<table>
<thead>
<tr>
<th>选择器分类</th>
<th>选择器定义语法</th>
<th>例子</th>
<th>例子说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>ID 选择器</td>
<td>#id</td>
<td>#firstname</td>
<td>选择 id=&quot;firstname&quot; 的元素</td>
</tr>
<tr>
<td>类选择器</td>
<td>.class</td>
<td>.intro</td>
<td>选择所有带有 class=&quot;introduction&quot; 的元素</td>
</tr>
<tr>
<td>类选择器（带有元素）</td>
<td>element class</td>
<td>p intro</td>
<td>只选择带有 class=&quot;introduction&quot; 的 &lt;p&gt; 元素</td>
</tr>
<tr>
<td>通用选择器</td>
<td>*</td>
<td>*</td>
<td>选择所有元素</td>
</tr>
<tr>
<td>元素选择器</td>
<td>element</td>
<td>p</td>
<td>选择所有 &lt;p&gt;</td>
</tr>
<tr>
<td>分组选择器</td>
<td>element,element,…</td>
<td>div,p</td>
<td>选择所有 &lt;div&gt; 元素和所有 &lt; p &gt; 元素</td>
</tr>
</tbody>
</table>
<hr>
<p>组合选择器的分类：</p>
<p>后代选择器：匹配作为指定元素后代的所有元素、子选择器：只能选择作为某元素的子元素，不能选择道孙辈的元素、相邻的兄弟选择器、一般兄弟选择器。</p>
<table>
<thead>
<tr>
<th>选择器分类</th>
<th>选择器定义语法</th>
<th>例子</th>
<th>例子说明</th>
</tr>
</thead>
<tbody>
<tr>
<td>后代选择器</td>
<td>element element</td>
<td>div p</td>
<td>选择 &lt;div&gt; 元素内的所有 &lt; p &gt; 元素</td>
</tr>
<tr>
<td>子选择器</td>
<td>element&gt;element</td>
<td>div&gt;p</td>
<td>选择所有父元素是 &lt;div&gt; 元素的 &lt; p &gt; 元素</td>
</tr>
</tbody>
</table>
<hr>
<p>CSS 伪类选择器（属于类选择器中的一种，根据特定状态选取元素，基本语法为 <code>selector:鼠标行为&#123;&#125;</code> ）</p>
<p>特别说明：</p>
<ol>
<li>冒号和后面的鼠标行为，没有任何空格，必须连接在一起。</li>
<li>四个伪类选择器必须按照以上介绍的顺序书写（:link,:visited,:hover,:active），否则在浏览器中部分样式不能实现。</li>
<li>伪类选择器全部一起使用的情况，主要是应用在超链接上，偶尔也会独立使用在其他标签上面。</li>
<li>伪类选择器应用在其他元素上时，只能实现 active 激活瞬间和 hover 鼠标悬停效果。</li>
</ol>
<hr>
<p>CSS 伪元素选择器（通过该选择器，可以设置元素指定部分的样式。主要用来设置元素内文本的首字母，首行的样式、或是在元素内容之前或之后插入其他内容，基本语法为 <code>selector::pseudo-element&#123;&#125;</code> ）</p>
<p>伪元素选择器总共有五种：① <code>::first-letter</code> （用来实现向文本的首个字符添加特殊样式）、② <code>::first-line</code> （用来实现向文本的首行添加特殊样式）、③ <code>::before</code> （用来实现在元素内容之前插入内容）、④ <code>::after</code> （用来实现在元素内容之后插入内容）、⑤ <code>::selection</code> （用来更改选中文本的样式）</p>
<p>注意点：1. 使用伪元素选择器向前向后插入内容时，必须配合 content 才能实现效果，向前向后插入的内容都需要符合 CSS 样式声明的基本语法。2.selection 伪元素选择器只支持以下几种样式声明：color（文本颜色），background（背景），cursor（鼠标样式），outline（描边效果）。</p>
<table>
<thead>
<tr>
<th>选择器</th>
<th>例子</th>
<th>例子描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>::first-letter</td>
<td>p::first-letter</td>
<td>选择每个 &lt;p&gt; 元素的首字母</td>
</tr>
<tr>
<td>::first-line</td>
<td>p::first-line</td>
<td>选择每个 &lt;p&gt; 元素的首行</td>
</tr>
<tr>
<td>::after</td>
<td>p::after</td>
<td>在每个 &lt;p&gt; 元素之后插入内容</td>
</tr>
<tr>
<td>::before</td>
<td>p::before</td>
<td>在每个 &lt;p&gt; 元素之前插入内容</td>
</tr>
<tr>
<td>::selection</td>
<td>p::selection</td>
<td>选择用户选择的元素部分</td>
</tr>
</tbody>
</table>
<hr>
<p>CSS 属性选择器（是根据属性或属性值来查找元素，基本语法 <code>Element[attribute]</code>  或 <code>Element[attribute=&quot;value&quot;]</code> , 即查找带有该属性的元素，然后添加样式声明）</p>
<p>该种选择器总共有四种属性：</p>
<ol>
<li>
<p><code>[attribute]</code> ：来查找 HTML 结构中，带有 attribute 属性的所有元素。</p>
</li>
<li>
<p><code>[attribute=&quot;value&quot;]</code> ：来查找 HTML 结构中，带有 attribute 属性，并且属性值为 value 的元素。</p>
</li>
<li>
<p><code>[attribute~=&quot;value&quot;]</code> : 来查找 HTML 结构中，带有 attribute 属性，并且在多个属性值中包含 value 的元素。</p>
</li>
<li>
<p><code>[attribute|=&quot;value&quot;]</code> : 来查找 HTML 结构中带有 attribute 属性，并且属性值以 value 或者是 value - 开头的元素，该属性的值只能有一个，不能有多个。</p>
<table>
<thead>
<tr>
<th>选择器</th>
<th>例子</th>
<th>例子描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>[attribute]</td>
<td>[target]</td>
<td>选择带有 target 属性的所有元素。</td>
</tr>
<tr>
<td>[attribute=value]</td>
<td>[target=_blank]</td>
<td>选择带有 target=&quot;_blank&quot; 属性的所有元素。</td>
</tr>
<tr>
<td>[attribute~=value]</td>
<td>[title~=flower]</td>
<td>选择带有包含 &quot;flower&quot; 一词的 title 属性的所有元素。</td>
</tr>
<tr>
<td>[attribute|=value]</td>
<td>[lang|=en]</td>
<td>选择带有以 &quot;en&quot; 开头的 lang 属性的所以有元素。</td>
</tr>
<tr>
<td>[attribute^=value]</td>
<td>a[href^=“https”]</td>
<td>选择其 href 属性值以 &quot;https&quot; 开头的每个 &lt;a&gt; 元素。</td>
</tr>
<tr>
<td>[attribute$=value]</td>
<td>a[href$=&quot;.pdf&quot;]</td>
<td>选择其 href 属性值以 &quot;.pdf&quot; 结尾的每个 &lt;a&gt; 元素。</td>
</tr>
<tr>
<td>[attribute*=value]</td>
<td>a[href*=“w3school”]</td>
<td>选择其 href 属性值包含子串 &quot;w3school&quot; 的每个 &lt;a&gt; 元素。</td>
</tr>
</tbody>
</table>
</li>
</ol>
<hr>
<p><strong>总结</strong></p>
<ul>
<li>简单选择器和组合选择器，可以完成元素的查找。</li>
<li>其他选择器可以更加精准高效的查找元素，从而能提高我们编码速度。</li>
<li>属性选择器，在实际开发的过程中，大部分会应用在表单控件中，因为表单控件可添加的属性比较多。</li>
</ul>
<hr>
<h2 id="css的文本操作"><a class="markdownIt-Anchor" href="#css的文本操作">#</a> CSS 的文本操作</h2>
<p><strong>文本颜色和大小写转化</strong></p>
<p><em>颜色调整：</em></p>
<p>通过声明 color 属性来设置文本的颜色。具体的使用方法见下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">	<span class="attribute">color</span>:xxxx;(这里可以是颜色名称，例如:purple、也可以是十六进制颜色值，例如：<span class="number">#A020F0</span>、也可是RGB颜色值，例如：<span class="built_in">rgb</span>(<span class="number">160</span>,<span class="number">32</span>,<span class="number">240</span>))</span><br><span class="line">&#125;</span><br><span class="line">↑，连接到<span class="selector-tag">html</span>文件后，主体（<span class="selector-tag">body</span>）内的内容会变为xxxx颜色</span><br><span class="line">注意css中的注释是<span class="comment">/* */</span>，不支持//作为注释</span><br></pre></td></tr></table></figure>
<p><em>强制转换文本中的单词和字母的大小写：</em></p>
<p>通过使用 text-transform 属性来实现。具体的使用方法见下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-class">.transform</span> &#123;</span><br><span class="line">    <span class="attribute">text-transform</span>:xxxx;(这里只有三个值可以填写：<span class="number">1</span>、uppercase（文本被转换为大写）；<span class="number">2</span>、lowercase（文本被转换为小写）；<span class="number">3</span>、capitalize（每个单词的首字母被转换为大写）。这个属性主要用来设置英文的文本，对中文无效)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<p><strong>文本对齐和文本间距</strong></p>
<p><em>文本对齐的方式：</em></p>
<p>①水平对齐方式。②垂直对齐方式。</p>
<p><strong>①</strong> 水平对齐用 <code>text-align</code> （之前学过）样式属性来实现效果，基础操作共有三种属性值： <code>left</code> 、 <code>right</code> 、 <code>center</code> 。其他属性值有： <code>justify</code> （使用后每一行都有相等的宽度，而且左右的边界是对齐的，想杂志和报纸排版一样）</p>
<p><strong>②</strong> 垂直对齐用 vertical-align 样式属性实现效果，值有 5 个： <code>baseline</code> （基线对齐）、 <code>text-top</code> （文本顶部对齐）、 <code>textbottom</code> （文本底部对齐）、 <code>sub</code> （下角标对齐）、 <code>super</code> （上角标对齐）</p>
<hr>
<p><em>文本的间距设置方式：</em></p>
<p>通过声明 CSS 的 <code>text-indent</code>  属性可以实现，使用长度值或百分比来设置文本缩进，具体实现见下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">text-indent</span>:xxxx;(长度值可以是绝对单位（几px），也可以是相对单位（几<span class="selector-tag">em</span>，缩进的宽度为字符宽度的倍数，一般设置为<span class="number">2em</span>，即空两格），还可以是百分比缩进，根据父元素的宽度计算得到（较少使用）)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><code>letter-spacing</code>  属性用来指定中文文字或英文字幕之间的空隙。</p>
<p><code>line-height</code>  属性用来指定行与行之间的高度，也就是行高，属性值常用的有三个：① <code>normal</code> （默认值，浏览器会根据字符大小自动设置一个行高）②一个数字（比如 1.5，此数字与当前的字符大小相乘计算得到，推荐使用）③绝对值（比如 20px,-5px, 设置固定的行间距）。</p>
<p><code>word-spacing</code>  属性用来指定文本中单词的间距，只对英文有效。</p>
<p><code>white-space</code>  属性指定了如何处理元素内部的空白，有个常用的属性： <code>nowrap</code> （不管包含文本的元素宽度是多少，文本都不会换行，知道遇见 &lt;br&gt; 标签为止）。</p>
<p><mark><em><strong>归纳表格：</strong></em></mark></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>text-align</code></td>
<td>指定文本的水平方式</td>
</tr>
<tr>
<td><code>vertical-align</code></td>
<td>设置一个元素的垂直对齐方式</td>
</tr>
<tr>
<td><code>letter-spacing</code></td>
<td>指定文本钟字符之间的间隙</td>
</tr>
<tr>
<td><code>line-height</code></td>
<td>指定行高</td>
</tr>
<tr>
<td><code>text-indent</code></td>
<td>指定文本块钟第一行的缩进</td>
</tr>
<tr>
<td><code>white-space</code></td>
<td>指定如何处理一个元素内部的空白</td>
</tr>
<tr>
<td><code>word-spacing</code></td>
<td>指定文本中单词之间的空隙</td>
</tr>
</tbody>
</table>
<h2 id="css文本装饰"><a class="markdownIt-Anchor" href="#css文本装饰">#</a> CSS 文本装饰</h2>
<p><strong>为文本添加装饰线</strong>通过 <code>text-decoration-line</code>  属性实现，可以结合一个以上的值。具体的值有三个：① <code>overline</code> ：在文本上方添加线条修饰。② <code>line-through</code> ：在文本中间添加线条修饰。③ <code>underline</code> ：在文本下方添加线条修饰。***ps:*** 要设置多种装饰线则要将多个属性值之间用空格隔开。</p>
<p><strong>为文本设置装饰线的颜色</strong>通过 <code>text-decoration-color</code>  属性实现，属性值为任意合法的颜色值。</p>
<p><strong>为装饰线指定风格</strong>通过 <code>text-decoration-style</code>  属性实现，属性值有 5 个： <code>solid</code> ：实线、 <code>double</code> ：双实线、 <code>dotted</code> ：圆点线、 <code>dashed</code> ：虚线、 <code>wavy</code> ：波浪线。之后通过 <code>text-decoration-thickness</code>  属性为线条设置厚度。属性值有三种设置方法：①auto 默认值（不确定，和所修饰的文字大小有关系）、②px（像素大小，是一个绝对值）③%（是一个相对值，根据修饰文字的高度计算出来的）</p>
<p>以上这些属性有点过于长了，可以采用简化的写法，举例：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h4</span> &#123;</span><br><span class="line">	<span class="attribute">text-decoration</span>: underline red double <span class="number">5px</span>;(line、<span class="attribute">color</span>、style、thickness对应的一个或多个属性值（可以没有顺序），其中<span class="attribute">text-decoration-line</span>是必须设置的，其他三个可选)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>***ps：***HTML 中的所有链接默认都有下划线，如果想要使链接的样式没有下划线，需要给 a 元素声明 <code>text-decoration: none;</code>  可以去除链接的超链接。</p>
<p><mark><em><strong>归纳表格：</strong></em></mark></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>说明</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>text-decoration</code></td>
<td>在一个声明中设置所有的文字装饰属性</td>
</tr>
<tr>
<td><code>text-decoration-color</code></td>
<td>指定文本装饰的颜色</td>
</tr>
<tr>
<td><code>text-decoration-line</code></td>
<td>指定要使用的文本装饰的种类（下划线、上划线等）</td>
</tr>
<tr>
<td><code>text-decoration-style</code></td>
<td>指定文本装饰的样式（实心、点状等）</td>
</tr>
<tr>
<td><code>text-decoration-thickness</code></td>
<td>指定文本装饰线的厚度</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="设置字体"><a class="markdownIt-Anchor" href="#设置字体">#</a> 设置字体</h2>
<p>在 CSS 中，使用 <code>font-family</code>  属性指定一个文本的字体，属性值是一个字体的名称。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">font-family</span>:字体名称</span><br><span class="line"></span><br><span class="line">CSS中英文字体有五类：<span class="number">1</span>、Serif（有衬线字体）。<span class="number">2</span>、Sans-serif（无衬线字体）。<span class="number">3</span>、Monospace（单空格字体，所有的字母都有相同的固定宽度）。<span class="number">4</span>、Cursive（草书字体）。<span class="number">5</span>、Fantasy（幻想字体）。</span><br><span class="line">CSS中中文字体比较通用的中文字体有两个：微软雅黑（Microsoft）、苹方简（Mac）</span><br></pre></td></tr></table></figure>
<p>在 css 中设置的字体，用户的电脑里面没有要怎么办？可以定义几个样式备选，例如：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">h3</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>:<span class="string">&quot;Courier New&quot;</span> ,<span class="string">&quot;BrushScript MT&quot;</span> ,Copperplate;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">会从前到后选择，遇到系统中存在的字体，则会选择排在最前的字体作为当前显示的字体。如果系统中一个都没有，则会使用系统默认的字体作为显示字体。</span><br></pre></td></tr></table></figure>
<p>***ps:*** 一般来说多个单词的字体，一般要用 <code>''</code>  或 <code>&quot;&quot;</code>  来引起来。</p>
<p>设置字号：CSS 中通过 <code>font-size</code>  属性设定文本的大小，属性值可以是绝对大小（当页面输出的物理尺寸已知时很常用）也可以是相对大小（相对周围元素的大小，使用 em 来进行设置，一般来说会根据继承下来的父元素尺寸计算得到；除此之外还可以使用 % 这个单位，相对于父元素的大小来计算文本尺寸的；如果嵌套了多层，有了好多继承关系，为了厘清相对大小关系，可以使用 rem (relative to the root element) 来计算大小 **[html 文档中的根元素是 html]**）。</p>
<p>** 注意点：** 如果不指定字体的大小，正常的文本，比如段落会继承祖先的元素，如果祖先也没有设置字体的大小就会使用浏览器的默认字号（16px）。</p>
<hr>
<h2 id="设置字体风格和样式简写"><a class="markdownIt-Anchor" href="#设置字体风格和样式简写">#</a> 设置字体风格和样式简写</h2>
<p><strong>文本倾斜</strong>主要使用 <code>font-style</code>  属性。属性值有三个：1、normal（文本正常显示）。2、italic（文本倾斜显示）。3、oblique（支持度较低，实现效果类似 italic）。</p>
<p><strong>文本粗细设置</strong>主要使用 <code>font-weight</code>  属性。属性值设置有两种方式：名称和数值。名称有四个：lighter（细体，对应数值 100）、normal（正常字体，对应数值 400）、bold（加粗字体，对应数值 700）、bolder（更粗字体，对应数值 900）。数值有九个：从 100 到 900，每个增加 100。</p>
<p><code>font-variant</code>  属性（只对英文有效）指定了文本<strong>是否应以小型大写字符显示</strong>，共有两个属性值：1、normal（正常显示）。2、small-caps（表示设置为小型大写字母）。</p>
<p>同样的为了缩短代码，以上属性可以简写，例子如下：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">P</span> &#123;</span><br><span class="line">    <span class="attribute">font</span>: oblique <span class="number">100</span> small-caps <span class="number">30px</span>/<span class="number">30px</span> 华为仿宋;(<span class="attribute">font-style</span>、<span class="attribute">font-variant</span>、<span class="attribute">font-weight</span>、<span class="attribute">font-size</span>/<span class="attribute">line-height</span>、<span class="attribute">font-family</span>组合在一起，中间用空格隔开。其中<span class="attribute">font-size</span>和<span class="attribute">font-family</span>这两个值是必须的，其他值缺少就采用他们的默认值)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="css谷歌字体和icon图标"><a class="markdownIt-Anchor" href="#css谷歌字体和icon图标">#</a> CSS 谷歌字体和 Icon 图标</h2>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">我们在css中的<span class="selector-tag">body</span>中的<span class="attribute">font-family</span>中不仅可以使用<span class="selector-tag">HTML</span>中的标准字体，还可以使用谷歌字体(免费使用、<span class="number">1000</span>多种选择)</span><br><span class="line">语法形式：</span><br><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">	<span class="attribute">font-family</span>: <span class="string">&quot;和下面引用链接的字体一样&quot;</span>, serif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">使用谷歌字体，要在<span class="selector-tag">html</span>引用中使用如下链接：&quot;https://fonts.googleapis.com/css?family=字体<span class="string">&quot;（要使用多个字体可以使用|管道隔开，即=字体1|字体2|字体3,同时还能加上各种特效，在网址字体后面加上&#x27;&amp;effect=特效名&#x27;即可，同样多个特效也可以使用|管道隔开）</span></span><br><span class="line"><span class="string">再在html文件中引入有上面body的css文件（多字体时，给每个p标签设置class类，在css中进一步单独设置字体采用，见下例）（引入特效时，要在class上加上font-effect-特效名）</span></span><br><span class="line"><span class="string">p.a &#123;</span></span><br><span class="line"><span class="string">    font-family: &quot;</span>Audiowide<span class="string">&quot;, sans-serif;</span></span><br><span class="line"><span class="string">&#125;</span></span><br></pre></td></tr></table></figure>
<p>还可以通过图标库，将图标添加到 HTML 的页面当中。</p>
<p>（这里考虑了这个<a href="https://fontawesome.com/">网站</a>）</p>
<p>然后可以在后面的 p 标签内加 i 标签，定义上 class 属性为： <code>fas fa-名称</code></p>
<p>Icon 字体图标的强大之处在于：<strong>可以将这个图标当成是文本，可以任意地添加样式</strong></p>
<hr>
<h2 id="css选择器地权重"><a class="markdownIt-Anchor" href="#css选择器地权重">#</a> CSS 选择器地权重</h2>
<p>多个选择器都来修饰同一个元素，优先级该要如何判断。</p>
<p><mark><strong>行内样式 &gt; ID 选择器 &gt; 类选择器 &gt; 元素选择器 &gt; 通用选择器</strong></mark></p>
<p>更复杂的话，可以根据权重值来判断采用哪个选择器。</p>
<table>
<thead>
<tr>
<th></th>
<th>选择器</th>
<th>例子</th>
<th>权重</th>
</tr>
</thead>
<tbody>
<tr>
<td>1</td>
<td>通用选择器</td>
<td><code>*</code></td>
<td>0</td>
</tr>
<tr>
<td>2</td>
<td>元素选择器</td>
<td><code>h1,div,p</code></td>
<td>1</td>
</tr>
<tr>
<td>3</td>
<td>类选择器</td>
<td><code>.active,.light</code></td>
<td>10</td>
</tr>
<tr>
<td>4</td>
<td>ID 选择器</td>
<td><code>#box,#btn</code></td>
<td>100</td>
</tr>
<tr>
<td>5</td>
<td>行内选择器</td>
<td><code>&lt;h1 style=&quot;...&quot;&gt;</code></td>
<td>1000</td>
</tr>
</tbody>
</table>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">例子：</span><br><span class="line"><span class="selector-id">#box</span> <span class="selector-tag">p</span> <span class="selector-class">.light</span> &#123; // 优先级：<span class="number">100</span> + <span class="number">1</span> + <span class="number">10</span> = <span class="number">111</span></span><br><span class="line">    <span class="attribute">color</span>: red</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>选择器选择的范围越小，越精确，优先级就越高！</strong></p>
<hr>
<h2 id="css添加边框"><a class="markdownIt-Anchor" href="#css添加边框">#</a> CSS 添加边框</h2>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-style</span>:</span><br><span class="line">指定了要显示什么样的边框</span><br><span class="line">允许使用以下值：</span><br><span class="line">dotted:定义一个点状的边框</span><br><span class="line">dashed:定义一个虚线边框</span><br><span class="line">solid:定义一个实线边框</span><br><span class="line">double:定义一个双倍的边框</span><br><span class="line">none:定义无边框</span><br><span class="line">hidden:定义一个隐藏的边框</span><br><span class="line"></span><br><span class="line">当表格单元格相邻边框产生冲突时，优先级：hidden&gt;solid&gt;none</span><br><span class="line">各个方向上的边框设置，上边框线：border-top-style，下边框线：border-bottom-style，左：border-left-style，右：border-right-style</span><br><span class="line"></span><br><span class="line">逆天设置示例:<span class="number">1</span>、border-style:dotted solid double dashed;</span><br><span class="line">这种设置，按照上右下左的顺序，依次为点，实，双，虚</span><br><span class="line"><span class="number">2</span>、<span class="attribute">border-style</span>:dotted solid double;</span><br><span class="line">这种设置按照上，左右，下，。。。</span><br><span class="line"><span class="number">3</span>、<span class="attribute">border-style</span>:dotted solid;</span><br><span class="line">这种设置按照上下，左右，。。。</span><br><span class="line"></span><br><span class="line"><span class="attribute">border-width</span>:</span><br><span class="line">可以用来设置边框的宽度，单位可以为px、em，也可以使用预定义的三个值，thin、medium、thick</span><br><span class="line">同时边框宽度也可以使用混合简写的方法，上下左右都不一样捏</span><br><span class="line"></span><br><span class="line">border-color:</span><br><span class="line">可以用来设置四个边框的颜色</span><br><span class="line">属性值可以为：颜色名称、十六进制颜色值、RGB颜色值，也可以设置为transparent（透明）</span><br><span class="line">同样可以使用混合简写</span><br><span class="line"></span><br><span class="line">当然边框也可以使用速记属性（和font类似）</span><br><span class="line">例子：border: <span class="number">5px</span> solid red;</span><br><span class="line">中间的<span class="attribute">border-style</span>一定要声明</span><br><span class="line">要单独设置一条边可以采用<span class="attribute">border-bottom</span>这类的标签</span><br><span class="line"></span><br><span class="line">tips:样式中给元素设置的宽高，是不包含该元素边框宽高的，它只包含元素<span class="number">1</span>内容的宽高。</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="css列表"><a class="markdownIt-Anchor" href="#css列表">#</a> CSS 列表</h2>
<p>列表分为两种：</p>
<p>1、无序列表（OL）</p>
<p>2、有序列表（UL）</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">list-style-type</span>:</span><br><span class="line">可以设置不同的列表项标记，属性值可以为：circle（空心圆点）、disc（实心圆点）、square（实心方点）、decimal（数字）、upper-roman（大写罗马字母）、lower-alpha（小写字母）等。</span><br><span class="line">list-style-image:</span><br><span class="line">指定一个图像作为列表项的标记，属性值为<span class="built_in">url</span>(<span class="string">背景图片路径</span>)</span><br><span class="line">通过list-style-position:</span><br><span class="line">来设置位置，属性值有两个：outside表示标记在列表项之外,inside表示标记在列表项内部</span><br><span class="line"></span><br><span class="line">如果不想要显示列表项标记，可以使用list-style-type:none;来去掉</span><br><span class="line"></span><br><span class="line">同样列表属性也是可以使用简写，<span class="attribute">list-style</span>即可用来在一个声明中设置所有的列表属性，属性值按照，<span class="attribute">list-style-type</span>、<span class="attribute">list-style-position</span>、<span class="attribute">list-style-image</span>的顺序来写，某值缺少则使用默认的。</span><br><span class="line"></span><br><span class="line">除此之外，还能用颜色来装饰列表，有<span class="attribute">background</span>（值为RGB）和<span class="attribute">padding</span>（值为像素）的属性</span><br></pre></td></tr></table></figure>
<table>
<thead>
<tr>
<th>属性</th>
<th>描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>list-style</td>
<td>在一个声明中设置一个列表的所有属性</td>
</tr>
<tr>
<td>list-style-image</td>
<td>指定一个图像作为列表项的标记</td>
</tr>
<tr>
<td>list-style-position</td>
<td>指定列表项标记的位置</td>
</tr>
<tr>
<td>list-style-type</td>
<td>指定 list-item 标记的类型</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="css背景属性"><a class="markdownIt-Anchor" href="#css背景属性">#</a> CSS 背景属性</h2>
<p>css 中设置 body 占满整个界面：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-tag">html</span>,<span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">&#125;</span><br><span class="line">如果直接用<span class="selector-tag">body</span>，没有加上<span class="selector-tag">html</span>那会宽度为全部，高度为<span class="number">0</span>，因为<span class="selector-tag">body</span>的<span class="attribute">height</span>参考的是其上方的<span class="selector-tag">html</span>标签的高度，<span class="selector-tag">html</span>标签高度为<span class="number">0</span>，所以<span class="number">0</span>*<span class="number">100%</span>=<span class="number">0</span>。</span><br><span class="line"></span><br><span class="line">添加背景图片的语法：</span><br><span class="line"><span class="attribute">background-image</span>:<span class="built_in">url</span>(<span class="string">图片路径</span>); // 默认会采用平铺方式填满整个屏幕</span><br><span class="line">如果不要平铺，可以采用以下语法：</span><br><span class="line">backgroung-repeat:no-repeat; //这样只能看到一张图片，其余为空白。</span><br><span class="line"></span><br><span class="line">要求图片在背景中间显示，要设置以下属性</span><br><span class="line"><span class="attribute">background-position</span>:</span><br><span class="line">第一个属性值是水平方向上的对齐，第二个属性值是垂直方向上的对齐方式。</span><br><span class="line">第一个值：</span><br><span class="line">属性值为left表示左对齐，</span><br><span class="line">属性值为center表示居中对齐，</span><br><span class="line">属性值为right表示右对齐。</span><br><span class="line"></span><br><span class="line">第二个值：</span><br><span class="line">属性值为top,表示垂直向上对齐</span><br><span class="line">属性值为center，表示垂直居中对齐</span><br><span class="line">属性bottom，表示垂直向下对齐</span><br><span class="line"></span><br><span class="line">--------------------------------------</span><br><span class="line">实现页面滚动滑动，但是背景不动，需要设置以下属性：</span><br><span class="line">background-attachment:</span><br><span class="line">属性值为：fixed:图片固定；scroll:同时滚动</span><br><span class="line"></span><br><span class="line">设置背景颜色</span><br><span class="line">background-color:</span><br><span class="line">属性值为：<span class="number">1</span>、颜色名称。<span class="number">2</span>、十六进制颜色值。<span class="number">3</span>、RGB颜色值。</span><br><span class="line"></span><br><span class="line">当然也能精简写，一个background容纳一切。</span><br></pre></td></tr></table></figure>
<p>**tips:** 新的颜色值表示方法： <code>rgba()</code> ，即 rgb 颜色值加上透明度 alpha 值（是一个介于 0 &lt;完全透明&gt;～1 &lt; 完全不透明 &gt; 的值）。例子： <code>background-color:rgba(0,0,0,0.5)黑色半透明</code></p>
<p><em><strong>总结汇总：</strong></em></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>background-color</code></td>
<td>设置背景颜色</td>
</tr>
<tr>
<td><code>background-image</code></td>
<td>设置的背景图片，设置背景图片默认会产生平铺</td>
</tr>
<tr>
<td><code>background-position</code></td>
<td>用来调整背景图片位置的，默认取消平铺，背景图片在容器左上角；取值为一组值： <code>x y</code> ；x 水平位置，y 垂直位置</td>
</tr>
<tr>
<td><code>background-repeat</code></td>
<td>用来解决平铺的：有四个取值： <code>repeat</code> ， <code>no-repeat</code> ， <code>repeat-x</code> ， <code>repeat-y</code></td>
</tr>
<tr>
<td><code>background-attachment</code></td>
<td>被称之为背景附着，也可以称之为，背景固定和滚动，两个取值 <code>fixed</code> ， <code>scroll</code> ，以上五种属性为单一属性</td>
</tr>
<tr>
<td><code>background</code></td>
<td>为复合属性，一个属性后面可以跟多个取值: <code>background:color image repeat position attachment;</code></td>
</tr>
</tbody>
</table>
<hr>
<h2 id="精灵图"><a class="markdownIt-Anchor" href="#精灵图">#</a> 精灵图</h2>
<p>又称雪碧图、妖怪图</p>
<p>基本原理为将页面中使用到的各种图片进行分类，整齐划一地摆放在一张背景透明的图片上，通过调整位置显示出精灵图中的一个元素。</p>
<p>移动的语法为： <code>background-position:</code></p>
<p>一般默认左上角为原点，对应图片里面的元素横纵坐标均为负的。</p>
<hr>
<h2 id="css轮廓"><a class="markdownIt-Anchor" href="#css轮廓">#</a> CSS 轮廓</h2>
<p>轮廓是元素周围画的一圈线，在边框之外。能让元素在视觉上能有突出的显示。属性有： <code>outline-style</code> ：轮廓样式； <code>outline-color</code> ：轮廓颜色； <code>outline-width</code> ：轮廓宽度； <code>outline-offset</code> ：轮廓偏移； <code>outline</code> ：轮廓简写</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">outline-style</span>:</span><br><span class="line">属性值有dotted，定义一个点状轮廓</span><br><span class="line">dashed定义一个虚线轮廓</span><br><span class="line">solid定义一个实现轮廓</span><br><span class="line">double定义一个双线轮廓</span><br><span class="line">none定义一个无轮廓</span><br><span class="line">hidden定义一个隐藏的轮廓</span><br><span class="line"></span><br><span class="line">outline-width:</span><br><span class="line">属性值有thin：一般为<span class="number">1px</span></span><br><span class="line">medium：一般为<span class="number">3px</span></span><br><span class="line">thick：一般为<span class="number">5px</span></span><br><span class="line">一个特定的尺寸：以px、em为单位</span><br><span class="line"></span><br><span class="line">outline-color：</span><br><span class="line">属性值有颜色名称</span><br><span class="line">十六进制颜色值</span><br><span class="line">RGB颜色值</span><br><span class="line"></span><br><span class="line">outline: outline-width <span class="built_in">outline-style</span>(必须) outline-color</span><br><span class="line"></span><br><span class="line">outline-offset:</span><br><span class="line">用来设置轮廓和元素之间的空隙（透明的）</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<p><em><strong>汇总：</strong></em></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>outline</code></td>
<td>一个速记属性，用于在一个声明中设置轮廓宽度、轮廓样式和轮廓颜色</td>
</tr>
<tr>
<td><code>outline-color</code></td>
<td>设置轮廓的颜色</td>
</tr>
<tr>
<td><code>outline-offset</code></td>
<td>指定轮廓与元素的边缘或边界之间的空 i 教案</td>
</tr>
<tr>
<td><code>outline-style</code></td>
<td>设置轮廓的样式</td>
</tr>
<tr>
<td><code>outline-width</code></td>
<td>设置轮廓的宽度</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="css边距"><a class="markdownIt-Anchor" href="#css边距">#</a> CSS 边距</h2>
<p>用来在元素周围创造空间，控制元素边框外的距离，可以通过 margin-left、margin-top、margin-bottom、margin-right 等属性设置元素的左边、上边、下边、右边的外边距。所有的边距属性都有以下值：1、auto（浏览器自动计算的边距）；2、length（以 px、pt（point，是一个绝对单位，中文为磅，常用于印刷中，1 磅 = 0.376mm）、cm 等为单位指定边距）；3、%（以父元素宽度的百分比来指定边距）。后两者都可以取负值，表示减少外边距的空间大小。</p>
<p>同时为了简化代码，可以在一个 margin 属性中指定所有的边距属性（直接干上 4 个 px）。</p>
<p><em><strong>汇总：</strong></em></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>margin</code></td>
<td>一个速记属性，用于在一个声明中设置所有的 margin 属性</td>
</tr>
<tr>
<td><code>margin-bottom</code></td>
<td>设置元素的底边距</td>
</tr>
<tr>
<td><code>margin-left</code></td>
<td>设置元素的左边距</td>
</tr>
<tr>
<td><code>margin-right</code></td>
<td>设置元素的右边距</td>
</tr>
<tr>
<td><code>margin-top</code></td>
<td>设置元素的顶部边距</td>
</tr>
</tbody>
</table>
<p>tips: 在两个容器的邻接处，有时会出现边距塌陷的问题，称为 <code>margin塌陷</code> ，一般发生在相邻块元素垂直边距和嵌套块元素垂直边距邻接的时候（不发生在左右边距上，只发生在顶部和底部之间，以大边距的为最终显示效果）</p>
<hr>
<h2 id="css填充和宽高"><a class="markdownIt-Anchor" href="#css填充和宽高">#</a> CSS 填充和宽高</h2>
<p>填充在边框内到内容外之间的距离，可以通过 padding-top、padding-right、padding-bottom、padding-left 等属性来设置元素不同位置上的边框内填充。padding 的属性值可以为：1、length（以 px、pt、cm 等为单位指定填充）；2、%（以父元素宽度的百分比来指定填充）。同样可以取负值，表示减少内部填充的空间大小。</p>
<p>同样也可以在一个 padding 属性中指定所有的填充属性。</p>
<p>tips：如果一个元素有指定的宽度，那加在该元素上的填充会加在这个元素的总宽度上。</p>
<p>CSS 的 width 和 height 属性不包括 margin、border 和 padding 的区域，只是用来定义元素的内容尺寸，可以设置的值有：1、auto（浏览器会计算出高度和宽度）；2、length（以 px、pt、cm 等为单位定义高度和宽度）；3、%（以父元素宽度的百分比来定义高度和宽度）；4、initial（将高度和宽度设置为默认值，实际上就是 auto 了）</p>
<p><em><strong>总结汇总：</strong></em></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>padding</code></td>
<td>一个速记属性，用于在一个声明中设置所有的 padding 属性</td>
</tr>
<tr>
<td><code>padding-bottom</code></td>
<td>设置一个元素的底部填充</td>
</tr>
<tr>
<td><code>padding-left</code></td>
<td>设置元素的左侧填充</td>
</tr>
<tr>
<td><code>padding-right</code></td>
<td>设置元素的右侧填充</td>
</tr>
<tr>
<td><code>padding-top</code></td>
<td>设置元素的顶部填充</td>
</tr>
<tr>
<td><code>height</code></td>
<td>设置元素的高度</td>
</tr>
<tr>
<td><code>width</code></td>
<td>设置元素的宽度</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="css盒模型"><a class="markdownIt-Anchor" href="#css盒模型">#</a> CSS 盒模型</h2>
<p>本质为包裹每个 HTML 元素的盒子，包含：margin、border、padding、content 四个部分。</p>
<p>盒子的宽度 = 内容宽度 + 左右填充 + 左右边框 + 左右边距</p>
<p>盒子的高度 = 内容高度 + 上下填充 + 上下边框 + 上下边距</p>
<p>👆标准盒模型</p>
<p>另一个种盒模型：怪异盒模型</p>
<p>给元素声明 box-sizing 属性，取值为 border-box。即 <code>box-sizing:border-box;</code> （如果属性值设置为 content-box 那就是标准盒（默认））</p>
<p>这样设置后，增加样式，会挤压内容的空间，不会往外扩展。宽高就是 width 和 height 属性的值。</p>
<p>这种盒子的宽度 = CSS 样式设置的 width 值 + 左右边距</p>
<p>高度 = CSS 样式设置的 height 值 + 上下边距</p>
<hr>
<h2 id="css布局之显示属性"><a class="markdownIt-Anchor" href="#css布局之显示属性">#</a> CSS 布局之显示属性</h2>
<p>要知道最重要的 CSS 属性：display，它指定一个元素是否显示以及如何显示。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>、TML元素都有一个默认的显示值</span><br><span class="line"><span class="number">2</span>、类型不同，默认的显示值也不同</span><br><span class="line">常见的属性值有：block：元素显示为块级元素。inline：元素显示为行内元素。<span class="attribute">none</span>：元素显示隐藏元素。</span><br><span class="line">tips：<span class="attribute">visibility</span>:hidden;这样也会隐藏元素，但是该元素仍将占用它隐藏前相同的空间，即仍然影响着页面的布局。但是设置的<span class="attribute">display</span>属性的<span class="attribute">none</span>会不占用这块区域。</span><br></pre></td></tr></table></figure>
<p>常见的块级元素和行内元素的汇总表，见下：</p>
<img src="/img/loading.gif" class="lazyload" data-src="C:\Users\QJF\AppData\Roaming\Typora\typora-user-images\image-20231201235117124.png"  alt="image-20231201235117124" style="zoom:50%;" />
<p>块级元素总是从一个新行开始，会占据可用的全部宽度，尽可能地想做向右伸展。这些元素地 display 默认值是 block。</p>
<img src="/img/loading.gif" class="lazyload" data-src="C:\Users\QJF\AppData\Roaming\Typora\typora-user-images\image-20231201235150919.png"  alt="image-20231201235150919" style="zoom:50%;" />
<p>内联元素不从新的一行开始只占用必要的宽度。这些元素的 display 值默认为 inline。</p>
<hr>
<h2 id="css布局之元素类型"><a class="markdownIt-Anchor" href="#css布局之元素类型">#</a> CSS 布局之元素类型</h2>
<p>注意点：</p>
<ul>
<li>行内元素不能设置宽高样式</li>
<li>行内元素可以设置边框线样式</li>
<li>行内元素可以设置内填充样式</li>
<li>行内元素可以设置左右方向的外边距样式</li>
</ul>
<ul>
<li></li>
</ul>
<ul>
<li>给块元素设置宽高、边框线、内填充、外边距样式，都是有效的。但是每个块元素独占一行</li>
</ul>
<p>👆如果要在一行上，可以采用 <code>display:inline-block;</code></p>
<p>这种方式具有 inline 和 block 两种显示效果。（同时会使 margin 塌陷的问题也消失了）</p>
<p>== 设置一个元素的 display 属性只能改变该元素的显示方式，而不能真正地改变 html 元素地类型。== 例如：一个具有 <code>display:inline;</code>  的块元素还是不允许在它的内部有其他块元素。</p>
<p>由此引申出以下的嵌套规则：</p>
<blockquote>
<p><strong>规则一</strong>：块元素可以包含行内元素或某些块元素，但行内元素却不能包含块元素，它只能包含其他的行内元素。</p>
<p><strong>规则二</strong>：块元素不能放在 p 元素里面。</p>
<p><strong>规则三</strong>：有几个特殊的块级元素只能包含行内元素，不能再包含块元素，这几个特殊的元素是：h1、2、h3、h4、h5、h6、p、dt。</p>
<p><strong>规则四</strong>：块级元素一般与块级元素并列、行内元素一般与行内元素并列。</p>
</blockquote>
<hr>
<h2 id="css布局之溢出处理"><a class="markdownIt-Anchor" href="#css布局之溢出处理">#</a> CSS 布局之溢出处理</h2>
<p>除了一般的 iframe 属性，也会院使用 CSS 的 overflow 属性，用来设定当内容太大，无法再指定区域显示时是否要裁剪内容或添加滚动条。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">overflow</span>:</span><br><span class="line">属性值有以下几种：</span><br><span class="line"><span class="number">1</span>、visible：默认，溢出的内容没有被剪掉（内容会在元素的框外显示）。</span><br><span class="line"><span class="number">2</span>、hidden：溢出的内容被剪切掉，且溢出部分不可见。</span><br><span class="line"><span class="number">3</span>、scroll：溢出的内容被剪掉，并且增加一个滚动条来查看其余的内容。</span><br><span class="line"><span class="number">4</span>、auto：类似于scroll，但只有在必要时才添加滚动条。</span><br><span class="line">要单独设置水平反向和垂直方向，可以设置一组属性：overflow-y和overflow-x。</span><br></pre></td></tr></table></figure>
<p>有时候，文字标题或文字内容所在的容器空间有限，不能显示全部的内容，会出现一个省略号（示意内容显示补全，可以点击查看详情内容）</p>
<p>可以给 <code>text-overflow</code>  设置属性值 <code>ellipsis</code></p>
<p><em><strong>汇总：</strong></em></p>
<table>
<thead>
<tr>
<th>属性</th>
<th>解释</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>overflow</code></td>
<td>指定如果内容哦给你溢出元素的盒子会发生什么。</td>
</tr>
<tr>
<td><code>overflow-x</code></td>
<td>指定如果内容溢出元素的内容区域，该如何处理内容的左 / 右边缘。</td>
</tr>
<tr>
<td><code>overflow-y</code></td>
<td>指定当内容溢出元素的内容区域时，对内容的上 / 下边缘的处理。</td>
</tr>
<tr>
<td><code>text-overflow</code></td>
<td>控制文本溢出的样式。</td>
</tr>
</tbody>
</table>
<hr>
<h2 id="css布局之浮动基础-清理"><a class="markdownIt-Anchor" href="#css布局之浮动基础-清理">#</a> CSS 布局之浮动基础、清理</h2>
<p>给容器添加浮动后会<mark>脱离标准文档流</mark>，相当于飘起来。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">float</span>:;</span><br><span class="line">属性值有：<span class="attribute">left</span>（左侧浮动）、<span class="attribute">right</span>（右侧浮动）、<span class="attribute">none</span>（不浮动）。</span><br><span class="line">浮动只能让容器在当前所在行左侧或右侧排列。</span><br></pre></td></tr></table></figure>
<ul>
<li>实现多个容器横向排列，只需要给所有的容器添加浮动样式即可。</li>
</ul>
<p>问题：如果实现有了好几个容器都是采用了浮动的方式，但是后面要加入非浮动的容器，那么势必会被上面设置了浮动对的容器给遮挡住，那要如何解决。</p>
<p>①给浮动的容器套一个父元素。让父元素来撑起对应容器映射在文档流上的那块区域。</p>
<p>为了让父元素的大小不受子元素的浮动效果影响，一种方式是直接设置宽高，要么就是设置溢出属性 <code>overflow:auto;</code> （对于超出边界的元素，父元素可以做自动的调整。）。</p>
<p>②要么就是给其他添加进入的元素设置 <code>clear</code>  属性（清除样式，是不希望受到影响谁就添加 clear 属性）。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">clear</span>:;</span><br><span class="line">属性值有如下：</span><br><span class="line"><span class="attribute">left</span>（表示当前元素不受到左浮动的影响）</span><br><span class="line"><span class="attribute">right</span>（表示当前元素不受到右浮动的影响）</span><br><span class="line">both（表示上面两个的合体版）</span><br></pre></td></tr></table></figure>
<p>***tips：*** 一般情况下，在布局页面结构时，元素选择尽量使用不同的标签，这样就可以通过元素选择器就可以分别给他们添加样式了。在设计网站时，在不知道具体要放入上面具体链接之前，我们可以先使用锚点链接，打个标记。</p>
<p>通用清理浮动的方式，加入以下内容：</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">选择器<span class="selector-pseudo">::after</span> &#123;</span><br><span class="line">    <span class="attribute">content</span>:<span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="attribute">clear</span>:both;</span><br><span class="line">    <span class="attribute">display</span>:block;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="css布局之定位"><a class="markdownIt-Anchor" href="#css布局之定位">#</a> CSS 布局之定位</h2>
<p>需要设定一个 position 属性</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">position</span>:</span><br><span class="line">有五种不同的属性值，具体如下：</span><br><span class="line">static:静态定位。</span><br><span class="line">relative:相对定位。（<span class="number">1</span>、需要配合left、top、right、bottom这些定位属性才能生效；<span class="number">2</span>、相对的是容器自身的屏幕坐标<span class="number">0</span>，<span class="number">0</span>点；<span class="number">3</span>、容器位置发生位移后，原来占据的空间依然保留；默认会覆盖没有定位的容器。）</span><br><span class="line">fixed:固定定位。（<span class="number">1</span>、是相对于浏览器视口定位的，这意味着集市页面发生滚动，它也始终保持在同一个位置；<span class="number">2</span>、top、right、bottom和left属性被用来定位元素，但不是必须的。）</span><br><span class="line">absolute:绝对定位。（<span class="number">1</span>、设置了会脱离文档流；<span class="number">2</span>、参照点为，有定位设置的离他最近的祖先元素的<span class="number">0</span>，<span class="number">0</span>点坐标；<span class="number">3</span>、默认会覆盖没有定位的容器。）</span><br><span class="line">sticky:粘性定位。【会产生动态效果，很像static和fixed的结合】（如果设置之后没有效果，会有如下原因：<span class="number">1</span>、父元素不能添加overflow:hidden或者overflow:auto属性；<span class="number">2</span>、元素自身必须声明top、bottom、left、right一个或多个属性，否则就相当于静态定位了；<span class="number">3</span>、父元素的高度不能低于sticky定位元素的高度；<span class="number">4</span>、sticky定位元素仅在其父元素内生效。）（<span class="number">1</span>、初始状态相当于static定位；<span class="number">2</span>、相对于父容器的定位条件符合时，容器变为固定定位；<span class="number">3</span>、top、right、bottom或left至少声明一个，粘性定位才能生效。）</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="css定位的堆叠"><a class="markdownIt-Anchor" href="#css定位的堆叠">#</a> CSS 定位的堆叠</h2>
<p>CSS 为盒模型的布局提供了三种不同的定位方案：正常文档流、浮动、定位。最后一种的绝对定位会把元素从正常文档流中完全移走（最终落脚点取决于开发者）。</p>
<p>出了上下左右外，css 也允许我们使用 z-index 属性将元素放置在三维空间中，设置值要为一个整数值（正整数，负整数，0）。</p>
<p>容器的堆叠顺序的计算，是先比较同级容器的。子容器是不会超出父容器的堆叠顺序的。</p>
<hr>
<h2 id="css布局值宽高自适应"><a class="markdownIt-Anchor" href="#css布局值宽高自适应">#</a> CSS 布局值宽高自适应</h2>
<p>元素的宽或高能够随着屏幕的宽高变化而变化就是宽高自适应。</p>
<p>将 width 和 height 的值设置为 %，可以实现元素的宽高自适应。</p>
<p>通过设置 max-width、max-height、min-width、min-height 可以设置元素宽高自适应的临界值。</p>
<hr>
<h2 id="css的数学函数"><a class="markdownIt-Anchor" href="#css的数学函数">#</a> CSS 的数学函数</h2>
<p>css 的数学函数允许将数学表达式作为属性使用。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line">常见格式有：</span><br><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>:<span class="built_in">calc</span>(<span class="number">100%</span>+<span class="number">100px</span>)</span><br><span class="line">    width:<span class="built_in">calc</span>(<span class="number">100%</span>-<span class="number">100px</span>)</span><br><span class="line">    width:<span class="built_in">calc</span>(<span class="number">100%</span>*<span class="number">2px</span>)</span><br><span class="line">    width:<span class="built_in">calc</span>(<span class="number">100%</span>/<span class="number">2px</span>)</span><br><span class="line">&#125;</span><br><span class="line">小括号里面编写数学公式</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="bfc"><a class="markdownIt-Anchor" href="#bfc">#</a> BFC</h2>
<p>块格式上下文</p>
<p>一般在相邻块元素垂直边距和嵌套块元素垂直边距上会发生 margin 塌陷。</p>
<p>如果一个元素触发了 BFC 规则，我们可以称它为 BFC 区域。</p>
<p>特点 1、两个 BFC 区域之间是相互独立互不影响的。（如果容器内部的子元素出现了上下边距，边距不会跑到外面去影响其他元素，而是在内部拉开距离，这使得父元素变成了一个独立的区域）</p>
<p>特点 2、元素被触发了 BFC 规则，那么浏览器在计算这个元素的高度的时候，会把浮动元素也考虑进去，这样不管有多少个浮动元素，都不用担心父元素没有高度了。</p>
<p>设置触发 BFC 的条件：</p>
<p>1、设置 <code>float:left/right;</code></p>
<p>2、设置 <code>position:absolute/fixed;</code></p>
<p>3、设置 <code>display:inline-block/tabl-cell等;</code></p>
<p>4、设置 <code>overflow:auto/hidden等;</code></p>
<p>无论是浮动、定位或者更改元素类型，都有可能大幅度影响页面布局，而 overflow 这个属性则没有这方面的问题。所以一般最后一个设置的比较多。</p>
<hr>
<h2 id="css表格"><a class="markdownIt-Anchor" href="#css表格">#</a> CSS 表格</h2>
<p>定义表格的边框：</p>
<p>使用 <code>border</code>  属性，因为 th、td 等元素都占有一定的位置，所以就这样加上边框会有空隙的存在，这时要采用 <code>border-collapse</code>  来把表格的边框折叠成一个单一的边框。</p>
<figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="attribute">border-collapse</span>:collapse;</span><br></pre></td></tr></table></figure>
<p><code>width</code>  和 <code>height</code>  属性可以用来定义表格的高度和宽度。</p>
<p><code>text-align</code>  属性用来设置 th 或 td 中内容的水平对齐方式（默认的 th 内容是居中对齐的，td 元素的内容是左对齐的）。</p>
<p><code>vertical-align</code>  属性用来设置 th 或 td 中内容的垂直对齐方式（默认的 th 和 td 的内容都是垂直居中对齐）。</p>
<p><code>padding</code>  属性用来给内容和边框线之间添加填充。</p>
<p><code>border-bottom</code>  属性用来实现表格的水平分割线效果。</p>
<hr>
<h2 id="完结撒花"><a class="markdownIt-Anchor" href="#完结撒花">#</a> 完结撒花</h2>
<p><em>★,°</em>:.☆(￣▽￣)/$:<em>.°★</em> 。</p>
]]></content>
      <categories>
        <category>HTML语法学习</category>
      </categories>
      <tags>
        <tag>HTML</tag>
      </tags>
  </entry>
  <entry>
    <title>C++常用代码模板（3）</title>
    <url>/2023/06/26/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF3/</url>
    <content><![CDATA[<h1 id="常用代码模板3搜索与图论"><a class="markdownIt-Anchor" href="#常用代码模板3搜索与图论">#</a> 常用代码模板 3—— 搜索与图论</h1>
<h4 id="树与图的存储"><a class="markdownIt-Anchor" href="#树与图的存储">#</a> 树与图的存储</h4>
<p>树是一种特殊的图，与图的存储方式相同。<br>
对于无向图中的边 ab，存储两条有向边 a-&gt;b, b-&gt;a。<br>
因此我们可以只考虑有向图的存储。</p>
<p>(1) 邻接矩阵：g [a][b] 存储边 a-&gt;b</p>
<p>(2) 邻接表：</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 对于每个点k，开一个单链表，存储k所有可以走到的点。h[k]存储这个单链表的头结点</span></span><br><span class="line"><span class="type">int</span> h[N], e[N], ne[N], idx;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 添加一条边a-&gt;b</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b, ne[idx] = h[a], h[a] = idx ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化</span></span><br><span class="line">idx = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h);</span><br></pre></td></tr></table></figure>
<h4 id="树与图的遍历"><a class="markdownIt-Anchor" href="#树与图的遍历">#</a> 树与图的遍历</h4>
<p><strong>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n+m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 表示边数</strong></p>
<p>(1) 深度优先遍历</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    st[u] = <span class="literal">true</span>; <span class="comment">// st[u] 表示点u已经被遍历过</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h[u]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = e[i];</span><br><span class="line">        <span class="keyword">if</span> (!st[j]) <span class="built_in">dfs</span>(j);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>(2) 宽度优先遍历</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">st[<span class="number">1</span>] = <span class="literal">true</span>; <span class="comment">// 表示1号点已经被遍历过</span></span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">    q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = e[i];</span><br><span class="line">        <span class="keyword">if</span> (!st[j])</span><br><span class="line">        &#123;</span><br><span class="line">            st[j] = <span class="literal">true</span>; <span class="comment">// 表示点j已经被遍历过</span></span><br><span class="line">            q.<span class="built_in">push</span>(j);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="拓扑排序"><a class="markdownIt-Anchor" href="#拓扑排序">#</a> 拓扑排序</h4>
<p><strong>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n+m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 表示边数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">topsort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// d[i] 存储点i的入度</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (!d[i])</span><br><span class="line">            q[ ++ tt] = i;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (hh &lt;= tt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = q[hh ++ ];</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span> (-- d[j] == <span class="number">0</span>)</span><br><span class="line">                q[ ++ tt] = j;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果所有点都入队了，说明存在拓扑序列；否则不存在拓扑序列。</span></span><br><span class="line">    <span class="keyword">return</span> tt == n - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="朴素dijkstra算法"><a class="markdownIt-Anchor" href="#朴素dijkstra算法">#</a> 朴素 dijkstra 算法</h4>
<p><strong>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2+m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 表示边数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> g[N][N];  <span class="comment">// 存储每条边</span></span><br><span class="line"><span class="type">int</span> dist[N];  <span class="comment">// 存储1号点到每个点的最短距离</span></span><br><span class="line"><span class="type">bool</span> st[N];   <span class="comment">// 存储每个点的最短路是否已经确定</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 求1号点到n号点的最短路，如果不存在则返回-1</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dijkstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = <span class="number">-1</span>;     <span class="comment">// 在还未确定最短路的点中，寻找距离最小的点</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ )</span><br><span class="line">            <span class="keyword">if</span> (!st[j] &amp;&amp; (t == <span class="number">-1</span> || dist[t] &gt; dist[j]))</span><br><span class="line">                t = j;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 用t更新其他点的距离</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ )</span><br><span class="line">            dist[j] = <span class="built_in">min</span>(dist[j], dist[t] + g[t][j]);</span><br><span class="line"></span><br><span class="line">        st[t] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (dist[n] == <span class="number">0x3f3f3f3f</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="堆优化版dijkstra"><a class="markdownIt-Anchor" href="#堆优化版dijkstra">#</a> 堆优化版 Dijkstra</h4>
<p><strong>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(mlogn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 表示边数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n;      <span class="comment">// 点的数量</span></span><br><span class="line"><span class="type">int</span> h[N], w[N], e[N], ne[N], idx;       <span class="comment">// 邻接表存储所有边</span></span><br><span class="line"><span class="type">int</span> dist[N];        <span class="comment">// 存储所有点到1号点的距离</span></span><br><span class="line"><span class="type">bool</span> st[N];     <span class="comment">// 存储每个点的最短距离是否已确定</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 求1号点到n号点的最短距离，如果不存在，则返回-1</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dijkstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; heap;</span><br><span class="line">    heap.<span class="built_in">push</span>(&#123;<span class="number">0</span>, <span class="number">1</span>&#125;);      <span class="comment">// first存储距离，second存储节点编号</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (heap.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = heap.<span class="built_in">top</span>();</span><br><span class="line">        heap.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        <span class="type">int</span> ver = t.second, distance = t.first;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (st[ver]) <span class="keyword">continue</span>;</span><br><span class="line">        st[ver] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h[ver]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span> (dist[j] &gt; distance + w[i])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[j] = distance + w[i];</span><br><span class="line">                heap.<span class="built_in">push</span>(&#123;dist[j], j&#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (dist[n] == <span class="number">0x3f3f3f3f</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="bellman-ford算法"><a class="markdownIt-Anchor" href="#bellman-ford算法">#</a> Bellman-Ford 算法</h4>
<p><strong>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 表示边数</strong></p>
<p>注意在模板题中需要对下面的模板稍作修改，加上备份数组，详情见模板题。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n, m;       <span class="comment">// n表示点数，m表示边数</span></span><br><span class="line"><span class="type">int</span> dist[N];        <span class="comment">// dist[x]存储1到x的最短路距离</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span>     <span class="comment">// 边，a表示出点，b表示入点，w表示边的权重</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b, w;</span><br><span class="line">&#125;edges[M];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求1到n的最短路距离，如果无法从1走到n，则返回-1。</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bellman_ford</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果第n次迭代仍然会松弛三角不等式，就说明存在一条长度是n+1的最短路径，由抽屉原理，路径中至少存在两个相同的点，说明图中存在负权回路。</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> a = edges[j].a, b = edges[j].b, w = edges[j].w;</span><br><span class="line">            <span class="keyword">if</span> (dist[b] &gt; dist[a] + w)</span><br><span class="line">                dist[b] = dist[a] + w;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (dist[n] &gt; <span class="number">0x3f3f3f3f</span> / <span class="number">2</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="spfa-算法队列优化的bellman-ford算法"><a class="markdownIt-Anchor" href="#spfa-算法队列优化的bellman-ford算法">#</a> spfa 算法（队列优化的 Bellman-Ford 算法）</h4>
<p><strong>时间复杂度 平均情况下<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，最坏情况下<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 表示边数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n;      <span class="comment">// 总点数</span></span><br><span class="line"><span class="type">int</span> h[N], w[N], e[N], ne[N], idx;       <span class="comment">// 邻接表存储所有边</span></span><br><span class="line"><span class="type">int</span> dist[N];        <span class="comment">// 存储每个点到1号点的最短距离</span></span><br><span class="line"><span class="type">bool</span> st[N];     <span class="comment">// 存储每个点是否在队列中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 求1号点到n号点的最短路距离，如果从1号点无法走到n号点则返回-1</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line">    dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    q.<span class="built_in">push</span>(<span class="number">1</span>);</span><br><span class="line">    st[<span class="number">1</span>] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        st[t] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span> (dist[j] &gt; dist[t] + w[i])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[j] = dist[t] + w[i];</span><br><span class="line">                <span class="keyword">if</span> (!st[j])     <span class="comment">// 如果队列中已存在j，则不需要将j重复插入</span></span><br><span class="line">                &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(j);</span><br><span class="line">                    st[j] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (dist[n] == <span class="number">0x3f3f3f3f</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    <span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="spfa判断图中是否存在负环"><a class="markdownIt-Anchor" href="#spfa判断图中是否存在负环">#</a> spfa 判断图中是否存在负环</h4>
<p><strong>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 表示边数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n;      <span class="comment">// 总点数</span></span><br><span class="line"><span class="type">int</span> h[N], w[N], e[N], ne[N], idx;       <span class="comment">// 邻接表存储所有边</span></span><br><span class="line"><span class="type">int</span> dist[N], cnt[N];        <span class="comment">// dist[x]存储1号点到x的最短距离，cnt[x]存储1到x的最短路中经过的点数</span></span><br><span class="line"><span class="type">bool</span> st[N];     <span class="comment">// 存储每个点是否在队列中</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果存在负环，则返回true，否则返回false。</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">// 不需要初始化dist数组</span></span><br><span class="line">    <span class="comment">// 原理：如果某条最短路径上有n个点（除了自己），那么加上自己之后一共有n+1个点，由抽屉原理一定有两个点相同，所以存在环。</span></span><br><span class="line"></span><br><span class="line">    queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        q.<span class="built_in">push</span>(i);</span><br><span class="line">        st[i] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">auto</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">        q.<span class="built_in">pop</span>();</span><br><span class="line"></span><br><span class="line">        st[t] = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span> (dist[j] &gt; dist[t] + w[i])</span><br><span class="line">            &#123;</span><br><span class="line">                dist[j] = dist[t] + w[i];</span><br><span class="line">                cnt[j] = cnt[t] + <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">if</span> (cnt[j] &gt;= n) <span class="keyword">return</span> <span class="literal">true</span>;       <span class="comment">// 如果从1号点到x的最短路中包含至少n个点（不包括自己），则说明存在环</span></span><br><span class="line">                <span class="keyword">if</span> (!st[j])</span><br><span class="line">                &#123;</span><br><span class="line">                    q.<span class="built_in">push</span>(j);</span><br><span class="line">                    st[j] = <span class="literal">true</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="floyd算法"><a class="markdownIt-Anchor" href="#floyd算法">#</a> floyd 算法</h4>
<p><strong>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">初始化：</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ )</span><br><span class="line">            <span class="keyword">if</span> (i == j) d[i][j] = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">else</span> d[i][j] = INF;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 算法结束后，d[a][b]表示a到b的最短距离</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">floyd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= n; k ++ )</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">            <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ )</span><br><span class="line">                d[i][j] = <span class="built_in">min</span>(d[i][j], d[i][k] + d[k][j]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="朴素版prim算法"><a class="markdownIt-Anchor" href="#朴素版prim算法">#</a> 朴素版 prim 算法</h4>
<p><strong>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2+m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 表示边数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n;      <span class="comment">// n表示点数</span></span><br><span class="line"><span class="type">int</span> g[N][N];        <span class="comment">// 邻接矩阵，存储所有边</span></span><br><span class="line"><span class="type">int</span> dist[N];        <span class="comment">// 存储其他点到当前最小生成树的距离</span></span><br><span class="line"><span class="type">bool</span> st[N];     <span class="comment">// 存储每个点是否已经在生成树中</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 如果图不连通，则返回INF(值是0x3f3f3f3f), 否则返回最小生成树的树边权重之和</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ )</span><br><span class="line">            <span class="keyword">if</span> (!st[j] &amp;&amp; (t == <span class="number">-1</span> || dist[t] &gt; dist[j]))</span><br><span class="line">                t = j;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i &amp;&amp; dist[t] == INF) <span class="keyword">return</span> INF;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (i) res += dist[t];</span><br><span class="line">        st[t] = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j ++ ) dist[j] = <span class="built_in">min</span>(dist[j], g[t][j]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="kruskal算法"><a class="markdownIt-Anchor" href="#kruskal算法">#</a> Kruskal 算法</h4>
<p><strong>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>m</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(mlogm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 表示边数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n, m;       <span class="comment">// n是点数，m是边数</span></span><br><span class="line"><span class="type">int</span> p[N];       <span class="comment">// 并查集的父节点数组</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span>     <span class="comment">// 存储边</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> a, b, w;</span><br><span class="line"></span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt; (<span class="type">const</span> Edge &amp;W)<span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> w &lt; W.w;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;edges[M];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span>     <span class="comment">// 并查集核心操作</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (p[x] != x) p[x] = <span class="built_in">find</span>(p[x]);</span><br><span class="line">    <span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">kruskal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">sort</span>(edges, edges + m);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) p[i] = i;    <span class="comment">// 初始化并查集</span></span><br><span class="line"></span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = edges[i].a, b = edges[i].b, w = edges[i].w;</span><br><span class="line"></span><br><span class="line">        a = <span class="built_in">find</span>(a), b = <span class="built_in">find</span>(b);</span><br><span class="line">        <span class="keyword">if</span> (a != b)     <span class="comment">// 如果两个连通块不连通，则将这两个连通块合并</span></span><br><span class="line">        &#123;</span><br><span class="line">            p[a] = b;</span><br><span class="line">            res += w;</span><br><span class="line">            cnt ++ ;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (cnt &lt; n - <span class="number">1</span>) <span class="keyword">return</span> INF;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="染色法判别二分图"><a class="markdownIt-Anchor" href="#染色法判别二分图">#</a> 染色法判别二分图</h4>
<p><strong>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n+m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 表示边数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n;      <span class="comment">// n表示点数</span></span><br><span class="line"><span class="type">int</span> h[N], e[M], ne[M], idx;     <span class="comment">// 邻接表存储图</span></span><br><span class="line"><span class="type">int</span> color[N];       <span class="comment">// 表示每个点的颜色，-1表示未染色，0表示白色，1表示黑色</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 参数：u表示当前节点，c表示当前点的颜色</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    color[u] = c;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h[u]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = e[i];</span><br><span class="line">        <span class="keyword">if</span> (color[j] == <span class="number">-1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">dfs</span>(j, !c)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (color[j] == c) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(color, <span class="number">-1</span>, <span class="keyword">sizeof</span> color);</span><br><span class="line">    <span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (color[i] == <span class="number">-1</span>)</span><br><span class="line">            <span class="keyword">if</span> (!<span class="built_in">dfs</span>(i, <span class="number">0</span>))</span><br><span class="line">            &#123;</span><br><span class="line">                flag = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="keyword">return</span> flag;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="匈牙利算法"><a class="markdownIt-Anchor" href="#匈牙利算法">#</a> 匈牙利算法</h4>
<p><strong>时间复杂度 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(nm)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 表示点数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 表示边数</strong></p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> n1, n2;     <span class="comment">// n1表示第一个集合中的点数，n2表示第二个集合中的点数</span></span><br><span class="line"><span class="type">int</span> h[N], e[M], ne[M], idx;     <span class="comment">// 邻接表存储所有边，匈牙利算法中只会用到从第一个集合指向第二个集合的边，所以这里只用存一个方向的边</span></span><br><span class="line"><span class="type">int</span> match[N];       <span class="comment">// 存储第二个集合中的每个点当前匹配的第一个集合中的点是哪个</span></span><br><span class="line"><span class="type">bool</span> st[N];     <span class="comment">// 表示第二个集合中的每个点是否已经被遍历过</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h[x]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = e[i];</span><br><span class="line">        <span class="keyword">if</span> (!st[j])</span><br><span class="line">        &#123;</span><br><span class="line">            st[j] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (match[j] == <span class="number">0</span> || <span class="built_in">find</span>(match[j]))</span><br><span class="line">            &#123;</span><br><span class="line">                match[j] = x;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 求最大匹配数，依次枚举第一个集合中的每个点能否匹配第二个集合中的点</span></span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n1; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">memset</span>(st, <span class="literal">false</span>, <span class="keyword">sizeof</span> st);</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">find</span>(i)) res ++ ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>模板类型</category>
      </categories>
      <tags>
        <tag>C++模板</tag>
      </tags>
  </entry>
  <entry>
    <title>C++常用代码模板（4）</title>
    <url>/2023/06/26/%E5%B8%B8%E7%94%A8%E4%BB%A3%E7%A0%81%E6%A8%A1%E6%9D%BF4/</url>
    <content><![CDATA[<h1 id="常用代码模板4数学知识"><a class="markdownIt-Anchor" href="#常用代码模板4数学知识">#</a> 常用代码模板 4—— 数学知识</h1>
<p><strong>一些常用的整除小知识</strong></p>
<blockquote>
<p>（1）能被 8 整除，等价于后 3 位可以被 8 整除。</p>
<p>（2）能被 2 或 5 整除，等价于后 1 位可以被 2 或 5 整除。</p>
<p>（3）能被 4 整除，等价于后 2 位可以被 4 整除。</p>
<p>（4）能被 3 或 9 整除，等价于各位数字之和能被 3 或 9 整除。</p>
<p>（5）能被 11 整除，等价于奇树位各位数字之和减去偶位各位数字之和的差值能被 11 整除。</p>
<p>（6）能被 7 或 11 或 13 整除，等价于后三位之前的数减去后三位的差值可以被 7 或 1 或 13 整除。</p>
<p>（7）一种特殊的判别某数是否能被什么整除方法 —— 截尾法（目前只给出思路，之后编写代码）。</p>
</blockquote>
<h4 id="思想截尾法"><a class="markdownIt-Anchor" href="#思想截尾法">#</a> 思想：截尾法</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">先看个例子：<span class="number">112024</span>是否为<span class="number">19</span>的倍数？</span><br><span class="line"><span class="number">112024</span>先变为-&gt;<span class="number">11202</span>和<span class="number">4</span>，然后进行<span class="number">11202</span>+<span class="number">2</span>*<span class="number">4</span>=<span class="number">11210</span></span><br><span class="line">然后继续变为-&gt;<span class="number">1121</span>和<span class="number">0</span>，然后进行<span class="number">1121</span>+<span class="number">2</span>*<span class="number">0</span>=<span class="number">1121</span></span><br><span class="line">然后继续变为-&gt;<span class="number">112</span>和<span class="number">1</span>，然后进行<span class="number">112</span>+<span class="number">2</span>*<span class="number">1</span>=<span class="number">114</span></span><br><span class="line">然后继续变为-&gt;<span class="number">11</span>和<span class="number">4</span>，然后进行<span class="number">11</span>+<span class="number">2</span>*<span class="number">4</span>=<span class="number">19</span>，<span class="number">19</span>是<span class="number">19</span>的倍数，所以原数是<span class="number">19</span>的倍数。</span><br><span class="line">---前置知识---</span><br><span class="line">a|b，a|c  =&gt;  a|(b±c)</span><br><span class="line">A = <span class="number">10</span>m + <span class="built_in">n</span> (m位其他位数的数值，n为个位数字)</span><br><span class="line">B = <span class="number">10</span>(m + <span class="number">2</span>n) = <span class="number">10</span>m + <span class="number">20</span>n (乘的<span class="number">10</span>对是否是<span class="number">19</span>的倍数没有影响，如果要有影响也要是后面产生的)</span><br><span class="line">C = B - A = <span class="number">19</span>n</span><br><span class="line">A = B - <span class="built_in">C</span> (C已经是<span class="number">19</span>的倍数了，如果B也是<span class="number">19</span>的倍数，那么A就是<span class="number">19</span>的倍数)</span><br><span class="line"></span><br><span class="line">-----------------------------------------------------------------------------------------</span><br><span class="line">一般性：</span><br><span class="line">首先我们先确定好要是以谁为倍数。</span><br><span class="line">确定好以谁倍数（设为x）之后,对x做乘积，使之满足各位是<span class="number">1</span>或是<span class="number">9</span>。</span><br><span class="line">假设是<span class="number">17</span>，那么合适的值为<span class="number">51</span>。</span><br><span class="line">因为我们要截掉尾巴，所以就是要加上几n或是减掉几n使之没有个位上的值。</span><br><span class="line">A = <span class="number">10</span>m + n</span><br><span class="line">进行：A - <span class="number">51</span>n = <span class="number">10</span>(m - <span class="number">5</span>n)</span><br><span class="line">这样之后就按 m - <span class="number">5</span>n 来看是否为<span class="number">17</span>的倍数。</span><br></pre></td></tr></table></figure>
<h4 id="试除法判定质数"><a class="markdownIt-Anchor" href="#试除法判定质数">#</a> 试除法判定质数</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">bool</span> <span class="title">is_prime</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= x / i; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="试除法分解质因数"><a class="markdownIt-Anchor" href="#试除法分解质因数">#</a> 试除法分解质因数</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">divide</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= x / i; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line">            <span class="keyword">while</span> (x % i == <span class="number">0</span>) x /= i, s ++ ;</span><br><span class="line">            cout &lt;&lt; i &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; s &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">1</span>) cout &lt;&lt; x &lt;&lt; <span class="string">&#x27; &#x27;</span> &lt;&lt; <span class="number">1</span> &lt;&lt; endl; <span class="comment">// n中最多只包含一个大于sqrt(n)的质因子 </span></span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="朴素筛法求素数"><a class="markdownIt-Anchor" href="#朴素筛法求素数">#</a> 朴素筛法求素数</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> primes[N], cnt;     <span class="comment">// primes[]存储所有素数</span></span><br><span class="line"><span class="type">bool</span> st[N];         <span class="comment">// st[x]存储x是否被筛掉</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_primes</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (st[i]) <span class="keyword">continue</span>;</span><br><span class="line">        primes[cnt ++ ] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + i; j &lt;= n; j += i)</span><br><span class="line">            st[j] = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="线性筛法求素数"><a class="markdownIt-Anchor" href="#线性筛法求素数">#</a> 线性筛法求素数</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 另一个埃氏筛法的时间复杂度为：O(nlog(lon n))</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 对于任何一个合数都有最小质因子,这种方法求素数的同时也得到了每个数的最小质因子</span></span><br><span class="line"><span class="type">int</span> primes[N], cnt;     <span class="comment">// primes[]存储所有素数</span></span><br><span class="line"><span class="type">bool</span> st[N];         <span class="comment">// st[x]存储x是否被筛掉</span></span><br><span class="line"><span class="comment">// 复杂度为O(n)</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_primes</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!st[i]) primes[cnt ++ ] = i; <span class="comment">// 未被筛掉的轮到的素数，去筛掉它的倍数</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; primes[j] &lt;= n / i; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">			<span class="comment">// 确保每个合数，只被最小的质因子筛掉            </span></span><br><span class="line">            st[primes[j] * i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">// 1. i % primes[j] != 0，i中的最小质因子都是比primes[j]大，i * primes[j]这个数的最小质因子，就是primes[j]</span></span><br><span class="line">            <span class="comment">// 2. i % primes[j] == 0，primes[j]是i的最小质因子，i *primes[j]的最小质因子</span></span><br><span class="line">            <span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>) <span class="keyword">break</span>; <span class="comment">// 确保是被最小的质因数筛掉</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="试除法求所有约数"><a class="markdownIt-Anchor" href="#试除法求所有约数">#</a> 试除法求所有约数</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">get_divisors</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= x / i; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            res.<span class="built_in">push_back</span>(i);</span><br><span class="line">            <span class="keyword">if</span> (i != x / i) res.<span class="built_in">push_back</span>(x / i);</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">sort</span>(res.<span class="built_in">begin</span>(), res.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="约数个数和约数之和"><a class="markdownIt-Anchor" href="#约数个数和约数之和">#</a> 约数个数和约数之和</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span>范围内，约数最多的数的约束个数差不多为<span class="number">1500</span>个</span><br><span class="line">如果 N = p1^c1 * p2^c2 * ... *pk^ck</span><br><span class="line">约数个数： (c1 + <span class="number">1</span>) * (c2 + <span class="number">1</span>) * ... * (ck + <span class="number">1</span>)</span><br><span class="line">约数之和： (p1^<span class="number">0</span> + p1^<span class="number">1</span> + ... + p1^c1) * ... * (pk^<span class="number">0</span> + pk^<span class="number">1</span> + ... + pk^ck)</span><br></pre></td></tr></table></figure>
<h4 id="欧几里得算法"><a class="markdownIt-Anchor" href="#欧几里得算法">#</a> 欧几里得算法</h4>
<p><strong>证明简述:</strong></p>
<blockquote>
<p>** 结论：** 对任意非负整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span> 和正整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>，有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>b</mi><mo separator="true">,</mo><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\gcd(a,b)=\gcd(b,a \bmod b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span></p>
<p>** 证明：** 因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 是正整数，所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mi>k</mi><mi>b</mi><mo>+</mo><mi>r</mi></mrow><annotation encoding="application/x-tex">a=kb+r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 是整数。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∴</mo><mi>a</mi><mspace></mspace><mspace width="0.6666666666666666em"/><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mtext> </mtext><mtext> </mtext><mi>b</mi><mo>=</mo><mi>a</mi><mo>−</mo><mi>k</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">\therefore a \mod b =a-kb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.6666666666666666em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">b</span></span></span></span></p>
<p>​	    设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span></span></span></span> 的公因子，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi mathvariant="normal">∣</mi><mi>a</mi><mo separator="true">,</mo><mi>d</mi><mi mathvariant="normal">∣</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">d|a,d|b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord">∣</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord">∣</span><span class="mord mathnormal">b</span></span></span></span>，所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi mathvariant="normal">∣</mi><mi>k</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">d|kb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">b</span></span></span></span>。由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi mathvariant="normal">∣</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">d|a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord">∣</span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi mathvariant="normal">∣</mi><mi>k</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">d|kb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord">∣</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">b</span></span></span></span> 得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi mathvariant="normal">∣</mi><mo stretchy="false">(</mo><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">d|(a \bmod b)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord">∣</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>，因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a \bmod b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 的公因子。</p>
<p>​	     因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">a,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span></span></span></span> 的公因子集合与 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a \bmod b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 的公因子集合相等，两个集合的最大值也相等。证毕。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> b ? <span class="built_in">gcd</span>(b, a % b) : a;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="求欧拉函数"><a class="markdownIt-Anchor" href="#求欧拉函数">#</a> 求欧拉函数</h4>
<p><strong>前置知识</strong></p>
<blockquote>
<p>| 互质：互质是公约数只有 1 的两个整数，叫做互质整数。</p>
</blockquote>
<p><strong>欧拉函数定义</strong></p>
<blockquote p_m="">
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>∼</mo><mi>N</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1∼N-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.76666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 中与 N 互质的数的个数被称为欧拉函数，记为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\phi(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">ϕ</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>。<br>
若在算数基本定理中，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>N</mi><mo>=</mo><msubsup><mi>p</mi><mn>1</mn><msub><mi>a</mi><mn>1</mn></msub></msubsup><msubsup><mi>p</mi><mn>2</mn><msub><mi>a</mi><mn>2</mn></msub></msubsup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msubsup><mi>p</mi><mi>m</mi><msub><mi>a</mi><mi>m</mi></msub></msubsup></mrow><annotation encoding="application/x-tex">N=p_1^{a_1}p_2^{a_2}...p_m^{a_m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.0126em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1449000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.746292em;"><span style="top:-2.433692em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.1449000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>，则：<br>
\phi(N)=N\cdot\frac{p_1-1}{p_1}\cdot\frac{p_2-1}{p_2}\cdot...\cdot\frac{p_m-1}</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="type">int</span> <span class="title">phi</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res = x;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= x / i; i ++ )</span><br><span class="line">        <span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            res = res / i * (i - <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">while</span> (x % i == <span class="number">0</span>) x /= i;</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">if</span> (x &gt; <span class="number">1</span>) res = res / x * (x - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p><strong>欧拉定理</strong>：</p>
<blockquote>
<p><strong>定义：</strong> <em>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 是正整数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">(a,m)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></msup><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a^{\varphi(m)} \equiv 1\pmod m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></em></p>
<p>** 证明：** 由定理 D，设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>x</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{x_1,x_2,…,x_{\varphi(m)}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">{</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> 是模 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 的一个缩系，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi>a</mi><msub><mi>x</mi><mn>1</mn></msub><mo separator="true">,</mo><mi>a</mi><msub><mi>x</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>a</mi><msub><mi>x</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{ax_1,ax_2,…,ax_{\varphi(m)}\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">{</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">}</span></span></span></span> 也是模 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 的缩系。</p>
<p>因此 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><msub><mi>x</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>a</mi><msub><mi>x</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>…</mo><mo stretchy="false">(</mo><mi>a</mi><msub><mi>x</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></msub><mo stretchy="false">)</mo><mo>≡</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>…</mo><msub><mi>x</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></msub><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(ax_1)(ax_2)…(ax_{\varphi(m)}) \equiv x_1x_2…x_{\varphi(m)}\pmod m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.1052em;vertical-align:-0.3551999999999999em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7857599999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></msup><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>…</mo><msub><mi>x</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></msub><mo>≡</mo><msub><mi>x</mi><mn>1</mn></msub><msub><mi>x</mi><mn>2</mn></msub><mo>…</mo><msub><mi>x</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></msub><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a^{\varphi(m)}x_1x_2…x_{\varphi(m)} \equiv x_1x_2…x_{\varphi(m)}\pmod m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.2431999999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7857599999999999em;vertical-align:-0.3551999999999999em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.5198em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3551999999999999em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></p>
<p>又 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∵</mo><mo stretchy="false">(</mo><msub><mi>x</mi><mi>i</mi></msub><mo separator="true">,</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mi>i</mi><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\because (x_i,m) = 1,i = 1,2,…,\varphi(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.85396em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∴</mo><msup><mi>a</mi><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow></msup><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\therefore a^{\varphi(m)} \equiv 1\pmod m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">m</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>。证毕。</p>
<p>** 意义：** 说明数列 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>A</mi><mi>i</mi></msub><mo>=</mo><msup><mi>a</mi><mi>i</mi></msup><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">A_i = a^i\pmod m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span> 一定是周期数列，周期最大不可能超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varphi(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>。</p>
<p>当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 为素数时，由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo><mo>=</mo><mi>m</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\varphi(m)=m-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，带入欧拉定理可立即得到费马小定理。（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\varphi(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span> 指不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 的和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 互质的数。）</p>
<p>e.g. <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>φ</mi><mo stretchy="false">(</mo><mn>7</mn><mo stretchy="false">)</mo></mrow></msup><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mn>7</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2^{\varphi(7)}\equiv 1\pmod 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8879999999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">φ</span><span class="mopen mtight">(</span><span class="mord mtight">7</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord">7</span><span class="mclose">)</span></span></span></span>，这里周期不超过 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi><mo stretchy="false">(</mo><mn>7</mn><mo stretchy="false">)</mo><mo>=</mo><mn>6</mn></mrow><annotation encoding="application/x-tex">\varphi(7)=6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord">7</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span>，但是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mn>3</mn></msup><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mn>7</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">2^3 \equiv 1\pmod 7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord">7</span><span class="mclose">)</span></span></span></span>。也就是说周期是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>3</mn></mrow><annotation encoding="application/x-tex">3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">3</span></span></span></span> 而非 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>6</mn></mrow><annotation encoding="application/x-tex">6</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">6</span></span></span></span>。</p>
</blockquote>
<p><strong>费马小定理：</strong></p>
<blockquote>
<p>** 定义：**① 设 p 是素数，则对于任意的整数 a，有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>p</mi></msup><mo>≡</mo><mi>a</mi><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a^p \equiv a\pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span>。② 若 p 是素数，a 是正整数，且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>p</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\gcd(a,p)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a^{p-1} \equiv 1 \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></p>
<p>** 证明：** 使用归纳法证明：显然 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>1</mn><mi>p</mi></msup><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">1^p \equiv 1\pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span>，假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>p</mi></msup><mo>≡</mo><mi>a</mi><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a^p \equiv a \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span> 成立，那么通过二项式定理有：</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>p</mi></msup><mo>=</mo><msup><mi>a</mi><mi>p</mi></msup><mo>+</mo><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>p</mi><mn>1</mn></mfrac></mstyle><mo fence="true">)</mo></mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>+</mo><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>p</mi><mn>2</mn></mfrac></mstyle><mo fence="true">)</mo></mrow><msup><mi>a</mi><mrow><mi>p</mi><mo>−</mo><mn>2</mn></mrow></msup><mo>+</mo><mo>…</mo><mo>+</mo><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>p</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mstyle><mo fence="true">)</mo></mrow><mi>a</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">(a+1)^p=a^p+\dbinom{p}{1}a^{p-1}+\dbinom{p}{2}a^{p-2}+…+\dbinom{p}{p-1}a + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.6770000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p>
<p>因为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>p</mi><mi>k</mi></mfrac></mstyle><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mrow><mi>p</mi><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>…</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>k</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mrow><mi>k</mi><mo stretchy="false">!</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\dbinom{p}{k}=\frac{p(p-1)…(p-k+1)}{k!}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.355em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mtight">1</span><span class="mclose mtight">)</span><span class="minner mtight">…</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">+</span><span class="mord mtight">1</span><span class="mclose mtight">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span> 对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>k</mi><mo>≤</mo><mi>p</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">1 \leq k \leq p-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7777700000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 成立，在模 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 意义下，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>p</mi><mn>1</mn></mfrac></mstyle><mo fence="true">)</mo></mrow><mo>≡</mo><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>p</mi><mn>2</mn></mfrac></mstyle><mo fence="true">)</mo></mrow><mo>≡</mo><mo>…</mo><mo>≡</mo><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>p</mi><mrow><mi>p</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mstyle><mo fence="true">)</mo></mrow><mo>≡</mo><mn>0</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\dbinom{p}{1}\equiv\dbinom{p}{2}\equiv…\equiv\dbinom{p}{p-1}\equiv 0 \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.6770000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span>，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>p</mi></msup><mo>≡</mo><msup><mi>a</mi><mi>p</mi></msup><mo>+</mo><mn>1</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a+1)^p \equiv a^p + 1\pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span>，将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mi>p</mi></msup><mo>≡</mo><mi>a</mi><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">a^p\equiv a \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span> 带入得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo>+</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mi>p</mi></msup><mo>≡</mo><mi>a</mi><mo>+</mo><mn>1</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(a+1)^p\equiv a+1 \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span> 。证毕。</p>
</blockquote>
<p><strong>扩展欧拉定理<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow></mrow><mo>∗</mo></msup></mrow><annotation encoding="application/x-tex">^*</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.688696em;vertical-align:0em;"></span><span class="mord"><span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.688696em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∗</span></span></span></span></span></span></span></span></span></span></span>：</strong></p>
<blockquote>
<p><strong>定义：</strong></p>
<p cases="">a^b \equiv \begin{cases} a^{b \bmod \varphi(m)},&\gcd(a,m)=1,\\ a^b, & \gcd(a,m)\neq 1,b<\varphi(m),\pmod m\\a^{(b \bmod \varphi(m)+\varphi(m))},& \gcd(a,m) \neq 1,b \geq \varphi(m).\end</p>
<p>** 用法解释：** 对于第二行，如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>&lt;</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">b &lt; \varphi(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span> 的话，就不能降幂了。主要是因为题目中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span> 不 hi 太大，而如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>&lt;</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">b &lt; \varphi(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>，自然复杂度是可以接受的。而如果 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>≥</mo><mi>φ</mi><mo stretchy="false">(</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">b \geq \varphi(m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">φ</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span> 的话，复杂度可能就超出预期了，这个时候我们才需要降幂来降低复杂度。</p>
<p><em>证明非常复杂，此处略去了捏。</em></p>
</blockquote>
<h4 id="筛法求欧拉函数"><a class="markdownIt-Anchor" href="#筛法求欧拉函数">#</a> 筛法求欧拉函数</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> primes[N], cnt;     <span class="comment">// primes[]存储所有素数</span></span><br><span class="line"><span class="type">int</span> euler[N];           <span class="comment">// 存储每个数的欧拉函数</span></span><br><span class="line"><span class="type">bool</span> st[N];         <span class="comment">// st[x]存储x是否被筛掉</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_eulers</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    euler[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!st[i])</span><br><span class="line">        &#123;</span><br><span class="line">            primes[cnt ++ ] = i;</span><br><span class="line">            euler[i] = i - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; primes[j] &lt;= n / i; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> t = primes[j] * i;</span><br><span class="line">            st[t] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                euler[t] = euler[i] * primes[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            euler[t] = euler[i] * (primes[j] - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="快速幂"><a class="markdownIt-Anchor" href="#快速幂">#</a> 快速幂</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">使用很频繁，数论常客。</span><br><span class="line">数论很多题目都需要用到<span class="type">long</span> <span class="type">long</span></span><br><span class="line">求 m^k mod p，时间复杂度 <span class="built_in">O</span>(logk)。</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> k, <span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span> % p, t = m;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k&amp;<span class="number">1</span>) res = res * t % p;</span><br><span class="line">        t = t * t % p;</span><br><span class="line">        k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="扩展欧几里得算法"><a class="markdownIt-Anchor" href="#扩展欧几里得算法">#</a> 扩展欧几里得算法</h4>
<p>** 前置知识：** 欧几里得算法（上已证明，此处省略）、裴蜀定理（先礼后兵）。</p>
<blockquote>
<p>** 裴蜀定理：** 设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>∈</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">a,b \in Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a \neq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">b \neq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mo>=</mo><mo stretchy="false">{</mo><mi>x</mi><mi>a</mi><mo>+</mo><mi>y</mi><mi>b</mi><mtext>  </mtext><mi mathvariant="normal">∣</mi><mtext>  </mtext><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo>∈</mo><mi>Z</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">A = \{xa+yb\ \ |\ \ x,y\in Z\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord mathnormal">x</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord mathnormal">b</span><span class="mspace"> </span><span class="mspace"> </span><span class="mord">∣</span><span class="mspace"> </span><span class="mspace"> </span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mclose">}</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span> 中最小的正整数，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">(a,b)=d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 。</p>
<hr>
<p><strong>证明：</strong></p>
<p><strong>①</strong>首先证明 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 的存在性，即集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span> 中一定存在最小正整数。集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span> 中的元素为整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 的整系数线性组合，由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>×</mo><mi>a</mi><mo>+</mo><mn>0</mn><mo>×</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">1×a +0×b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><mi>a</mi><mo>+</mo><mn>0</mn><mo>×</mo><mi>b</mi></mrow><annotation encoding="application/x-tex">(-1) × a + 0 × b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 中必有一个正整数，所以集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span> 中至少存在一个正整数。由正整数的良序性，集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span> 中的所有正整数中必然存在一个最小值 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>，不妨设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>=</mo><mi>s</mi><mi>a</mi><mo>+</mo><mi>t</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">d = sa + tb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">b</span></span></span></span> ，其中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo separator="true">,</mo><mi>t</mi><mo>∈</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">s,t \in Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span>。</p>
<p><strong>②</strong>接着证明 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 的公因数。已知对于整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> ，存在整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>q</mi></mrow><annotation encoding="application/x-tex">q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi></mrow><annotation encoding="application/x-tex">r</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span></span></span></span> 使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mi>q</mi><mi>d</mi><mo>+</mo><mi>r</mi><mo separator="true">,</mo><mn>0</mn><mo>≤</mo><mi>r</mi><mo>&lt;</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">a = qd +r,0 \leq r &lt; d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 进而 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>=</mo><mi>a</mi><mo>−</mo><mi>q</mi><mi>d</mi><mo>=</mo><mi>a</mi><mo>−</mo><mi>q</mi><mo stretchy="false">(</mo><mi>s</mi><mi>a</mi><mo>+</mo><mi>t</mi><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>q</mi><mi>s</mi><mo stretchy="false">)</mo><mi>a</mi><mo>−</mo><mi>q</mi><mi>t</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">r = a - qd = a - q(sa + tb) = (1 - qs)a - qtb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mopen">(</span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">t</span><span class="mord mathnormal">b</span></span></span></span>。因此 $r\in A $，又因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi></mrow><annotation encoding="application/x-tex">A</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span></span></span></span> 中的最小正整数，且有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn><mo>≤</mo><mi>r</mi><mo>&lt;</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">0 \leq r &lt; d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>，所以只能是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">r = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>, 于是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo>=</mo><mi>q</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">a = qd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mord mathnormal">d</span></span></span></span>，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi mathvariant="normal">∣</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">d|a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord">∣</span><span class="mord mathnormal">a</span></span></span></span>，同理可知 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi mathvariant="normal">∣</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">d|b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">d</span><span class="mord">∣</span><span class="mord mathnormal">b</span></span></span></span>。</p>
<p><strong>③</strong>最后证明 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 的最大公因数。设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi></mrow><annotation encoding="application/x-tex">c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi></mrow><annotation encoding="application/x-tex">a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 的任何一个公因数，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi mathvariant="normal">∣</mi><mi>a</mi></mrow><annotation encoding="application/x-tex">c|a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">a</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi mathvariant="normal">∣</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">c | b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">b</span></span></span></span>，由于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>=</mo><mi>s</mi><mi>a</mi><mo>+</mo><mi>t</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">d = sa + tb</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">b</span></span></span></span>，故由定理 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 可知 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>c</mi><mi mathvariant="normal">∣</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">c|d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">c</span><span class="mord">∣</span><span class="mord mathnormal">d</span></span></span></span>，又因为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">d &gt;0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73354em;vertical-align:-0.0391em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，所以 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>≥</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">d\geq c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">c</span></span></span></span>。证毕。</p>
<hr>
<p><strong>推论</strong>：设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo>∈</mo><mi>Z</mi></mrow><annotation encoding="application/x-tex">a,b∈Z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span></span></span></span> ，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><mo separator="true">,</mo><mi>b</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">(a,b)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 时，一定存在整数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> , 使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mi>a</mi><mo>+</mo><mi>t</mi><mi>b</mi><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">sa+tb = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">s</span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>。</p>
<p r_0="">设<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>1</mn></msub><mo>∈</mo><mi>Z</mi><mo separator="true">,</mo><msub><mi>r</mi><mn>0</mn></msub><mo>&gt;</mo><msub><mi>r</mi><mn>1</mn></msub><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">r_0,r_1 \in Z , r_0 &gt; r_1 &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>r</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">(r_0,r_1) = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 时，假设存在整系数 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>t</mi></mrow><annotation encoding="application/x-tex">t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61508em;vertical-align:0em;"></span><span class="mord mathnormal">t</span></span></span></span> 使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><msub><mi>r</mi><mn>0</mn></msub><mo>+</mo><mi>t</mi><msub><mi>r</mi><mn>1</mn></msub><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">sr_0 + tr_1 = 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">s</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord mathnormal">t</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 上述等式两边对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mn>0</mn></msub></mrow><annotation encoding="application/x-tex">r_0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 取模，得到 sr_0 + tr_1 \equiv 1 \, \pmod</p>
<p r_0="">即 tr_1 \equiv 1\pmod</p>
<p r_0="">因此得到一个重要结论：t \equiv r_1^{-1}\pmod</p>
<p r_1="">同理得到：s \equiv r_0^{-1}\pmod</p>
<p>综上：<em>设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>r</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>1</mn></msub><mo>∈</mo><mi>Z</mi><mo separator="true">,</mo><msub><mi>r</mi><mn>0</mn></msub><mo>&gt;</mo><msub><mi>r</mi><mn>1</mn></msub><mo>&gt;</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">r_0,r_1 \in Z,r_0 &gt; r_1 &gt; 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7335400000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">Z</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.6891em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&gt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>r</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">(r_0,r_1)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 时，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>r</mi><mn>1</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><msub><mi>r</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_1^{-1}\pmod {r_0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.120547em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.433692em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>r</mi><mn>0</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_0^{-1}\pmod {r_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.120547em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.433692em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 一定存在，而且 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>r</mi><mn>1</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><msub><mi>r</mi><mn>0</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>t</mi><mo separator="true">,</mo><mtext> </mtext><msubsup><mi>r</mi><mn>0</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mi>s</mi></mrow><annotation encoding="application/x-tex">r_1^{-1}\pmod {r_0} = t,\ r_0^{-1}\pmod {r_1} = s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.120547em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.433692em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.120547em;vertical-align:-0.266308em;"></span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace"> </span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.433692em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span>。<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><msub><mi>r</mi><mn>0</mn></msub><mo separator="true">,</mo><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">(r_0,r_1)=1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>r</mi><mn>1</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><msub><mi>r</mi><mn>0</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_1^{-1}\pmod {r_0}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.120547em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.433692em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>r</mi><mn>0</mn><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><msub><mi>r</mi><mn>1</mn></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">r_0^{-1}\pmod {r_1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.120547em;vertical-align:-0.266308em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.854239em;"><span style="top:-2.433692em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span><span style="top:-3.1031310000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.266308em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 存在的充要条件。</em></p>
<p>裴蜀定理给出了求乘法逆元的途径。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 求x, y，使得ax + by = gcd(a, b)</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">exgcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> &amp;x, <span class="type">int</span> &amp;y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!b)</span><br><span class="line">    &#123;</span><br><span class="line">        x = <span class="number">1</span>; y = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> a;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">    y -= (a/b) * x;</span><br><span class="line">    <span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="中国剩余定理"><a class="markdownIt-Anchor" href="#中国剩余定理">#</a> 中国剩余定理</h4>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">LL exgcd(LL a,LL b,LL &amp;x,LL &amp;y)&#123;</span><br><span class="line">    if(!b)&#123;</span><br><span class="line">        x=1,y=0; </span><br><span class="line">        return a;</span><br><span class="line">    &#125;</span><br><span class="line">    LL d=exgcd(b,a%b,y,x);</span><br><span class="line">    y -= (a/b) * x;</span><br><span class="line">    return d;</span><br><span class="line">&#125;</span><br><span class="line">LL CRT(LL m[],LL r[])&#123;</span><br><span class="line">    LL m=1,ans=0;</span><br><span class="line">    for(int i=1;i&lt;=n;i++)M*=m[i];</span><br><span class="line">    for(int i=1;i&lt;=n;i++)&#123;</span><br><span class="line">        LL c=M/m[i],x,y;</span><br><span class="line">        exgcd(c,m[i],x,y);</span><br><span class="line">        ans=(ans+r[i]*c*x%M)%M;</span><br><span class="line">    &#125;</span><br><span class="line">    return (ans%M+M)%M;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="高斯消元"><a class="markdownIt-Anchor" href="#高斯消元">#</a> 高斯消元</h4>
<blockquote>
<p><strong>具体步骤说明：</strong></p>
<p>以下的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>①</mtext></mrow><annotation encoding="application/x-tex">①</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord">①</span></span></span></span> 到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>④</mtext></mrow><annotation encoding="application/x-tex">④</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord">④</span></span></span></span> 是一个循环操作，每次确定一列的第一位数字是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn></mrow><annotation encoding="application/x-tex">1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>⑤</mtext></mrow><annotation encoding="application/x-tex">⑤</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0em;vertical-align:0em;"></span><span class="mord">⑤</span></span></span></span> 是一个单独的循环操作，每次确定每一列上只有对应对角线上的数值是非负的（不考虑最后一列数值列）。</p>
<p>① 找到绝对值当前位对应绝对值最大的一行。</p>
<p>② 将该行换到能换的最上面。</p>
<p>③ 将改行对应的第一个非零值变为 1。</p>
<p>④ 将下面所有行对应的值全部消成 0。</p>
<p>⑤遍历每行后，变为一个上三角矩阵后，从下到上再次进行一定的操作，使之变为只有从左上到右下上有数据的矩阵。这样就方程的解就显而易见了。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// a[N][N]是增广矩阵</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gauss</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> c, r;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="number">0</span>, r = <span class="number">0</span>; c &lt; n; c ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = r;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r; i &lt; n; i ++ )   <span class="comment">// 找到绝对值最大的行</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[i][c]) &gt; <span class="built_in">fabs</span>(a[t][c]))</span><br><span class="line">                t = i;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[t][c]) &lt; eps) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = c; i &lt;= n; i ++ ) <span class="built_in">swap</span>(a[t][i], a[r][i]);      <span class="comment">// 将绝对值最大的行换到最顶端</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= c; i -- ) a[r][i] /= a[r][c];      <span class="comment">// 将当前行的首位变成1，一定要倒着进行。如何正着开始，第一个就会之间变为1，导致后面除的都是1。</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r + <span class="number">1</span>; i &lt; n; i ++ )       <span class="comment">// 用当前行将下面所有的列消成0</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[i][c]) &gt; eps) <span class="comment">// 浮点数存储0的时候会有精度问题，需要大于一个很小的数判断是否是0</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = n; j &gt;= c; j -- )</span><br><span class="line">                    a[i][j] -= a[r][j] * a[i][c];</span><br><span class="line"></span><br><span class="line">        r ++ ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (r &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r; i &lt; n; i ++ )</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[i][n]) &gt; eps)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">2</span>; <span class="comment">// 无解</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">// 有无穷多组解</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i -- )</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j ++ )</span><br><span class="line">            a[i][n] -= a[i][j] * a[j][n];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">// 有唯一解</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="递推法求组合数"><a class="markdownIt-Anchor" href="#递推法求组合数">#</a> 递推法求组合数</h4>
<blockquote>
<p>参考范围：题目的数据有 10 万组，询问的 ab 的范围为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>b</mi><mo>≤</mo><mi>a</mi><mo>≤</mo><mn>2000</mn></mrow><annotation encoding="application/x-tex">1 \leq b \leq a \leq 2000</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">2</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span></span></span></span>，以下方式处理复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>n</mi><mn>2</mn></msup></mrow><annotation encoding="application/x-tex">n^2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span>。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// c[a][b] 表示从a个苹果中选b个的方案数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i ++ )</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= i; j ++ )</span><br><span class="line">        <span class="keyword">if</span> (!j) c[i][j] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">else</span> c[i][j] = (c[i - <span class="number">1</span>][j] + c[i - <span class="number">1</span>][j - <span class="number">1</span>]) % mod;</span><br></pre></td></tr></table></figure>
<h4 id="通过预处理逆元的方式求组合数"><a class="markdownIt-Anchor" href="#通过预处理逆元的方式求组合数">#</a> 通过预处理逆元的方式求组合数</h4>
<blockquote>
<p>参考范围：题目的数据有 1 万组，询问 ab 的范围为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>b</mi><mo>≤</mo><mi>a</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1 \leq b \leq a \leq 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>，以下方式处理复杂度：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n \log n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span></span></span></span>。</p>
<p>此处要采用逆元，逆元的定义为：如果一个线性同余方程 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>x</mi><mo>≡</mo><mn>1</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>b</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ax\equiv 1\pmod b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">b</span><span class="mclose">)</span></span></span></span>，则称 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> 为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a \bmod b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span> 的逆元，记作 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mrow><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">a^{-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 首先预处理出所有阶乘取模的余数fact[N]，以及所有阶乘取模的逆元infact[N]</span></span><br><span class="line"><span class="comment">// 如果取模的数是质数，可以用费马小定理求逆元</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> k, <span class="type">int</span> p)</span>    <span class="comment">// 快速幂模板</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k &amp; <span class="number">1</span>) res = (LL)res * a % p;</span><br><span class="line">        a = (LL)a * a % p;</span><br><span class="line">        k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 预处理阶乘的余数和阶乘逆元的余数</span></span><br><span class="line">fact[<span class="number">0</span>] = infact[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i ++ )</span><br><span class="line">&#123;</span><br><span class="line">    fact[i] = (LL)fact[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">    infact[i] = (LL)infact[i - <span class="number">1</span>] * <span class="built_in">qmi</span>(i, mod - <span class="number">2</span>, mod) % mod;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="lucas定理"><a class="markdownIt-Anchor" href="#lucas定理">#</a> Lucas 定理</h4>
<blockquote>
<p>参考范围：题目的数据有 20 组，询问 ab 的范围为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>b</mi><mo>≤</mo><mi>a</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>18</mn></msup></mrow><annotation encoding="application/x-tex">1 \leq b \leq a \leq 10^{18}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span>，但是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><mo>≤</mo><mi>p</mi><mo>≤</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup></mrow><annotation encoding="application/x-tex">1\leq p\leq 10^5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78041em;vertical-align:-0.13597em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8304100000000001em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span></span></span></span>，采用以下方法处理后时间复杂度变为：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi><mi>log</mi><mo>⁡</mo><mi>n</mi><mi>log</mi><mo>⁡</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">p\log n\log p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span></span></span></span>。</p>
<p><strong>其公式为：</strong><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mi>a</mi><mi>b</mi></msubsup><mo>≡</mo><msubsup><mi>C</mi><mrow><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><mrow><mi>b</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow></msubsup><mo>∗</mo><msubsup><mi>C</mi><mrow><mi>a</mi><mi mathvariant="normal">/</mi><mi>p</mi></mrow><mrow><mi>b</mi><mi mathvariant="normal">/</mi><mi>p</mi></mrow></msubsup><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>p</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C^{b}_{a} \equiv C^{b \bmod p}_{a \bmod p} * C^{b/p}_{a/p} \pmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.404432em;vertical-align:-0.4374159999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9670159999999999em;"><span style="top:-2.3986920000000005em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mspace mtight" style="margin-right:0.3252777777777778em;"></span><span class="mbin mtight"><span class="mord mtight"><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">d</span></span></span><span class="mspace mtight" style="margin-right:0.3252777777777778em;"></span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mspace mtight" style="margin-right:0.3252777777777778em;"></span><span class="mbin mtight"><span class="mord mtight"><span class="mord mathrm mtight">m</span><span class="mord mathrm mtight">o</span><span class="mord mathrm mtight">d</span></span></span><span class="mspace mtight" style="margin-right:0.3252777777777778em;"></span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4374159999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.5599999999999998em;vertical-align:-0.5151999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0448em;"><span style="top:-2.3598em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">p</span></span></span></span><span style="top:-3.2198em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mtight">/</span><span class="mord mathnormal mtight">p</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5151999999999999em;"><span></span></span></span></span></span></span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">p</span><span class="mclose">)</span></span></span></span></p>
<p>** 证明：** 考虑 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>p</mi><mi>n</mi></mfrac></mstyle><mo fence="true">)</mo></mrow><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">\dbinom{p}{n} \bmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 的取值，注意到 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>p</mi><mi>n</mi></mfrac></mstyle><mo fence="true">)</mo></mrow><mo>=</mo><mfrac><mrow><mi>p</mi><mo stretchy="false">!</mo></mrow><mrow><mi>n</mi><mo stretchy="false">!</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">\dbinom{p}{n} = \frac{p!}{n!(p-n)!}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.452216em;vertical-align:-0.52em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mclose mtight">!</span><span class="mopen mtight">(</span><span class="mord mathnormal mtight">p</span><span class="mbin mtight">−</span><span class="mord mathnormal mtight">n</span><span class="mclose mtight">)</span><span class="mclose mtight">!</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mclose mtight">!</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.52em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>，分子的质因子分解中 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 的次数恰好为 1，因此只有当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">n=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 或 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><mi>p</mi></mrow><annotation encoding="application/x-tex">n=p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 的时候 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo stretchy="false">!</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">!</mo></mrow><annotation encoding="application/x-tex">n!(p-n)!</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">!</span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mclose">!</span></span></span></span> 的质因子分解中含有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>，因此 \dbinom{p}{n} \bmod p=[n = 0 \or n=p]。进而我们可以得出</p>
<p>(a+b)^p = \sum\limits_{n=0}^p\dbinom{p}{n} a^nb^{p-n}\equiv \sum\limits_{n=0}^p[n=0\or n=p]a^nb^{n-p}\equiv a^p +b^p \pmod p</p>
<p>注意过程中没有用到费马小定理，因此这一推导不仅适用于整数，亦适用于多项式。因此我们可以考虑二项式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>f</mi><mi>p</mi></msup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>a</mi><msup><mi>x</mi><mi>n</mi></msup><mo>+</mo><mi>b</mi><msup><mi>x</mi><mi>m</mi></msup><msup><mo stretchy="false">)</mo><mi>p</mi></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">f^p(x)=(ax^n + bx^m)^p \bmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 的结果</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mi>a</mi><msup><mi>x</mi><mi>n</mi></msup><mo>+</mo><mi>b</mi><msup><mi>x</mi><mi>m</mi></msup><msup><mo stretchy="false">)</mo><mi>p</mi></msup><mo>≡</mo><msup><mi>a</mi><mi>p</mi></msup><msup><mi>x</mi><mrow><mi>p</mi><mi>n</mi></mrow></msup><mo>+</mo><msup><mi>b</mi><mi>p</mi></msup><msup><mi>x</mi><mrow><mi>p</mi><mi>m</mi></mrow></msup><mo>≡</mo><mi>a</mi><msup><mi>x</mi><mrow><mi>p</mi><mi>n</mi></mrow></msup><mo>+</mo><mi>b</mi><msup><mi>x</mi><mrow><mi>p</mi><mi>m</mi></mrow></msup><mo>≡</mo><mi>f</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mi>p</mi></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">(ax^n + bx^m)^p \equiv a^p x^{pn} + b^px^{pm} \equiv ax^{pn}+bx^{pm}\equiv f(x^p)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.747722em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">a</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">p</span><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">p</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p>
<p>考虑二次式 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mn>1</mn><mo>+</mo><mi>x</mi><msup><mo stretchy="false">)</mo><mi>n</mi></msup><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">(1+x)^n \bmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">x</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span>，那么 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>n</mi><mi>m</mi></mfrac></mstyle><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\dbinom{n}{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.6769999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span> 就是求其在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">x^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.664392em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span> 次项的取值。使用上述引理，我们可以得到：</p>
<p n="" \bmod="" p="">(1+x)^n \equiv (1+x)^{p\lfloor n/p \rfloor}(1+x)^{n \bmod p} \equiv (1+x^p)^{\lfloor n/p \rfloor}(1+x)^</p>
<p>注意：前者只有在 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 的倍数位置才有取值，而后者最高次项为 $n \bmod p \leq p -1 $，因此这两部分的卷积在任何一个位置只有最多一种方式贡献取值，即在前者部分取 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>p</mi></mrow><annotation encoding="application/x-tex">p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span> 的倍数次项，后者部分取剩余项，即 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>n</mi><mi>m</mi></mfrac></mstyle><mo fence="true">)</mo></mrow><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi><mo>=</mo><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mrow><mo stretchy="false">⌊</mo><mi>n</mi><mi mathvariant="normal">/</mi><mi>p</mi><mo stretchy="false">⌋</mo></mrow><mrow><mo stretchy="false">⌊</mo><mi>m</mi><mi mathvariant="normal">/</mi><mi>p</mi><mo stretchy="false">⌋</mo></mrow></mfrac></mstyle><mo fence="true">)</mo></mrow><mo>∗</mo><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mrow><mi>n</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><mrow><mi>m</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow></mfrac></mstyle><mo fence="true">)</mo></mrow><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>p</mi></mrow><annotation encoding="application/x-tex">\dbinom{n}{m} \bmod p = \dbinom{\lfloor n/p \rfloor}{\lfloor m/p \rfloor} * \dbinom{n \bmod p}{m \bmod p} \bmod p</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span></span></span><span style="top:-3.6769999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">⌊</span><span class="mord mathnormal">m</span><span class="mord">/</span><span class="mord mathnormal">p</span><span class="mclose">⌋</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">⌊</span><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord mathnormal">p</span><span class="mclose">⌋</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span></span></span><span style="top:-3.6770000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">p</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8804400000000001em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">p</span></span></span></span></p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">若p是质数，则对于任意整数 <span class="number">1</span> &lt;= m &lt;= n，有：</span><br><span class="line">    <span class="built_in">C</span>(n, m) = <span class="built_in">C</span>(n % p, m % p) * <span class="built_in">C</span>(n / p, m / p) (mod p) </span><br><span class="line">    </span><br><span class="line"><span class="type">int</span> <span class="built_in">qmi</span>(<span class="type">int</span> a, <span class="type">int</span> k, <span class="type">int</span> p)  <span class="comment">// 快速幂模板</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">1</span> % p;</span><br><span class="line">    <span class="keyword">while</span> (k)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (k &amp; <span class="number">1</span>) res = (LL)res * a % p;</span><br><span class="line">        a = (LL)a * a % p;</span><br><span class="line">        k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> p)</span>  <span class="comment">// 通过定理求组合数C(a, b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; b) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    LL x = <span class="number">1</span>, y = <span class="number">1</span>;  <span class="comment">// x是分子，y是分母</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = a, j = <span class="number">1</span>; j &lt;= b; i --, j ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        x = (LL)x * i % p;</span><br><span class="line">        y = (LL) y * j % p;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> x * (LL)<span class="built_in">qmi</span>(y, p - <span class="number">2</span>, p) % p;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lucas</span><span class="params">(LL a, LL b, <span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (a &lt; p &amp;&amp; b &lt; p) <span class="keyword">return</span> <span class="built_in">C</span>(a, b, p);</span><br><span class="line">    <span class="keyword">return</span> (LL)<span class="built_in">C</span>(a % p, b % p, p) * <span class="built_in">lucas</span>(a / p, b / p, p) % p;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="分解质因数法求组合数"><a class="markdownIt-Anchor" href="#分解质因数法求组合数">#</a> 分解质因数法求组合数</h4>
<blockquote>
<p>高精度给他算出一个极大的组合数。可以之间按照定义来计算。但是按定义写会运行效率比较低且难写，一般是将之转为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>C</mi><mi>a</mi><mi>b</mi></msubsup></mrow><annotation encoding="application/x-tex">C_a^b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.096108em;vertical-align:-0.247em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> 的分解质因数，这样就只要实现一个高精度乘法即可。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">当我们需要求出组合数的真实值，而非对某个数的余数时，分解质因数的方式比较好用：</span><br><span class="line">    <span class="number">1.</span> 筛法求出范围内的所有质数</span><br><span class="line">    <span class="number">2.</span> 通过 <span class="built_in">C</span>(a, b) = a! / b! / (a - b)! 这个公式求出每个质因子的次数。 n! 中p的次数是 n / p + n / p^<span class="number">2</span> + n / p^<span class="number">3</span> + ...</span><br><span class="line">    <span class="number">3.</span> 用高精度乘法将所有质因子相乘</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> primes[N], cnt;     <span class="comment">// 存储所有质数</span></span><br><span class="line"><span class="type">int</span> sum[N];     <span class="comment">// 存储每个质数的次数</span></span><br><span class="line"><span class="type">bool</span> st[N];     <span class="comment">// 存储每个数是否已被筛掉</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_primes</span><span class="params">(<span class="type">int</span> n)</span>      <span class="comment">// 线性筛法求素数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!st[i]) primes[cnt ++ ] = i;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; primes[j] &lt;= n / i; j ++ )</span><br><span class="line">        &#123;</span><br><span class="line">            st[primes[j] * i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> p)</span>       <span class="comment">// 求n！中的次数</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (n)</span><br><span class="line">    &#123;</span><br><span class="line">        res += n / p;</span><br><span class="line">        n /= p;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mul</span><span class="params">(vector&lt;<span class="type">int</span>&gt; a, <span class="type">int</span> b)</span>       <span class="comment">// 高精度乘低精度模板</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    vector&lt;<span class="type">int</span>&gt; c;</span><br><span class="line">    <span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a.<span class="built_in">size</span>(); i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        t += a[i] * b;</span><br><span class="line">        c.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (t)</span><br><span class="line">    &#123;</span><br><span class="line">        c.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">        t /= <span class="number">10</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">get_primes</span>(a);  <span class="comment">// 预处理范围内的所有质数</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i ++ )     <span class="comment">// 求每个质因数的次数</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> p = primes[i];</span><br><span class="line">    sum[i] = <span class="built_in">get</span>(a, p) - <span class="built_in">get</span>(b, p) - <span class="built_in">get</span>(a - b, p);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">res.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i ++ )     <span class="comment">// 用高精度乘法将所有质因子相乘</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; sum[i]; j ++ )</span><br><span class="line">        res = <span class="built_in">mul</span>(res, primes[i]);</span><br></pre></td></tr></table></figure>
<h4 id="卡特兰数"><a class="markdownIt-Anchor" href="#卡特兰数">#</a> 卡特兰数</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">给定n个<span class="number">0</span>和n个<span class="number">1</span>，它们按照某种顺序排成长度为<span class="number">2</span>n的序列，满足任意前缀中<span class="number">0</span>的个数都不少于<span class="number">1</span>的个数的序列的数量为： <span class="built_in">Cat</span>(n) = <span class="built_in">C</span>(<span class="number">2</span>n, n) / (n + <span class="number">1</span>)</span><br><span class="line">很多方案数都是卡特兰数。</span><br></pre></td></tr></table></figure>
<h4 id="容斥原理"><a class="markdownIt-Anchor" href="#容斥原理">#</a> 容斥原理</h4>
<blockquote>
<p>** 定义：** 设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>U</mi></mrow><annotation encoding="application/x-tex">U</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">U</span></span></span></span> 种元素有 n 种不同的属性，而第 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 种属性称为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，拥有属性 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">P_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 的元素构成集合 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>S</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">S_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，那么</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">∣</mo><msubsup><mo>⋃</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>S</mi><mi>i</mi></msub><mo fence="true">∣</mo></mrow><mo>=</mo><munder><mo>∑</mo><mi>i</mi></munder><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>i</mi></msub><mi mathvariant="normal">∣</mi><mo>−</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo>&lt;</mo><mi>j</mi></mrow></munder><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>i</mi></msub><mo>∩</mo><msub><mi>S</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mo>+</mo><munder><mo>∑</mo><mrow><mi>i</mi><mo>&lt;</mo><mi>j</mi><mo>&lt;</mo><mi>k</mi></mrow></munder><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mi>i</mi></msub><mo>∩</mo><msub><mi>S</mi><mi>j</mi></msub><mo>∩</mo><msub><mi>S</mi><mi>k</mi></msub><mi mathvariant="normal">∣</mi><mo>−</mo><mo>…</mo><mspace linebreak="newline"></mspace><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msup><munder><mo>∑</mo><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>&lt;</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow></munder><mrow><mo fence="true">∣</mo><msubsup><mo>⋂</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><msub><mi>S</mi><msub><mi>a</mi><mi>i</mi></msub></msub><mo fence="true">∣</mo></mrow><mo>+</mo><mo>⋯</mo><mo>+</mo><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msup><mi mathvariant="normal">∣</mi><msub><mi>S</mi><mn>1</mn></msub><mo>∩</mo><mo>⋯</mo><mo>∩</mo><msub><mi>S</mi><mi>n</mi></msub><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">\left\vert \bigcup\limits_{i=1}^n S_i\right\vert = \sum\limits_i|S_i|-\sum\limits_{i&lt;j}|S_i\cap S_j|+\sum\limits_{i&lt;j&lt;k}|S_i\cap S_j \cap S_k|-\dots\\+(-1)^{m-1} \sum\limits_{a_i&lt;a_{i+1}}\left\vert\bigcap\limits_{i=1}^m S_{a_i}\right\vert+\dots+(-1)^{n-1}|S_1\cap \dots \cap S_n|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4576390000000004em;vertical-align:-0.9776689999999999em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">⋃</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9776689999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.727674em;vertical-align:-0.977669em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.750005em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.977669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.863782em;vertical-align:-1.113777em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7500050000000001em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.113777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.888226em;vertical-align:-1.138221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7500050000000001em;"><span style="top:-2.097887em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">&lt;</span><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.138221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.12em;vertical-align:0em;"></span><span class="minner">…</span></span><span class="mspace newline"></span><span class="base"><span class="strut" style="height:2.57174em;vertical-align:-1.09177em;"></span><span class="mord">+</span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7500050000000001em;"><span style="top:-2.149995em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mrel mtight">&lt;</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32808571428571426em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.20252142857142857em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.09177em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">⋂</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9776689999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139199999999997em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">−</span><span class="mord">1</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∩</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span></span></span></span></p>
<p>即</p>
<p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathsize="1.2em"><mrow><mo fence="true">∣</mo><msubsup><mo>⋃</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>S</mi><mi>i</mi></msub><mo fence="true">∣</mo></mrow><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>m</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><mo>−</mo><mn>1</mn><msup><mo stretchy="false">)</mo><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></msup><munder><mo>∑</mo><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>&lt;</mo><msub><mi>a</mi><mrow><mi>i</mi><mo>+</mo><mn>1</mn></mrow></msub></mrow></munder><mrow><mo fence="true">∣</mo><msubsup><mo>⋂</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>m</mi></msubsup><msub><mi>S</mi><msub><mi>a</mi><mi>i</mi></msub></msub><mo fence="true">∣</mo></mrow></mstyle></mrow><annotation encoding="application/x-tex">\large\left\vert\bigcup\limits_{i=1}^n S_i\right\vert=\sum\limits_{m=1}^n(-1)^{m-1}\sum\limits_{a_i &lt; a_{i+1}}\left\vert\bigcap\limits_{i=1}^m S_{a_i}\right\vert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.03599em;vertical-align:-1.200025em;"></span><span class="minner sizing reset-size6 size7"><span class="mopen sizing reset-size7 size6"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8359650000000003em;"><span style="top:-1.405975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.0069749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.607975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.2089749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.234965em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.8359650000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.200025em;"><span></span></span></span></span></span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.337045em;"><span style="top:-2.344315em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol small-op">⋃</span></span></span><span style="top:-4.150005em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9556850000000001em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.28968000000000005em;"><span style="top:-2.65em;margin-left:-0.05764em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size7 size6"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8359650000000003em;"><span style="top:-1.405975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.0069749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.607975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.2089749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.234965em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.8359650000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.200025em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel sizing reset-size6 size7">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.145841em;vertical-align:-1.3098759999999998em;"></span><span class="mop op-limits sizing reset-size6 size7"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.337045em;"><span style="top:-2.3499950000000003em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-4.150005em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.950005em;"><span></span></span></span></span></span><span class="mopen sizing reset-size6 size7">(</span><span class="mord sizing reset-size6 size7">−</span><span class="mord sizing reset-size6 size7">1</span><span class="mclose sizing reset-size6 size7"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7926266666666667em;"><span style="top:-3.1629999999999994em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits sizing reset-size6 size7"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7500050000000001em;"><span style="top:-2.3499950000000003em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4501600000000003em;margin-left:0em;margin-right:0.0625em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14983999999999992em;"><span></span></span></span></span></span></span><span class="mrel mtight">&lt;</span><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34480000000000005em;"><span style="top:-2.4501600000000003em;margin-left:0em;margin-right:0.0625em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2123374999999999em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0915633333333332em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner sizing reset-size6 size7"><span class="mopen sizing reset-size7 size6"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8359650000000003em;"><span style="top:-1.405975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.0069749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.607975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.2089749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.234965em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.8359650000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.200025em;"><span></span></span></span></span></span></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.337045em;"><span style="top:-2.344315em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.2000050000000004em;"><span class="pstrut" style="height:3.2em;"></span><span><span class="mop op-symbol small-op">⋂</span></span></span><span style="top:-4.150005em;margin-left:0em;"><span class="pstrut" style="height:3.2em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9556850000000001em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.13704em;"><span style="top:-2.6499999999999995em;margin-left:-0.05764em;margin-right:0.04166666666666667em;"><span class="pstrut" style="height:2.8em;"></span><span class="sizing reset-size7 size4 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.4501600000000003em;margin-left:0em;margin-right:0.0625em;"><span class="pstrut" style="height:2.6em;"></span><span class="sizing reset-size4 size2 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14983999999999992em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2498933333333333em;"><span></span></span></span></span></span></span><span class="mclose sizing reset-size7 size6"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8359650000000003em;"><span style="top:-1.405975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.0069749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.607975em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.2089749999999997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.234965em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.8359650000000003em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.200025em;"><span></span></span></span></span></span></span></span></span></span></span></p>
<p>** 证明：** 采用二项式定理</p>
</blockquote>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">枚举所有的情况一种方便的方式就是采用位运算来实现。</span><br></pre></td></tr></table></figure>
<h4 id="nim游戏"><a class="markdownIt-Anchor" href="#nim游戏">#</a> NIM 游戏</h4>
<blockquote>
<p>** 证明：** 为了证明代码段的定理，只需要证明下面三个定理：</p>
<ul>
<li>定理 1：没有后继状态的状态是必败状态。</li>
<li>定理 2：对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>a</mi><mn>2</mn></msub><mo>⋯</mo><mo>⊕</mo><msub><mi>a</mi><mi>n</mi></msub><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_1\oplus a_2 \dots\oplus a_n\neq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 的局面，一定存在某种移动使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>a</mi><mn>2</mn></msub><mo>⊕</mo><mo>⋯</mo><mo>⊕</mo><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_1\oplus a_2\oplus\dots\oplus a_n = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。</li>
<li>定理 3：对于 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>a</mi><mn>2</mn></msub><mo>⊕</mo><mo>⋯</mo><mo>⊕</mo><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_1\oplus a_2\oplus\dots\oplus a_n = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 的局面，一定不存在某种移动使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>a</mi><mn>2</mn></msub><mo>⊕</mo><mo>⋯</mo><mo>⊕</mo><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_1\oplus a_2\oplus\dots\oplus a_n = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。</li>
</ul>
<p>对于定理 1，没有后继状态的状态只有一个，即全 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 局面。此时 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>a</mi><mn>2</mn></msub><mo>⊕</mo><mo>⋯</mo><mo>⊕</mo><msub><mi>a</mi><mi>n</mi></msub><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_1\oplus a_2\oplus\dots\oplus a_n = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。</p>
<p>对于定理 2，不妨假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>1</mn></msub><mo>⊕</mo><msub><mi>a</mi><mn>2</mn></msub><mo>⊕</mo><mo>⋯</mo><mo>⊕</mo><msub><mi>a</mi><mi>n</mi></msub><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_1\oplus a_2\oplus\dots\oplus a_n \neq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>。如果我们要将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 改为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">a_i&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>，则 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><msub><mi>a</mi><mi>i</mi></msub><mo>⊕</mo><mi>k</mi></mrow><annotation encoding="application/x-tex">a_i&#x27;=a_i\oplus k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>。（毕竟异或最后的结果非 0，必定存在一个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，使得 $ 0&lt;a_i’&lt;a_i\oplus k$）</p>
<p>对于定理 3，如果我们要将 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">a_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 改为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>a</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">a_i&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>，则根据异或运算律可以得出 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>=</mo><msubsup><mi>a</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">a_i=a_i&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span></span></span></span>（假设变换后异或仍为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，然后两个 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 的式子异或一起结果还是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0</mn></mrow><annotation encoding="application/x-tex">0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，两两配对异或消除会剩下 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mi>i</mi></msub><mo>⊕</mo><msubsup><mi>a</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">a_i \oplus a_i&#x27; = 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span>，这样只能两个相等了，显然矛盾捏），因而这不是个合法的移动。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">给定N堆物品，第i堆物品有Ai个。两名玩家轮流行动，每次可以任选一堆，取走任意多个物品，可把一堆取光，但不能不取。取走最后一件物品者获胜。两人都采取最优策略，问先手是否必胜。</span><br><span class="line"></span><br><span class="line">我们把这种游戏称为NIM博弈。把游戏过程中面临的状态称为局面。整局游戏第一个行动的称为先手，第二个行动的称为后手。若在某一局面下无论采取何种行动，都会输掉游戏，则称该局面必败。</span><br><span class="line">所谓采取最优策略是指，若在某一局面下存在某种行动，使得行动后对面面临必败局面，则优先采取该行动。同时，这样的局面被称为必胜。我们讨论的博弈问题一般都只考虑理想情况，即两人均无失误，都采取最优策略行动时游戏的结果。</span><br><span class="line">NIM博弈不存在平局，只有先手必胜和先手必败两种情况。</span><br><span class="line"></span><br><span class="line">定理： NIM博弈先手必胜，当且仅当 A1 ^ A2 ^ … ^ An != <span class="number">0</span></span><br></pre></td></tr></table></figure>
<h4 id="公平组合游戏icg"><a class="markdownIt-Anchor" href="#公平组合游戏icg">#</a> 公平组合游戏 ICG</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">若一个游戏满足：</span><br><span class="line">	<span class="number">1.</span>由两名玩家交替行动；</span><br><span class="line">	<span class="number">2.</span>在游戏进程的任意时刻，可以执行的合法行动与轮到哪名玩家无关；</span><br><span class="line">	<span class="number">3.</span>不能行动的玩家判负；</span><br><span class="line">则称该游戏为一个公平组合游戏。</span><br><span class="line">NIM博弈属于公平组合游戏，但城建的棋类游戏，比如围棋，就不是公平组合游戏。因为围棋交战双方分别只能落黑子和白子，胜负判定也比较复杂，不满足条件<span class="number">2</span>和条件<span class="number">3</span>。</span><br></pre></td></tr></table></figure>
<h4 id="有向图游戏"><a class="markdownIt-Anchor" href="#有向图游戏">#</a> 有向图游戏</h4>
<blockquote>
<p>SG 定理（适用于<strong>任何公平的两人游戏</strong>，常被用于决定游戏的输赢结果）：</p>
<p>对于状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> 和它的所有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span> 个后继状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>y</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>y</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>y</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">y_1,y_2,\dots,y_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，定义 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>G</mi></mrow><annotation encoding="application/x-tex">SG</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span></span></span></span> 函数：</p>
<p SG(y_1),SG(y_2),\dots,SG(y_k)\="">​			SG(x)=\operatorname{mex}\</p>
<p>而对于由 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span> 个有向图游戏组成的组合游戏，设它们的起点分别为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mn>1</mn></msub><mo separator="true">,</mo><msub><mi>s</mi><mn>2</mn></msub><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msub><mi>s</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">s_1,s_2,\dots,s_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> ，则有定理：<strong>当且仅当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>⊕</mo><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>⊕</mo><mo>⋯</mo><mo>⊕</mo><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>n</mi></msub><mo stretchy="false">)</mo><mo mathvariant="normal">≠</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">SG(s_1) \oplus SG(s_2) \oplus \dots \oplus SG(s_n) \neq 0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 时，这个游戏是先手必胜的。同时，这是这一个组合游戏的游戏状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> 的 SG 值</strong>。</p>
<p><strong>证明：</strong></p>
<p>数学归纳法。</p>
<p>我们假设对于游戏状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">x&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span>，其当前节点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>s</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi>s</mi><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">s_1&#x27;,s_2&#x27;,\dots,s_n&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span>（对于任意 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>i</mi></mrow><annotation encoding="application/x-tex">i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65952em;vertical-align:0em;"></span><span class="mord mathnormal">i</span></span></span></span> 有 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mi>i</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>&lt;</mo><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_i&#x27;&lt;s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.010556em;vertical-align:-0.258664em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)，皆满足 SG 定理。</p>
<p>显然当 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mn>1</mn></msub><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mn>2</mn></msub><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mo>⋯</mo><mo>=</mo><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>n</mi></msub><msup><mo stretchy="false">)</mo><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo>=</mo><mn>0</mn></mrow><annotation encoding="application/x-tex">SG(s_1)&#x27; = SG(s_2)&#x27;=\dots=SG(s_n)&#x27;=0</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span></span></span></span> 时，该状态能满足 SG 定理。</p>
<p>那么只需要证明对于游戏状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span>，其当前节点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>s</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo separator="true">,</mo><msubsup><mi>s</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><msubsup><mi>s</mi><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup></mrow><annotation encoding="application/x-tex">s_1&#x27;,s_2&#x27;,\dots,s_n&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span></span> 符合 SG 定理，SG 定理便成立。</p>
<p>事实上这一个状态可以看作一个 Nim 游戏，对于某个节点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>，它可以移动到任意一个 SG 值比它小或比它大的节点。</p>
<p>在有向图游戏中，当一方将某一节点 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">s_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span> 移动到 SG 值比它大的节点时，另一方可以移动回和 SG 值和 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">SG</mi><mo>⁡</mo><mo stretchy="false">(</mo><msub><mi>s</mi><mi>i</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\operatorname{SG}(s_i)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">S</span><span class="mord mathrm">G</span></span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 一样的节点，所以向 SG 值较大节点移动是无效操作。</p>
<p>当移动到 SG 值较小的节点时，情况则会和 Nim 游戏一样，能够到达任何一个游戏状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">x&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 使得 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msubsup><mi>s</mi><mn>1</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>⊕</mo><msubsup><mi>s</mi><mn>2</mn><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo>⊕</mo><mo>⋯</mo><mo>⊕</mo><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msubsup><mi>s</mi><mi>n</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msubsup><mo stretchy="false">)</mo><mo>&lt;</mo><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><mi>X</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">SG(x&#x27;)=SG(s_1&#x27;\oplus s_2&#x27;\oplus \dots\oplus SG(s_n&#x27;)&lt;SG(X))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.001892em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">&lt;</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span>（注意到前文已经假设 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></mrow><annotation encoding="application/x-tex">x&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.751892em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span> 满足 SG 定理），但到达不了 SG 值为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mn>1</mn></msub><mo stretchy="false">)</mo><mo>⊕</mo><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mn>2</mn></msub><mo stretchy="false">)</mo><mo>⊕</mo><mo>⋯</mo><mo>⊕</mo><mi>S</mi><mi>G</mi><mo stretchy="false">(</mo><msub><mi>s</mi><mi>n</mi></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">SG(s_1)\oplus SG(s_2)\oplus \dots\oplus SG(s_n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⊕</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">G</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的节点。</p>
<p>所以状态 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>x</mi></mrow><annotation encoding="application/x-tex">x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">x</span></span></span></span> 符合 SG 定理。</p>
</blockquote>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">给定一个有向无环图，图中有一个唯一的起点，在起点上放有一枚棋子。两名玩家交替地把这枚棋子沿有向边进行移动，每次可以移动一步，无法移动者判负。该游戏被称为有向图游戏。</span><br><span class="line">任何一个公平组合游戏都可以转化为有向图游戏。具体方法是，把每个局面看成图中的一个节点，并且从每个局面向沿着合法行动能够到达的下一个局面连有向边。</span><br><span class="line">这个游戏取胜采用了SG定理。</span><br></pre></td></tr></table></figure>
<h4 id="mex运算"><a class="markdownIt-Anchor" href="#mex运算">#</a> Mex 运算</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">设S表示一个非负整数集合。定义<span class="built_in">mex</span>(S)为求出不属于集合S的最小非负整数的运算，即：</span><br><span class="line"><span class="built_in">mex</span>(S) = min&#123;x&#125;, x属于自然数，且x不属于S</span><br><span class="line">例如 <span class="built_in">mex</span>(&#123;<span class="number">0</span>,<span class="number">2</span>,<span class="number">4</span>&#125;) = <span class="number">1</span>, <span class="built_in">mex</span>(&#123;<span class="number">1</span>,<span class="number">2</span>&#125;) = <span class="number">0</span>。</span><br></pre></td></tr></table></figure>
<h4 id="sg函数"><a class="markdownIt-Anchor" href="#sg函数">#</a> SG 函数</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">在有向图游戏中，对于每个节点x，设从x出发共有k条有向边，分别到达节点y1, y2, …, yk，定义<span class="built_in">SG</span>(x)为x的后继节点y1, y2, …, yk 的SG函数值构成的集合再执行<span class="built_in">mex</span>(S)运算的结果，即：</span><br><span class="line"><span class="built_in">SG</span>(x) = <span class="built_in">mex</span>(&#123;<span class="built_in">SG</span>(y1), <span class="built_in">SG</span>(y2), …, <span class="built_in">SG</span>(yk)&#125;)</span><br><span class="line">特别地，整个有向图游戏G的SG函数值被定义为有向图游戏起点s的SG函数值，即<span class="built_in">SG</span>(G) = <span class="built_in">SG</span>(s)。</span><br></pre></td></tr></table></figure>
<h4 id="有向图游戏的和"><a class="markdownIt-Anchor" href="#有向图游戏的和">#</a> 有向图游戏的和</h4>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line">设G1, G2, …, Gm 是m个有向图游戏。定义有向图游戏G，它的行动规则是任选某个有向图游戏Gi，并在Gi上行动一步。G被称为有向图游戏G1, G2, …, Gm的和。</span><br><span class="line">有向图游戏的和的SG函数值等于它包含的各个子游戏SG函数值的异或和，即：</span><br><span class="line"><span class="built_in">SG</span>(G) = <span class="built_in">SG</span>(G1) ^ <span class="built_in">SG</span>(G2) ^ … ^ <span class="built_in">SG</span>(Gm)</span><br><span class="line">    </span><br><span class="line">定理：</span><br><span class="line">    有向图游戏的某个局面必胜，当且仅当该局面对应节点的SG函数值大于<span class="number">0</span>。</span><br><span class="line">	有向图游戏的某个局面必败，当且仅当该局面对应节点的SG函数值等于<span class="number">0</span>。</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>模板类型</category>
      </categories>
      <tags>
        <tag>C++模板</tag>
      </tags>
  </entry>
  <entry>
    <title>推荐一些实用的软件水一下</title>
    <url>/2022/05/09/%E5%BA%86%E7%94%9F+%E6%8E%A8%E8%8D%90%E4%B8%80%E4%BA%9B%E5%AE%9E%E7%94%A8%E7%9A%84%E8%BD%AF%E4%BB%B6%E6%B0%B4%E4%B8%80%E4%B8%8B/</url>
    <content><![CDATA[<h1 id="推荐一些实用的软件水一下"><a class="markdownIt-Anchor" href="#推荐一些实用的软件水一下">#</a> 推荐一些实用的软件水一下</h1>
<p><mark>1.typora</mark><br>
 无可挑剔的 markdown 书写神器 <s>（除了收费）</s></p>
<p><mark>2.SAI2</mark><br>
 超好用的板绘神器，如果觉得字写得不好，在上面写感觉会好看许多（许多好看的二次元老婆都是基于它的存在哦！）</p>
<p><mark>3.VS Code</mark><br>
 微软开发的开源码农神器，同时内置大量插件，能让写代码的环境更加舒适（新手老鸟都适合）</p>
<p><mark>4.eagle</mark><br>
 超强的图片整理软件，c 图超方便，分分钟建立独属于自己的图库</p>
<p><mark>5.Listary</mark><br>
 作为不会好好整理文件夹的懒狗，不必忍受搜索时那条蜗牛进度条，有了它，快速检索。</p>
<p><mark>6.Visual Studio</mark></p>
<p>免费版就够用了，相较于 vscode 对新手更加友好，环境非常好配，同时写多文件项目时的项目管理上个人感觉比 vscode 更加舒服。当然平常刷刷算法题，就单文件还是 vscode 更加轻便。</p>
<p><mark>7.Uninstall Tool</mark></p>
<p>超级强大的软件卸载软件，还能删除对应软件生成的注册表，卸载 autoCAD 的痛谁懂啊。当然这款软件还有免费的低配版，大家可以自行 google。</p>
<p><s>有没有一种可能，我如果推荐软件的个数到了 20+，这篇文章就不能算水文了</s></p>
]]></content>
      <categories>
        <category>偷懒合集(bushi)</category>
      </categories>
  </entry>
  <entry>
    <title>建站小记</title>
    <url>/2022/05/01/%E5%BB%BA%E7%AB%99%E5%B0%8F%E8%AE%B0/</url>
    <content><![CDATA[]]></content>
  </entry>
  <entry>
    <title>提供一些不错的网址</title>
    <url>/2022/05/08/%E6%8F%90%E4%BE%9B%E4%B8%80%E4%BA%9B%E4%B8%8D%E9%94%99%E7%9A%84%E7%BD%91%E5%9D%80/</url>
    <content><![CDATA[<h1 id="提供一些不错的网址"><a class="markdownIt-Anchor" href="#提供一些不错的网址">#</a> 提供一些不错的网址</h1>
<p><mark>1. 超越几何画板的存在</mark></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">链接:&lt;https:<span class="comment">//www.geogebra.org/&gt;</span></span><br></pre></td></tr></table></figure>
<p><mark>2. 免费学习算法的好网站，包罗万象</mark></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">链接：&lt;https:<span class="comment">//www.w3school.com.cn/&gt;</span></span><br></pre></td></tr></table></figure>
<p><mark>3. 免费的电子图书馆</mark>（现在注册后会拥有一个专属的域名，野火烧不尽，春风吹又生）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">链接：&lt;https:<span class="comment">//zh.z-lib.org/&gt;</span></span><br></pre></td></tr></table></figure>
<hr>
<p>2023 年 4 月 22 日补充更新</p>
<p><s>首先加了图片封面</s></p>
<p><mark>4、苦学生的刷题时间</mark>（交答案会有错误数据点的回馈，较其他算法平台刷题比较省时间，不过力扣只能用来夯实基础）<em>欢迎加我好友：lao-q-666</em></p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">https:<span class="comment">//leetcode.cn/</span></span><br></pre></td></tr></table></figure>
<p><mark>5、世界上最大的开源网站</mark>（试问有哪个计算机专业的人不知道？里面有些挺有意思的项目，感兴趣可以下下来玩玩）<s>不会翻墙可能不太好进入</s></p>
<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://github.com/</span><br></pre></td></tr></table></figure>
<p><mark>6、AI 绘图魔法口诀</mark>（最近下了个本地 stable diffusion 来画画图，感觉这网站的口诀挺不错的，同时 xp 覆盖面也挺广的）</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line">https:<span class="comment">//aiguidebook.top/index.php/%e4%bb%8e%e9%9b%b6%e5%bc%80%e5%a7%8b%e7%9a%84%e9%ad%94%e5%af%bc%e4%b9%a6-%e5%85%83%e7%b4%a0%e6%b3%95%e5%85%b8/</span></span><br></pre></td></tr></table></figure>
<p><em><mark>以上 qwq，未完待续。。。。</mark></em></p>
]]></content>
      <categories>
        <category>偷懒合集(bushi)</category>
      </categories>
  </entry>
</search>
